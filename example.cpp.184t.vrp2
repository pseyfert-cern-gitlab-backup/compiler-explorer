
;; Function main (main, funcdef_no=4728, decl_uid=104327, cgraph_uid=998, symbol_order=1458) (executed once)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after VRP:



main ()
{
  <bb 2> [local count: 1073741825]:
  # DEBUG BEGIN_STMT
  return 0;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_, funcdef_no=5349, decl_uid=109699, cgraph_uid=1618, symbol_order=2078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
;; 2 succs { 3 4 }
;; 3 succs { 14 }
;; 4 succs { 15 5 }
;; 5 succs { 15 6 }
;; 6 succs { 14 7 }
;; 7 succs { 8 11 }
;; 8 succs { 10 9 }
;; 9 succs { 13 }
;; 10 succs { 12 }
;; 11 succs { 10 12 }
;; 12 succs { 9 13 }
;; 13 succs { 1 }
;; 14 succs { 15 }
;; 15 succs { 7 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_5 -> { _37 }
__position_6 -> { __position_10 }
_7 -> { _37 }
_17 -> { _41 }
__len_20 -> { __len_46 }
iftmp.0_25 -> { iftmp.0_36 }
_34 -> { _37 }
__len_42 -> { __len_46 }
__position_55 -> { __position_10 }
__position_68 -> { __position_10 }
_78 -> { _37 }
this_83 -> { this_4(D) }
Incremental SSA update started at block: 2
Number of blocks in CFG: 18
Number of blocks to update: 15 ( 83%)



Value ranges after VRP:

_1: [0, +INF]
_2: VARYING
this_4(D): ~[0B, 0B]
_5: [_37, _37]  EQUIVALENCES: { __position_10 _37 __position_55 } (3 elements)
__position_6: ~[_38, _38]  EQUIVALENCES: { __position_10 } (1 elements)
_7: ~[0B, 0B]  EQUIVALENCES: { _37 _78 } (2 elements)
__position_10: VARYING
_17: ~[0, 0]  EQUIVALENCES: { _41 } (1 elements)
__len_20: [_17, +INF]  EQUIVALENCES: { __len_46 } (1 elements)
__len_21: ~[0, 0]
__len_22: [1, 1]
_24: VARYING
iftmp.0_25: ~[0B, 0B]  EQUIVALENCES: { iftmp.0_36 } (1 elements)
.MEM_27: VARYING
.MEM_28: VARYING
_34: ~[0B, 0B]  EQUIVALENCES: { _37 } (1 elements)
_35: ~[0B, 0B]
iftmp.0_36: VARYING
_37: VARYING
_38: VARYING
_39: VARYING
_40: [-4611686018427387904, 4611686018427387903]
_41: ~[4611686018427387904, 13835058055282163711]
__len_42: ~[0, 0]  EQUIVALENCES: { __len_20 __len_46 } (2 elements)
prephitmp_45: [2, 18446744073709551614]
__len_46: [0, +INF]
.MEM_49: VARYING
__position_55: [_37, _37]  EQUIVALENCES: { __position_10 _37 } (2 elements)
_59: [0, +INF]
_62: VARYING
_63: VARYING
__len_64: [_17, +INF]  EQUIVALENCES: { __len_46 } (1 elements)
.MEM_65: VARYING
_66: VARYING
_67: [0, +INF]
__position_68: ~[_37, _37]  EQUIVALENCES: { __position_10 } (1 elements)
_69: [0, +INF]
vect_cst__70: VARYING
.MEM_76: VARYING
_78: ~[__position_68, __position_68]  EQUIVALENCES: { _37 } (1 elements)
_79: [0, +INF]
vectp.74_80: ~[0B, 0B]
prephitmp_81: VARYING
this_83: ~[0B, 0B]  EQUIVALENCES: { this_4(D) } (1 elements)
_84: VARYING
_85: VARYING
_86: VARYING
_87: [0, +INF]


threading bb 8 kills 1 stmts
threading bb 8 up to 16 stmts
threading bb 11 kills 1 stmts
threading bb 11 up to 16 stmts
threading bb 8 kills 1 stmts
threading bb 8 up to 16 stmts
threading bb 11 kills 1 stmts
threading bb 11 up to 16 stmts
Removing basic block 3
Removing basic block 16
Removing basic block 17
std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (struct vector * const this, struct iterator __position, const short unsigned int & __args#0)
{
  vector(2) long unsigned int * vectp.74;
  vector(2) long unsigned int * {ref-all} vectp_this.73;
  const long unsigned int D.112534;
  const size_type __len;
  size_type D.112533;
  size_type __n;
  short unsigned int * D.112524;
  short unsigned int * const __position;
  short unsigned int * __new_finish;
  short unsigned int * __old_finish;
  short unsigned int * __old_start;
  long unsigned int _1;
  short unsigned int * _2;
  short unsigned int _24;
  short unsigned int * _35;
  short unsigned int * iftmp.0_36;
  short unsigned int * _37;
  short unsigned int * _38;
  long int _39;
  long int _40;
  long unsigned int _41;
  long unsigned int prephitmp_45;
  long unsigned int _59;
  long int _62;
  short unsigned int * _63;
  vector(2) long unsigned int _66;
  long unsigned int _67;
  long unsigned int _69;
  vector(2) long unsigned int vect_cst__70;
  long unsigned int _79;
  short unsigned int * prephitmp_81;
  short unsigned int * _84;
  long int _85;
  short unsigned int * _86;
  long unsigned int _87;

  <bb 2> [local count: 1073741825]:
  __position_10 = MEM[(struct __normal_iterator *)&__position];
  # DEBUG __position => __position_10
  # DEBUG this => this_4(D)
  # DEBUG __n => 1
  # DEBUG __n => 1
  # DEBUG __s => "vector::_M_realloc_insert"
  # DEBUG INLINE_ENTRY _M_check_len
  # DEBUG D#103 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#103
  # DEBUG D#102 => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#99 => &D#101->D.90158
  # DEBUG this => D#99
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#100 => &MEM[(const struct _Vector_base *)D#102]._M_impl
  # DEBUG this => NULL
  # DEBUG D#98 => D#100
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __a => D#98
  # DEBUG D#97 => D#98
  # DEBUG D#72 => D#97
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  _37 = MEM[(short unsigned int * *)this_4(D)];
  # DEBUG D#69 => this_4(D)
  _38 = MEM[(short unsigned int * *)this_4(D) + 8B];
  # DEBUG D#69 => this_4(D)
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#69
  # DEBUG this => D#69
  _39 = _38 - _37;
  _40 = _39 /[ex] 2;
  _41 = (long unsigned int) _40;
  # DEBUG D#69 => this_4(D)
  # DEBUG D#69 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG D#69 => this_4(D)
  # DEBUG D#69 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG __a => &D.112534
  # DEBUG __b => &__n
  # DEBUG INLINE_ENTRY max
  _62 = __position_10 - _37;
  if (_41 == 0)
    goto <bb 13>; [34.00%]
  else
    goto <bb 3>; [66.00%]

  <bb 3> [local count: 708386132]:
  # DEBUG __a => NULL
  # DEBUG __b => NULL
  __len_46 = (const size_type) _39;
  # DEBUG __len => __len_46
  # DEBUG D#69 => this_4(D)
  # DEBUG D#69 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#69
  # DEBUG this => D#69
  if (_41 > __len_46)
    goto <bb 14>; [53.03%]
  else
    goto <bb 4>; [46.97%]

  <bb 4> [local count: 332726818]:
  # DEBUG __a => NULL
  # DEBUG __b => NULL
  # DEBUG __len => __len_46
  # DEBUG D#69 => this_4(D)
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG D#103 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#103
  # DEBUG D#102 => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#99 => &D#101->D.90158
  # DEBUG this => D#99
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#100 => &MEM[(const struct _Vector_base *)D#102]._M_impl
  # DEBUG this => NULL
  # DEBUG D#98 => D#100
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __a => D#98
  # DEBUG D#97 => D#98
  # DEBUG D#72 => D#97
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  if (_39 < 0)
    goto <bb 14>; [57.10%]
  else
    goto <bb 5>; [42.90%]

  <bb 5> [local count: 142609872]:
  # __len_64 = PHI <__len_46(4)>
  # DEBUG __a => NULL
  # DEBUG __b => NULL
  # DEBUG D#69 => this_4(D)
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG D#103 => this_4(D)
  # DEBUG this => D#103
  # DEBUG D#102 => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#99 => &D#101->D.90158
  # DEBUG D#100 => &MEM[(const struct _Vector_base *)D#102]._M_impl
  # DEBUG this => NULL
  # DEBUG D#98 => D#100
  # DEBUG __a => D#98
  # DEBUG D#97 => D#98
  # DEBUG D#72 => D#97
  # DEBUG this => D#72
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG __s => NULL
  # DEBUG __len => NULL
  # DEBUG D#142 => {CLOBBER}
  # DEBUG __n => D#142
  # DEBUG __len => __len_46
  # DEBUG __old_start => _37
  # DEBUG __old_finish => _38
  # DEBUG this => this_4(D)
  # DEBUG INLINE_ENTRY begin
  # DEBUG D#15 => &this_4(D)->D.90158._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#15
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.109991
  # DEBUG INLINE_ENTRY operator-
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &D.109991
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG D#152 => __position_10 - _37
  # DEBUG D#127 => D#152 /[ex] 2
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG __elems_before => (const size_type) D#127
  # DEBUG D#126 => &this_4(D)->D.90158
  # DEBUG D#80 => D#126
  # DEBUG __n => __len_46
  # DEBUG INLINE_ENTRY _M_allocate
  # DEBUG this => D#80
  # DEBUG D#79 => D#80
  if (__len_46 != 0)
    goto <bb 13>; [3.57%]
  else
    goto <bb 6>; [96.43%]

  <bb 6> [local count: 1073007506]:
  # iftmp.0_36 = PHI <_35(14), 0B(5)>
  # prephitmp_81 = PHI <_84(14), 0B(5)>
  # DEBUG __n => NULL
  # DEBUG __new_start => iftmp.0_36
  # DEBUG __new_finish => iftmp.0_36
  # DEBUG __t => __args#0_15(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  _1 = (long unsigned int) _62;
  _2 = iftmp.0_36 + _1;
  # DEBUG D#125 => &this_4(D)->D.90158._M_impl
  # DEBUG D#67 => D#125
  _24 = *__args#0_15(D);
  # DEBUG D#68 => __args#0_15(D)
  # DEBUG __p => _2
  # DEBUG INLINE_ENTRY construct
  # DEBUG __a => D#67
  # DEBUG D#66 => D#68
  # DEBUG __args#0 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __t => D#66
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66
  # DEBUG __p => _2
  # DEBUG INLINE_ENTRY construct
  # DEBUG this => D#63
  # DEBUG D#62 => D#64
  # DEBUG __args#0 => D#62
  # DEBUG __t => D#62
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#1 => 2
  # DEBUG __p => _2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111346 => D#1
  # DEBUG BEGIN_STMT
  # DEBUG __p => NULL
  *_2 = _24;
  # DEBUG __p => NULL
  # DEBUG __p => NULL
  # DEBUG __new_finish => 0B
  # DEBUG D#118 => &this_4(D)->D.90158
  # DEBUG this => D#118
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#124 => &MEM[(struct _Vector_base *)this_4(D)]._M_impl
  # DEBUG this => NULL
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG D#117 => D#124
  # DEBUG __first => _37
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __uninitialized_move_if_noexcept_a
  # DEBUG __alloc => D#117
  # DEBUG D#116 => D#117
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG __i => _37
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => _37
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG D#113 => D#116
  # DEBUG __first => _37
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __uninitialized_copy_a
  # DEBUG D.112136 => D#113
  # DEBUG __first => _37
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY uninitialized_copy
  # DEBUG __assignable => 1
  # DEBUG __first => _37
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => _37
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => _37
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => _37
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => _37
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => iftmp.0_36
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => _37
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => _37
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => _37
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __copy_m
  # DEBUG _Num => _62 /[ex] 2
  _87 = _1 + 2;
  _86 = iftmp.0_36 + _87;
  _85 = _38 - __position_10;
  _69 = (long unsigned int) _85;
  _63 = _86 + _69;
  if (__position_10 != _37)
    goto <bb 7>; [53.47%]
  else
    goto <bb 10>; [46.53%]

  <bb 7> [local count: 573737113]:
  __builtin_memmove (iftmp.0_36, _37, _1);
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG __first => D#111
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __last => D#112
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D#114 => {CLOBBER}
  # DEBUG __first => D#114
  # DEBUG D#115 => {CLOBBER}
  # DEBUG __last => D#115
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __new_finish => _2
  # DEBUG D#148 => _1 + 2
  # DEBUG D#147 => iftmp.0_36 + D#148
  # DEBUG __new_finish => D#147
  # DEBUG D#119 => &this_4(D)->D.90158
  # DEBUG this => D#119
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG D#117 => D#124
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#147
  # DEBUG INLINE_ENTRY __uninitialized_move_if_noexcept_a
  # DEBUG __alloc => D#117
  # DEBUG D#116 => D#117
  # DEBUG __i => _38
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => _38
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG D#113 => D#116
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#147
  # DEBUG INLINE_ENTRY __uninitialized_copy_a
  # DEBUG D.112088 => D#113
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#147
  # DEBUG INLINE_ENTRY uninitialized_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#147
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#147
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => _38
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => _38
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#147
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => D#147
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => _38
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#147
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#147
  # DEBUG INLINE_ENTRY __copy_m
  # DEBUG D#146 => _38 - __position_10
  # DEBUG _Num => D#146 /[ex] 2
  if (__position_10 != _38)
    goto <bb 9>; [53.47%]
  else
    goto <bb 8>; [46.53%]

  <bb 8> [local count: 573737113]:
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D#114 => {CLOBBER}
  # DEBUG __first => D#114
  # DEBUG D#115 => {CLOBBER}
  # DEBUG __last => D#115
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __new_finish => _63
  # DEBUG D#120 => &this_4(D)->D.90158
  # DEBUG this => NULL
  # DEBUG D#28 => _37
  # DEBUG D#29 => _38
  # DEBUG D#30 => D#124
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112073 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#123 => this_4(D)->D.90158._M_impl._M_end_of_storage
  # DEBUG D#122 => D#123 - _37
  # DEBUG D#121 => D#122 /[ex] 2
  # DEBUG D#42 => D#126
  # DEBUG D#43 => (long unsigned int) D#121
  # DEBUG __p => _37
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _37
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _37
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112071 => D#34
  operator delete (_37);
  # DEBUG __p => NULL
  goto <bb 12>; [100.00%]

  <bb 9> [local count: 573737113]:
  __builtin_memcpy (_86, __position_10, _69);
  goto <bb 11>; [100.00%]

  <bb 10> [local count: 499270392]:
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG __first => D#111
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __last => D#112
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D#114 => {CLOBBER}
  # DEBUG __first => D#114
  # DEBUG D#115 => {CLOBBER}
  # DEBUG __last => D#115
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __new_finish => _2
  # DEBUG D#151 => _1 + 2
  # DEBUG D#150 => iftmp.0_36 + D#151
  # DEBUG __new_finish => D#150
  # DEBUG D#119 => &this_4(D)->D.90158
  # DEBUG this => D#119
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG D#117 => D#124
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#150
  # DEBUG INLINE_ENTRY __uninitialized_move_if_noexcept_a
  # DEBUG __alloc => D#117
  # DEBUG D#116 => D#117
  # DEBUG __i => _38
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => _38
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG D#113 => D#116
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#150
  # DEBUG INLINE_ENTRY __uninitialized_copy_a
  # DEBUG D.112088 => D#113
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#150
  # DEBUG INLINE_ENTRY uninitialized_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#150
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#150
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => _38
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => _38
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#150
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => D#150
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => _38
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#150
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __position_10
  # DEBUG __last => _38
  # DEBUG __result => D#150
  # DEBUG INLINE_ENTRY __copy_m
  # DEBUG D#149 => _38 - __position_10
  # DEBUG _Num => D#149 /[ex] 2
  if (__position_10 != _38)
    goto <bb 9>; [53.47%]
  else
    goto <bb 11>; [46.53%]

  <bb 11> [local count: 806047626]:
  # DEBUG D#144 => (long unsigned int) _85
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG __first => D#111
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __last => D#112
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D#114 => {CLOBBER}
  # DEBUG __first => D#114
  # DEBUG D#115 => {CLOBBER}
  # DEBUG __last => D#115
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __new_finish => _86 + D#144
  # DEBUG D#120 => &this_4(D)->D.90158
  # DEBUG this => D#120
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG D#28 => _37
  # DEBUG D#29 => _38
  # DEBUG D#30 => D#124
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112073 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#123 => this_4(D)->D.90158._M_impl._M_end_of_storage
  # DEBUG D#122 => D#123 - _37
  # DEBUG D#121 => D#122 /[ex] 2
  # DEBUG D#42 => D#126
  # DEBUG D#43 => (long unsigned int) D#121
  # DEBUG __p => _37
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_37 != 0B)
    goto <bb 8>; [38.06%]
  else
    goto <bb 12>; [61.94%]

  <bb 12> [local count: 1073007505]:
  _79 = VIEW_CONVERT_EXPR<long unsigned int>(_63);
  _59 = VIEW_CONVERT_EXPR<long unsigned int>(iftmp.0_36);
  _66 = {_59, _79};
  vect_cst__70 = _66;
  # DEBUG __p => NULL
  vectp.74_80 = &this_4(D)->D.90158._M_impl._M_start;
  MEM[(short unsigned int * *)vectp.74_80] = _66;
  this_4(D)->D.90158._M_impl._M_end_of_storage = prephitmp_81;
  return;

  <bb 13> [local count: 65403297]:
  # __len_21 = PHI <1(2), __len_46(5)>
  _67 = __len_21 * 2;

  <bb 14> [local count: 761746931]:
  # prephitmp_45 = PHI <18446744073709551614(3), _67(13), 18446744073709551614(4)>
  # DEBUG D#78 => &D#79->_M_impl
  # DEBUG D#77 => D#78
  # DEBUG __n => NULL
  # DEBUG INLINE_ENTRY allocate
  # DEBUG __a => D#77
  # DEBUG D#76 => D#77
  # DEBUG D#74 => D#76
  # DEBUG D#75 => 0B
  # DEBUG __n => NULL
  # DEBUG INLINE_ENTRY allocate
  # DEBUG this => D#74
  # DEBUG D.112522 => D#75
  # DEBUG D#73 => D#74
  # DEBUG D#72 => D#73
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  # DEBUG D#78 => &D#79->_M_impl
  # DEBUG D#77 => D#78
  # DEBUG __n => NULL
  # DEBUG __a => D#77
  # DEBUG D#76 => D#77
  # DEBUG D#74 => D#76
  # DEBUG D#75 => 0B
  # DEBUG __n => NULL
  # DEBUG this => D#74
  # DEBUG D.112522 => D#75
  # DEBUG D#73 => D#74
  # DEBUG D#72 => D#73
  # DEBUG this => D#72
  _35 = operator new (prephitmp_45);
  # DEBUG __n => NULL
  # DEBUG __n => NULL
  _84 = _35 + prephitmp_45;
  goto <bb 6>; [100.00%]

}



;; Function foo (_Z3fooRKN3SOA9ContainerISt6vector13s_decayvertexJEEE, funcdef_no=4664, decl_uid=89013, cgraph_uid=997, symbol_order=1457)

;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 47 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
;;
;; Loop 3
;;  header 26, latch 25
;;  depth 1, outer 0
;;  nodes: 26 25 31 29 27 30 28
;;
;; Loop 1
;;  header 8, latch 47
;;  depth 1, outer 0
;;  nodes: 8 47
;; 2 succs { 3 43 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 45 }
;; 6 succs { 7 10 }
;; 7 succs { 8 }
;; 8 succs { 47 9 }
;; 47 succs { 8 }
;; 9 succs { 10 46 }
;; 10 succs { 11 46 }
;; 11 succs { 12 46 }
;; 12 succs { 13 46 }
;; 13 succs { 14 46 }
;; 14 succs { 15 46 }
;; 15 succs { 16 46 }
;; 16 succs { 17 46 }
;; 17 succs { 18 46 }
;; 18 succs { 19 46 }
;; 19 succs { 20 46 }
;; 20 succs { 21 46 }
;; 21 succs { 22 46 }
;; 22 succs { 23 46 }
;; 23 succs { 24 46 }
;; 24 succs { 46 }
;; 25 succs { 26 }
;; 26 succs { 28 27 }
;; 27 succs { 31 }
;; 28 succs { 29 30 }
;; 29 succs { 31 }
;; 30 succs { 27 33 }
;; 31 succs { 25 32 }
;; 32 succs { 36 37 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 40 }
;; 36 succs { 37 }
;; 37 succs { 38 39 }
;; 38 succs { 39 }
;; 39 succs { 1 }
;; 40 succs { 41 42 }
;; 41 succs { 42 }
;; 42 succs { }
;; 43 succs { 44 }
;; 44 succs { 39 }
;; 45 succs { 37 }
;; 46 succs { 26 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

v_230 -> { v_2(D) }
__first$_M_current_231 -> { __first$_M_current_7 }
_232 -> { _21 }
_233 -> { _27 }
_234 -> { _45 }
_235 -> { _45 }
_236 -> { _45 }
_237 -> { _60 }
_238 -> { _60 }
_239 -> { _60 }
_240 -> { _66 }
_241 -> { _66 }
__first$_M_current_242 -> { __first$_M_current_92 }
__first_243 -> { __first_94 }
__first_244 -> { __first_94 }
__first_245 -> { __first_94 }
__first_246 -> { __first_94 }
__first_247 -> { __first_94 }
__first_248 -> { __first_94 }
__first_249 -> { __first_94 }
__first_250 -> { __first_94 }
__first_251 -> { __first_94 }
__first_252 -> { __first_94 }
__first_253 -> { __first_94 }
__first_254 -> { __first_94 }
__first_255 -> { __first_94 }
__first_256 -> { __first_94 }
__first_257 -> { __first_94 }
__first_258 -> { __first_94 }
__first_259 -> { __first_94 }
__first_260 -> { __first_94 }
__first_261 -> { __first_94 }
__first_262 -> { __first_94 }
__first_263 -> { __first_94 }
__first_264 -> { __first_94 }
__first_265 -> { __first_94 }
__first_266 -> { __first_94 }
__first_267 -> { __first_94 }
__first_268 -> { __first_94 }
__first_269 -> { __first_94 }
__first_270 -> { __first_94 }
__first_271 -> { __first_94 }
pretmp_272 -> { pretmp_102 }
_273 -> { _125 }
_274 -> { _125 }
_275 -> { _132 }
_276 -> { _132 }
_277 -> { _139 }
_278 -> { _139 }
_279 -> { _146 }
_280 -> { _146 }
_281 -> { _153 }
_282 -> { _153 }
_283 -> { _160 }
_284 -> { _160 }
_285 -> { _167 }
_286 -> { _167 }
_287 -> { _174 }
_288 -> { _174 }
_289 -> { _181 }
_290 -> { _181 }
_291 -> { _188 }
_292 -> { _188 }
_293 -> { _195 }
_294 -> { _195 }
_295 -> { _202 }
_296 -> { _202 }
_297 -> { _209 }
_298 -> { _209 }
ivtmp.97_299 -> { ivtmp.97_213 }
iftmp.0_300 -> { iftmp.0_222 }
Incremental SSA update started at block: 2
Number of blocks in CFG: 77
Number of blocks to update: 67 ( 87%)



Value ranges after VRP:

v_2(D): ~[0, 0]
tmp.79_3: VARYING
.MEM_4: VARYING
__first$_M_current_7: VARYING
_8: [0, 18446744073709551614]  EQUIVALENCES: { _80 } (1 elements)
.MEM_9: VARYING
.MEM_10: VARYING
.MEM_11: VARYING
_12: VARYING
__value_17: [15, +INF]
_19: [0, +INF]
bnd.76_20: [1, 576460752303423488]
_21: VARYING
.MEM_22: VARYING
_23: VARYING
_24: VARYING
_25: VARYING
_26: [-2305843009213693952, 2305843009213693951]
_27: ~[2305843009213693952, 16140901064495857663]
tmp.78_29: VARYING
__value_30: [14, +INF]
_32: [0, +INF]
__value_34: [1, +INF]
.MEM_35: VARYING
ivtmp.92_37: [0, +INF]
_40: ~[18446744073709551613, 18446744073709551613]
_41: [0, 9223372036854775807]
iftmp.0_42: [__first_94, __first_94]  EQUIVALENCES: { _45 __first_94 _236 } (3 elements)
_44: [0, +INF]
_45: ~[0B, 0B]
__first$_M_current_46: ~[__first_257, __first_257]  EQUIVALENCES: { _209 } (1 elements)
niters_vector_mult_vf.77_47: [16, 9223372036854775808]
_48: [0, 9223372036854775807]  EQUIVALENCES: { _41 } (1 elements)
_50: VARYING
_52: [0, +INF]  EQUIVALENCES: { _81 } (1 elements)
_53: [0, 65535]
_54: VARYING
_55: [0, 262140]
_56: VARYING
_57: VARYING
_58: [0, 9223372036854775807]  EQUIVALENCES: { _41 } (1 elements)
.MEM_59: VARYING
_60: VARYING
_61: VARYING
__value_62: VARYING
_63: VARYING
prephitmp_64: VARYING
_66: VARYING
.MEM_68: VARYING
.MEM_69: VARYING
_74: [0, 9223372036854775807]  EQUIVALENCES: { _41 } (1 elements)
.MEM_75: VARYING
_76: ~[18446744073709551613, 18446744073709551613]  EQUIVALENCES: { _40 } (1 elements)
_78: [0, 18446744073709551614]  EQUIVALENCES: { _44 } (1 elements)
ivtmp.92_79: [0, +INF]
_80: [0, 18446744073709551614]
_81: [0, +INF]
_82: ~[1, 31]
__first$_M_current_83: ~[__first_243, __first_243]  EQUIVALENCES: { _66 } (1 elements)
pretmp_84: VARYING
_85: [0, +INF]  EQUIVALENCES: { _90 } (1 elements)
ivtmp.92_86: [0, +INF]  EQUIVALENCES: { _81 } (1 elements)
_87: ~[0, 0]  EQUIVALENCES: { _27 _233 } (2 elements)
_88: [0, 18446744073709551614]  EQUIVALENCES: { _44 } (1 elements)
_90: [0, +INF]
_91: ~[0, 0]  EQUIVALENCES: { _27 _233 } (2 elements)
__first$_M_current_92: VARYING
niters.75_93: [1, 9223372036854775808]
__first_94: VARYING
.MEM_95: VARYING
pretmp_102: VARYING
.MEM_103: VARYING
vect_cst__109: VARYING
vect_vec_iv_.80_110: VARYING
vect_vec_iv_.80_111: VARYING
vect_cst__112: VARYING
vect_vec_iv_.80_113: VARYING
vect__32.81_114: VARYING
_115: [0, +INF]  EQUIVALENCES: { _118 } (1 elements)
iftmp.0_116: [0B, 0B]
_118: [0, +INF]
__value_120: [1, +INF]
.MEM_121: VARYING
_122: [0, +INF]
__value_124: [2, +INF]
_125: VARYING
__first$_M_current_126: ~[__first_245, __first_245]  EQUIVALENCES: { _125 } (1 elements)
__value_127: [2, +INF]
.MEM_128: VARYING
_129: [0, +INF]
__value_131: [3, +INF]
_132: VARYING
__first$_M_current_133: ~[__first_246, __first_246]  EQUIVALENCES: { _132 } (1 elements)
__value_134: [3, +INF]
.MEM_135: VARYING
_136: [0, +INF]
__value_138: [4, +INF]
_139: VARYING
__first$_M_current_140: ~[__first_247, __first_247]  EQUIVALENCES: { _139 } (1 elements)
__value_141: [4, +INF]
.MEM_142: VARYING
_143: [0, +INF]
__value_145: [5, +INF]
_146: VARYING
__first$_M_current_147: ~[__first_248, __first_248]  EQUIVALENCES: { _146 } (1 elements)
__value_148: [5, +INF]
.MEM_149: VARYING
_150: [0, +INF]
__value_152: [6, +INF]
_153: VARYING
__first$_M_current_154: ~[__first_249, __first_249]  EQUIVALENCES: { _153 } (1 elements)
__value_155: [6, +INF]
.MEM_156: VARYING
_157: [0, +INF]
__value_159: [7, +INF]
_160: VARYING
__first$_M_current_161: ~[__first_250, __first_250]  EQUIVALENCES: { _160 } (1 elements)
__value_162: [7, +INF]
.MEM_163: VARYING
_164: [0, +INF]
__value_166: [8, +INF]
_167: VARYING
__first$_M_current_168: ~[__first_251, __first_251]  EQUIVALENCES: { _167 } (1 elements)
__value_169: [8, +INF]
.MEM_170: VARYING
_171: [0, +INF]
__value_173: [9, +INF]
_174: VARYING
__first$_M_current_175: ~[__first_252, __first_252]  EQUIVALENCES: { _174 } (1 elements)
__value_176: [9, +INF]
.MEM_177: VARYING
_178: [0, +INF]
__value_180: [10, +INF]
_181: VARYING
__first$_M_current_182: ~[__first_253, __first_253]  EQUIVALENCES: { _181 } (1 elements)
__value_183: [10, +INF]
.MEM_184: VARYING
_185: [0, +INF]
__value_187: [11, +INF]
_188: VARYING
__first$_M_current_189: ~[__first_254, __first_254]  EQUIVALENCES: { _188 } (1 elements)
__value_190: [11, +INF]
.MEM_191: VARYING
_192: [0, +INF]
__value_194: [12, +INF]
_195: VARYING
__first$_M_current_196: ~[__first_255, __first_255]  EQUIVALENCES: { _195 } (1 elements)
__value_197: [12, +INF]
.MEM_198: VARYING
_199: [0, +INF]
__value_201: [13, +INF]
_202: VARYING
__first$_M_current_203: ~[__first_256, __first_256]  EQUIVALENCES: { _202 } (1 elements)
__value_204: [13, +INF]
.MEM_205: VARYING
_206: [0, +INF]
__value_208: [14, +INF]
_209: VARYING
_210: [__first$_M_current_92, __first$_M_current_92]  EQUIVALENCES: { __first$_M_current_92 } (1 elements)
_211: VARYING
ivtmp.97_212: VARYING
ivtmp.97_213: [0, +INF]
ivtmp.97_214: [0, +INF]  EQUIVALENCES: { _81 } (1 elements)
_215: VARYING
_216: ~[1, 31]
_217: [0, +INF]  EQUIVALENCES: { _81 } (1 elements)
_218: [0, +INF]
iftmp.0_222: VARYING
.MEM_227: VARYING
iftmp.0_228: [0B, 0B]
v_230: ~[0, 0]  EQUIVALENCES: { v_2(D) } (1 elements)
__first$_M_current_231: ~[0B, 0B]  EQUIVALENCES: { __first$_M_current_7 } (1 elements)
_232: ~[0B, 0B]  EQUIVALENCES: { _21 } (1 elements)
_233: ~[0, 0]  EQUIVALENCES: { _27 } (1 elements)
_234: ~[__first_94, __first_94]  EQUIVALENCES: { _45 _236 } (2 elements)
_235: [__first_94, __first_94]  EQUIVALENCES: { _45 __first_94 _236 } (3 elements)
_236: ~[0B, 0B]  EQUIVALENCES: { _45 } (1 elements)
_237: ~[_61, _61]  EQUIVALENCES: { _60 } (1 elements)
_238: [_61, _61]  EQUIVALENCES: { _60 _61 } (2 elements)
_239: ~[0B, 0B]  EQUIVALENCES: { _60 _237 } (2 elements)
_240: ~[__first_243, __first_243]  EQUIVALENCES: { _66 } (1 elements)
_241: ~[0B, 0B]  EQUIVALENCES: { _66 _240 } (2 elements)
__first$_M_current_242: ~[0B, 0B]  EQUIVALENCES: { __first$_M_current_92 } (1 elements)
__first_243: ~[_234, _234]  EQUIVALENCES: { __first_94 } (1 elements)
__first_244: ~[_240, _240]  EQUIVALENCES: { __first_94 __first_243 } (2 elements)
__first_245: ~[_125, _125]  EQUIVALENCES: { __first_94 __first_243 __first_244 } (3 elements)
__first_246: ~[_132, _132]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 } (4 elements)
__first_247: ~[_139, _139]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 } (5 elements)
__first_248: ~[_146, _146]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 } (6 elements)
__first_249: ~[_153, _153]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 } (7 elements)
__first_250: ~[_160, _160]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 } (8 elements)
__first_251: ~[_167, _167]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 } (9 elements)
__first_252: ~[_174, _174]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 } (10 elements)
__first_253: ~[_181, _181]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 } (11 elements)
__first_254: ~[_188, _188]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 __first_253 } (12 elements)
__first_255: ~[_195, _195]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 __first_253 __first_254 } (13 elements)
__first_256: ~[_202, _202]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 __first_253 __first_254 __first_255 } (14 elements)
__first_257: ~[_209, _209]  EQUIVALENCES: { __first_94 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 __first_253 __first_254 __first_255 __first_256 } (15 elements)
__first_258: [_66, _66]  EQUIVALENCES: { _66 __first_94 __first_243 } (3 elements)
__first_259: [_125, _125]  EQUIVALENCES: { __first_94 _125 __first_243 __first_244 } (4 elements)
__first_260: [_132, _132]  EQUIVALENCES: { __first_94 _132 __first_243 __first_244 __first_245 } (5 elements)
__first_261: [_139, _139]  EQUIVALENCES: { __first_94 _139 __first_243 __first_244 __first_245 __first_246 } (6 elements)
__first_262: [_146, _146]  EQUIVALENCES: { __first_94 _146 __first_243 __first_244 __first_245 __first_246 __first_247 } (7 elements)
__first_263: [_153, _153]  EQUIVALENCES: { __first_94 _153 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 } (8 elements)
__first_264: [_160, _160]  EQUIVALENCES: { __first_94 _160 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 } (9 elements)
__first_265: [_167, _167]  EQUIVALENCES: { __first_94 _167 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 } (10 elements)
__first_266: [_174, _174]  EQUIVALENCES: { __first_94 _174 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 } (11 elements)
__first_267: [_181, _181]  EQUIVALENCES: { __first_94 _181 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 } (12 elements)
__first_268: [_188, _188]  EQUIVALENCES: { __first_94 _188 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 __first_253 } (13 elements)
__first_269: [_195, _195]  EQUIVALENCES: { __first_94 _195 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 __first_253 __first_254 } (14 elements)
__first_270: [_202, _202]  EQUIVALENCES: { __first_94 _202 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 __first_253 __first_254 __first_255 } (15 elements)
__first_271: [_209, _209]  EQUIVALENCES: { __first_94 _209 __first_243 __first_244 __first_245 __first_246 __first_247 __first_248 __first_249 __first_250 __first_251 __first_252 __first_253 __first_254 __first_255 __first_256 } (16 elements)
pretmp_272: ~[0B, 0B]  EQUIVALENCES: { pretmp_102 } (1 elements)
_273: ~[__first_245, __first_245]  EQUIVALENCES: { _125 } (1 elements)
_274: ~[0B, 0B]  EQUIVALENCES: { _125 _273 } (2 elements)
_275: ~[__first_246, __first_246]  EQUIVALENCES: { _132 } (1 elements)
_276: ~[0B, 0B]  EQUIVALENCES: { _132 _275 } (2 elements)
_277: ~[__first_247, __first_247]  EQUIVALENCES: { _139 } (1 elements)
_278: ~[0B, 0B]  EQUIVALENCES: { _139 _277 } (2 elements)
_279: ~[__first_248, __first_248]  EQUIVALENCES: { _146 } (1 elements)
_280: ~[0B, 0B]  EQUIVALENCES: { _146 _279 } (2 elements)
_281: ~[__first_249, __first_249]  EQUIVALENCES: { _153 } (1 elements)
_282: ~[0B, 0B]  EQUIVALENCES: { _153 _281 } (2 elements)
_283: ~[__first_250, __first_250]  EQUIVALENCES: { _160 } (1 elements)
_284: ~[0B, 0B]  EQUIVALENCES: { _160 _283 } (2 elements)
_285: ~[__first_251, __first_251]  EQUIVALENCES: { _167 } (1 elements)
_286: ~[0B, 0B]  EQUIVALENCES: { _167 _285 } (2 elements)
_287: ~[__first_252, __first_252]  EQUIVALENCES: { _174 } (1 elements)
_288: ~[0B, 0B]  EQUIVALENCES: { _174 _287 } (2 elements)
_289: ~[__first_253, __first_253]  EQUIVALENCES: { _181 } (1 elements)
_290: ~[0B, 0B]  EQUIVALENCES: { _181 _289 } (2 elements)
_291: ~[__first_254, __first_254]  EQUIVALENCES: { _188 } (1 elements)
_292: ~[0B, 0B]  EQUIVALENCES: { _188 _291 } (2 elements)
_293: ~[__first_255, __first_255]  EQUIVALENCES: { _195 } (1 elements)
_294: ~[0B, 0B]  EQUIVALENCES: { _195 _293 } (2 elements)
_295: ~[__first_256, __first_256]  EQUIVALENCES: { _202 } (1 elements)
_296: ~[0B, 0B]  EQUIVALENCES: { _202 _295 } (2 elements)
_297: ~[__first_257, __first_257]  EQUIVALENCES: { _209 } (1 elements)
_298: ~[0B, 0B]  EQUIVALENCES: { _209 _297 } (2 elements)
ivtmp.97_299: ~[_218, _218]  EQUIVALENCES: { ivtmp.97_213 } (1 elements)
iftmp.0_300: ~[0B, 0B]  EQUIVALENCES: { iftmp.0_222 } (1 elements)


Folding predicate _234 != 0B to 1
Removing basic block 37
Merging blocks 40 and 41
Merging blocks 43 and 44
Removing basic block 47
Removing basic block 48
Removing basic block 49
Removing basic block 50
Removing basic block 51
Removing basic block 52
Removing basic block 53
Removing basic block 54
Removing basic block 55
Removing basic block 56
Removing basic block 57
Removing basic block 58
Removing basic block 59
Removing basic block 60
Removing basic block 61
Removing basic block 62
Removing basic block 63
Removing basic block 64
Removing basic block 65
Removing basic block 66
Removing basic block 67
Removing basic block 68
Removing basic block 69
Removing basic block 70
Removing basic block 71
Removing basic block 72
Removing basic block 73
Removing basic block 74
Removing basic block 75
Removing basic block 76
Merging blocks 77 and 38
Merging blocks 40 and 42

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

.MEM_301 -> { .MEM_10 }
iftmp.0_302 -> { iftmp.0_222 }
.MEM_303 -> { .MEM_13 }

SSA names to release after updating the SSA web

.MEM_10 .MEM_13 iftmp.0_222 
Incremental SSA update started at block: 42
Number of blocks in CFG: 43
Number of blocks to update: 1 (  2%)


foo (const struct Container & v)
{
  unsigned long ivtmp.97;
  unsigned long ivtmp.92;
  vector(16) short unsigned int * vectp.83;
  vector(16) short unsigned int * vectp.82;
  vector(16) short unsigned int vect__32.81;
  vector(8) int vect_vec_iv_.80;
  int tmp.79;
  short unsigned int * tmp.78;
  unsigned long niters_vector_mult_vf.77;
  unsigned long bnd.76;
  unsigned long niters.75;
  struct __normal_iterator D.112708;
  const short unsigned int * __first$_M_current;
  struct back_insert_iterator D.112695;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct back_insert_iterator __result;
  short unsigned int * D.112657;
  long unsigned int __niter;
  short unsigned int * __first;
  int __value;
  short unsigned int * __first$_M_current;
  struct __normal_iterator D.112586;
  struct __normal_iterator D.112585;
  struct back_insert_iterator D.112584;
  struct back_insert_iterator D.112583;
  struct SelectionView SS;
  struct SelectionView S;
  unsigned long _8;
  short unsigned int * _12;
  short unsigned int _19;
  short unsigned int * _21;
  struct vertex_t * _23;
  struct vertex_t * _24;
  long int _25;
  long int _26;
  long unsigned int _27;
  short unsigned int _32;
  unsigned long _40;
  unsigned long _41;
  short unsigned int * iftmp.0_42;
  long unsigned int _44;
  short unsigned int * _45;
  unsigned long _48;
  short unsigned int _50;
  unsigned long _52;
  long unsigned int _53;
  struct vertex_t * _54;
  long unsigned int _55;
  struct value_type & _56;
  float _57;
  unsigned long _58;
  short unsigned int * _60;
  short unsigned int * _61;
  short unsigned int * _63;
  const struct container_t & prephitmp_64;
  short unsigned int * _66;
  unsigned long _74;
  unsigned long _76;
  sizetype _78;
  unsigned long _80;
  unsigned long _81;
  sizetype _82;
  const struct container_t & pretmp_84;
  unsigned long _85;
  sizetype _87;
  long unsigned int _88;
  unsigned long _90;
  long unsigned int _91;
  short unsigned int * pretmp_102;
  vector(8) int vect_cst__109;
  vector(8) int vect_cst__112;
  unsigned long _115;
  unsigned long _118;
  short unsigned int _122;
  short unsigned int * _125;
  short unsigned int _129;
  short unsigned int * _132;
  short unsigned int _136;
  short unsigned int * _139;
  short unsigned int _143;
  short unsigned int * _146;
  short unsigned int _150;
  short unsigned int * _153;
  short unsigned int _157;
  short unsigned int * _160;
  short unsigned int _164;
  short unsigned int * _167;
  short unsigned int _171;
  short unsigned int * _174;
  short unsigned int _178;
  short unsigned int * _181;
  short unsigned int _185;
  short unsigned int * _188;
  short unsigned int _192;
  short unsigned int * _195;
  short unsigned int _199;
  short unsigned int * _202;
  short unsigned int _206;
  short unsigned int * _209;
  void * _210;
  const short unsigned int * _211;
  void * _215;
  unsigned long _216;
  unsigned long _217;
  unsigned long _218;
  short unsigned int * iftmp.0_302;

  <bb 2> [local count: 1073741826]:
  # DEBUG BEGIN_STMT
  # DEBUG this => &S
  # DEBUG container => v_2(D)
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&S] ={v} {CLOBBER};
  # DEBUG this => &D.112610
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => &D.112610
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#92 => &MEM[(const struct container_t *)v_2(D)].D.104277.D.104204.D.103696
  # DEBUG this => D#92
  # DEBUG INLINE_ENTRY size
  # DEBUG D#12 => &D#92->m_storage
  # DEBUG __t => D#12
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#5 => &MEM[(const struct tuple *)D#12].D.94746
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#4 => &D#5->D.93464
  # DEBUG __b => D#4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#13 => &MEM[(const struct _Head_base &)D#92]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  _23 = MEM[(struct vertex_t * *)v_2(D) + 8B];
  # DEBUG D#11 => D#13
  _24 = MEM[(struct vertex_t * *)v_2(D) + 16B];
  # DEBUG D#11 => D#13
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#11
  # DEBUG this => D#11
  _25 = _24 - _23;
  _26 = _25 /[ex] 4;
  _27 = (long unsigned int) _26;
  # DEBUG this => NULL
  # DEBUG this => &S.m_indices
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#140 => D#139
  # DEBUG __a => D#140
  # DEBUG D#91 => &MEM[(struct vector *)&S + 8B].D.90158
  # DEBUG this => D#91
  # DEBUG __n => _27
  # DEBUG __a => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#82 => &D#91->_M_impl
  # DEBUG this => D#82
  # DEBUG __a => NULL
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&S + 8] ={v} {CLOBBER};
  # DEBUG this => D#82
  # DEBUG __a => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#82
  # DEBUG D.112624 => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG D.112624 => NULL
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG this => D#91
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY _M_create_storage
  # DEBUG D#80 => D#91
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY _M_allocate
  # DEBUG this => D#80
  # DEBUG D#79 => D#80
  if (_27 != 0)
    goto <bb 3>; [71.00%]
  else
    goto <bb 39>; [29.00%]

  <bb 3> [local count: 762356702]:
  # DEBUG D#78 => &D#79->_M_impl
  # DEBUG D#77 => D#78
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY allocate
  # DEBUG __a => D#77
  # DEBUG D#76 => D#77
  # DEBUG D#74 => D#76
  # DEBUG D#75 => 0B
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY allocate
  # DEBUG this => D#74
  # DEBUG D.112655 => D#75
  # DEBUG D#73 => D#74
  # DEBUG D#72 => D#73
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  if (_25 < 0)
    goto <bb 4>; [0.04%]
  else
    goto <bb 5>; [99.96%]

  <bb 4> [local count: 304941]:
  std::__throw_bad_alloc ();

  <bb 5> [local count: 955358821]:
  _44 = _27 * 2;
  _45 = operator new (_44);
  # DEBUG __n => NULL
  # DEBUG __n => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#90 => &S.m_indices
  # DEBUG D#90 => &S.m_indices
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY _M_default_initialize
  # DEBUG D#89 => D#90
  # DEBUG this => D#89
  # DEBUG this => D#90
  # DEBUG D#87 => &D#89->D.90158
  # DEBUG this => D#87
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#88 => &MEM[(struct _Vector_base *)D#89]._M_impl
  # DEBUG this => NULL
  # DEBUG D#86 => D#88
  # DEBUG __first => _45
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY __uninitialized_default_n_a
  # DEBUG __niter => _27
  # DEBUG __first => _45
  _87 = _27;
  _78 = _44;
  __builtin_memset (_45, 0, _44);
  _91 = _27;
  _88 = _44;
  __first_94 = _45 + _44;
  # DEBUG __first$_M_current => _45
  # DEBUG __value => 0
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (__first_94 != _45)
    goto <bb 6>; [100.00%]
  else
    goto <bb 40>; [0.00%]

  <bb 6> [local count: 955358821]:
  _90 = (unsigned long) __first_94;
  _81 = (unsigned long) _45;
  _118 = -_81;
  _80 = _90 - _81;
  _40 = _80 + 18446744073709551614;
  _41 = _40 /[ex] 2;
  _74 = _41;
  niters.75_93 = _74 + 1;
  _85 = _90;
  _52 = _81;
  _115 = _118;
  _8 = _80;
  _76 = _40;
  _48 = _41;
  _58 = _41;
  if (_41 <= 14)
    goto <bb 10>; [10.00%]
  else
    goto <bb 7>; [90.00%]

  <bb 7> [local count: 859822937]:
  bnd.76_20 = niters.75_93 >> 4;
  vect_cst__109 = { 16, 16, 16, 16, 16, 16, 16, 16 };
  vect_cst__112 = { 8, 8, 8, 8, 8, 8, 8, 8 };
  ivtmp.97_214 = _81;
  _216 = bnd.76_20 * 32;
  _217 = _81;
  _218 = _81 + _216;

  <bb 8> [local count: 5158937606]:
  # vect_vec_iv_.80_110 = PHI <{ 0, 1, 2, 3, 4, 5, 6, 7 }(7), vect_vec_iv_.80_111(8)>
  # ivtmp.97_212 = PHI <_81(7), ivtmp.97_213(8)>
  vect_vec_iv_.80_111 = vect_vec_iv_.80_110 + { 16, 16, 16, 16, 16, 16, 16, 16 };
  vect_vec_iv_.80_113 = vect_vec_iv_.80_110 + { 8, 8, 8, 8, 8, 8, 8, 8 };
  # DEBUG __first$_M_current => NULL
  # DEBUG __value => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  vect__32.81_114 = VEC_PACK_TRUNC_EXPR <vect_vec_iv_.80_110, vect_vec_iv_.80_113>;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  _215 = (void *) ivtmp.97_212;
  MEM[base: _215, offset: 0] = vect__32.81_114;
  # DEBUG D#164 => NULL
  # DEBUG __value => D#164
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  # DEBUG D#163 => NULL
  # DEBUG __first$_M_current => D#163
  # DEBUG __first$_M_current => D#163
  # DEBUG __value => D#164
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  ivtmp.97_213 = ivtmp.97_212 + 32;
  if (ivtmp.97_213 != _218)
    goto <bb 8>; [83.33%]
  else
    goto <bb 9>; [16.67%]

  <bb 9> [local count: 859822937]:
  niters_vector_mult_vf.77_47 = bnd.76_20 << 4;
  _82 = niters_vector_mult_vf.77_47 * 2;
  tmp.78_29 = _45 + _82;
  tmp.79_3 = (int) niters_vector_mult_vf.77_47;
  if (niters_vector_mult_vf.77_47 == niters.75_93)
    goto <bb 41>; [6.25%]
  else
    goto <bb 10>; [93.75%]

  <bb 10> [local count: 901619889]:
  # __first$_M_current_7 = PHI <tmp.78_29(9), _45(6)>
  # __value_62 = PHI <tmp.79_3(9), 0(6)>
  # DEBUG __first$_M_current => __first$_M_current_7
  # DEBUG __value => __value_62
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _32 = (short unsigned int) __value_62;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_7 = _32;
  __value_34 = __value_62 + 1;
  # DEBUG __value => __value_34
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _66 = __first$_M_current_7 + 2;
  # DEBUG __first$_M_current => _66
  # DEBUG __first$_M_current => _66
  # DEBUG __value => __value_34
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_66 != __first_94)
    goto <bb 11>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 11> [local count: 802441729]:
  # __first$_M_current_83 = PHI <_66(10)>
  # __value_120 = PHI <__value_34(10)>
  # DEBUG __first$_M_current => _66
  # DEBUG __value => __value_34
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _122 = (short unsigned int) __value_34;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_66 = _122;
  __value_124 = __value_34 + 1;
  # DEBUG __value => __value_124
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _125 = _66 + 2;
  # DEBUG __first$_M_current => _125
  # DEBUG __first$_M_current => _125
  # DEBUG __value => __value_124
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_125 != __first_94)
    goto <bb 12>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 12> [local count: 714173124]:
  # __first$_M_current_126 = PHI <_125(11)>
  # __value_127 = PHI <__value_124(11)>
  # DEBUG __first$_M_current => _125
  # DEBUG __value => __value_124
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _129 = (short unsigned int) __value_124;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_125 = _129;
  __value_131 = __value_124 + 1;
  # DEBUG __value => __value_131
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _132 = _125 + 2;
  # DEBUG __first$_M_current => _132
  # DEBUG __first$_M_current => _132
  # DEBUG __value => __value_131
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_132 != __first_94)
    goto <bb 13>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 13> [local count: 635614065]:
  # __first$_M_current_133 = PHI <_132(12)>
  # __value_134 = PHI <__value_131(12)>
  # DEBUG __first$_M_current => _132
  # DEBUG __value => __value_131
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _136 = (short unsigned int) __value_131;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_132 = _136;
  __value_138 = __value_131 + 1;
  # DEBUG __value => __value_138
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _139 = _132 + 2;
  # DEBUG __first$_M_current => _139
  # DEBUG __first$_M_current => _139
  # DEBUG __value => __value_138
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_139 != __first_94)
    goto <bb 14>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 14> [local count: 565696516]:
  # __first$_M_current_140 = PHI <_139(13)>
  # __value_141 = PHI <__value_138(13)>
  # DEBUG __first$_M_current => _139
  # DEBUG __value => __value_138
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _143 = (short unsigned int) __value_138;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_139 = _143;
  __value_145 = __value_138 + 1;
  # DEBUG __value => __value_145
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _146 = _139 + 2;
  # DEBUG __first$_M_current => _146
  # DEBUG __first$_M_current => _146
  # DEBUG __value => __value_145
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_146 != __first_94)
    goto <bb 15>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 15> [local count: 503469877]:
  # __first$_M_current_147 = PHI <_146(14)>
  # __value_148 = PHI <__value_145(14)>
  # DEBUG __first$_M_current => _146
  # DEBUG __value => __value_145
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _150 = (short unsigned int) __value_145;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_146 = _150;
  __value_152 = __value_145 + 1;
  # DEBUG __value => __value_152
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _153 = _146 + 2;
  # DEBUG __first$_M_current => _153
  # DEBUG __first$_M_current => _153
  # DEBUG __value => __value_152
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_153 != __first_94)
    goto <bb 16>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 16> [local count: 448088219]:
  # __first$_M_current_154 = PHI <_153(15)>
  # __value_155 = PHI <__value_152(15)>
  # DEBUG __first$_M_current => _153
  # DEBUG __value => __value_152
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _157 = (short unsigned int) __value_152;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_153 = _157;
  __value_159 = __value_152 + 1;
  # DEBUG __value => __value_159
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _160 = _153 + 2;
  # DEBUG __first$_M_current => _160
  # DEBUG __first$_M_current => _160
  # DEBUG __value => __value_159
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_160 != __first_94)
    goto <bb 17>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 17> [local count: 398798501]:
  # __first$_M_current_161 = PHI <_160(16)>
  # __value_162 = PHI <__value_159(16)>
  # DEBUG __first$_M_current => _160
  # DEBUG __value => __value_159
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _164 = (short unsigned int) __value_159;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_160 = _164;
  __value_166 = __value_159 + 1;
  # DEBUG __value => __value_166
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _167 = _160 + 2;
  # DEBUG __first$_M_current => _167
  # DEBUG __first$_M_current => _167
  # DEBUG __value => __value_166
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_167 != __first_94)
    goto <bb 18>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 18> [local count: 354930673]:
  # __first$_M_current_168 = PHI <_167(17)>
  # __value_169 = PHI <__value_166(17)>
  # DEBUG __first$_M_current => _167
  # DEBUG __value => __value_166
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _171 = (short unsigned int) __value_166;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_167 = _171;
  __value_173 = __value_166 + 1;
  # DEBUG __value => __value_173
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _174 = _167 + 2;
  # DEBUG __first$_M_current => _174
  # DEBUG __first$_M_current => _174
  # DEBUG __value => __value_173
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_174 != __first_94)
    goto <bb 19>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 19> [local count: 315888275]:
  # __first$_M_current_175 = PHI <_174(18)>
  # __value_176 = PHI <__value_173(18)>
  # DEBUG __first$_M_current => _174
  # DEBUG __value => __value_173
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _178 = (short unsigned int) __value_173;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_174 = _178;
  __value_180 = __value_173 + 1;
  # DEBUG __value => __value_180
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _181 = _174 + 2;
  # DEBUG __first$_M_current => _181
  # DEBUG __first$_M_current => _181
  # DEBUG __value => __value_180
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_181 != __first_94)
    goto <bb 20>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 20> [local count: 281140555]:
  # __first$_M_current_182 = PHI <_181(19)>
  # __value_183 = PHI <__value_180(19)>
  # DEBUG __first$_M_current => _181
  # DEBUG __value => __value_180
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _185 = (short unsigned int) __value_180;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_181 = _185;
  __value_187 = __value_180 + 1;
  # DEBUG __value => __value_187
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _188 = _181 + 2;
  # DEBUG __first$_M_current => _188
  # DEBUG __first$_M_current => _188
  # DEBUG __value => __value_187
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_188 != __first_94)
    goto <bb 21>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 21> [local count: 250215083]:
  # __first$_M_current_189 = PHI <_188(20)>
  # __value_190 = PHI <__value_187(20)>
  # DEBUG __first$_M_current => _188
  # DEBUG __value => __value_187
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _192 = (short unsigned int) __value_187;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_188 = _192;
  __value_194 = __value_187 + 1;
  # DEBUG __value => __value_194
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _195 = _188 + 2;
  # DEBUG __first$_M_current => _195
  # DEBUG __first$_M_current => _195
  # DEBUG __value => __value_194
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_195 != __first_94)
    goto <bb 22>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 22> [local count: 222691400]:
  # __first$_M_current_196 = PHI <_195(21)>
  # __value_197 = PHI <__value_194(21)>
  # DEBUG __first$_M_current => _195
  # DEBUG __value => __value_194
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _199 = (short unsigned int) __value_194;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_195 = _199;
  __value_201 = __value_194 + 1;
  # DEBUG __value => __value_201
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _202 = _195 + 2;
  # DEBUG __first$_M_current => _202
  # DEBUG __first$_M_current => _202
  # DEBUG __value => __value_201
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_202 != __first_94)
    goto <bb 23>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 23> [local count: 198195336]:
  # __first$_M_current_203 = PHI <_202(22)>
  # __value_204 = PHI <__value_201(22)>
  # DEBUG __first$_M_current => _202
  # DEBUG __value => __value_201
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _206 = (short unsigned int) __value_201;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_202 = _206;
  __value_208 = __value_201 + 1;
  # DEBUG __value => __value_208
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _209 = _202 + 2;
  # DEBUG __first$_M_current => _209
  # DEBUG __first$_M_current => _209
  # DEBUG __value => __value_208
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_209 != __first_94)
    goto <bb 24>; [89.00%]
  else
    goto <bb 41>; [11.00%]

  <bb 24> [local count: 176393881]:
  # __first$_M_current_46 = PHI <_209(23)>
  # __value_30 = PHI <__value_208(23)>
  # DEBUG __first$_M_current => _209
  # DEBUG __value => __value_208
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _19 = (short unsigned int) __value_208;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *_209 = _19;
  __value_17 = __value_208 + 1;
  # DEBUG __value => __value_17
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _12 = _209 + 2;
  # DEBUG __first$_M_current => _12
  # DEBUG __first$_M_current => _12
  # DEBUG __value => __value_17
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  goto <bb 41>; [100.00%]

  <bb 25> [local count: 7729721292]:
  pretmp_84 = SS.m_container;

  <bb 26> [local count: 8685080097]:
  # prephitmp_64 = PHI <v_2(D)(41), pretmp_84(25)>
  # ivtmp.92_37 = PHI <_81(41), ivtmp.92_79(25)>
  __first$_M_current_92 = (const short unsigned int *) ivtmp.92_37;
  # DEBUG __first$_M_current => __first$_M_current_92
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG D#19 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#19
  _210 = __first$_M_current_92;
  _50 = MEM[base: __first$_M_current_92, offset: 0];
  # DEBUG this => NULL
  # DEBUG i => _50
  # DEBUG INLINE_ENTRY operator()
  # DEBUG D#162 => SS.m_container
  # DEBUG D#58 => &D#162->D.104277.D.104204.D.103696
  _53 = (long unsigned int) _50;
  # DEBUG this => D#58
  # DEBUG idx => _53
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG D#129 => &MEM[(const struct _View *)D#162].m_storage
  # DEBUG this => NULL
  # DEBUG D.112672 => D#129
  # DEBUG D.112671 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#10
  # DEBUG D.112675 => D#129
  # DEBUG D.112674 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#9 => &D#10->D.101954
  # DEBUG this => D#9
  # DEBUG D.112678 => D#129
  # DEBUG D.112677 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#8 => &D#9->D.101686
  # DEBUG this => D#8
  # DEBUG D.112681 => D#129
  # DEBUG D.112680 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#7 => &D#8->D.101625
  # DEBUG this => D#7
  # DEBUG stor => D#129
  # DEBUG idx => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  # DEBUG this => NULL
  # DEBUG D.112681 => NULL
  # DEBUG D.112680 => NULL
  # DEBUG this => NULL
  # DEBUG D.112678 => NULL
  # DEBUG D.112677 => NULL
  # DEBUG this => NULL
  # DEBUG D.112675 => NULL
  # DEBUG D.112674 => NULL
  # DEBUG this => NULL
  # DEBUG D.112672 => NULL
  # DEBUG D.112671 => NULL
  # DEBUG this => NULL
  # DEBUG idx => NULL
  # DEBUG D#57 => D#61
  # DEBUG decayvertexskin => D#129
  # DEBUG decayvertexskin$8 => _53
  # DEBUG INLINE_ENTRY operator()
  # DEBUG __closure => D#57
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY vertex
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY _get
  # DEBUG D#56 => &MEM[(struct SkinBase *)&decayvertexskin].D.101954.D.101686
  # DEBUG this => D#56
  # DEBUG INLINE_ENTRY get
  # DEBUG D#53 => &D#56->D.101625
  # DEBUG this => D#53
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __t => D#129
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#3 => &MEM[(struct tuple *)D#129].D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#54 => &MEM[(struct _Head_base &)D#129]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG D#55 => &D#56->D.101625
  # DEBUG this => D#55
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _54 = MEM[(struct vertex_t * *)prephitmp_64 + 8B];
  # DEBUG D#6 => D#54
  # DEBUG __n => _53
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG this => D#6
  _55 = _53 * 4;
  _56 = _54 + _55;
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _57 = _56->k;
  # DEBUG D#59 => {CLOBBER}
  # DEBUG decayvertexskin => D#59
  # DEBUG D#60 => {CLOBBER}
  # DEBUG decayvertexskin$8 => D#60
  # DEBUG this => NULL
  # DEBUG i => NULL
  if (_57 > 3.0e+0)
    goto <bb 28>; [33.00%]
  else
    goto <bb 27>; [67.00%]

  <bb 27> [local count: 6318560803]:
  goto <bb 31>; [100.00%]

  <bb 28> [local count: 2866076432]:
  # DEBUG D#19 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#19
  # DEBUG this => &__result
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__result
  # DEBUG __value => __first$_M_current_92
  # DEBUG INLINE_ENTRY operator=
  # DEBUG this => &SS.m_indices
  # DEBUG __x => __first$_M_current_92
  # DEBUG INLINE_ENTRY push_back
  _60 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_finish;
  _61 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_end_of_storage;
  if (_60 != _61)
    goto <bb 29>; [82.57%]
  else
    goto <bb 30>; [17.43%]

  <bb 29> [local count: 2366519310]:
  # DEBUG D#128 => &MEM[(struct vector *)&SS + 8B].D.90158._M_impl
  # DEBUG D#67 => D#128
  # DEBUG D#68 => __first$_M_current_92
  # DEBUG __p => _60
  # DEBUG INLINE_ENTRY construct
  # DEBUG __a => D#67
  # DEBUG D#66 => D#68
  # DEBUG __args#0 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __t => D#66
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66
  # DEBUG __p => _60
  # DEBUG INLINE_ENTRY construct
  # DEBUG this => D#63
  # DEBUG D#62 => D#64
  # DEBUG __args#0 => D#62
  # DEBUG __t => D#62
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#1 => 2
  # DEBUG __p => _60
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111346 => D#1
  # DEBUG BEGIN_STMT
  # DEBUG __p => NULL
  *_60 = _50;
  # DEBUG __p => NULL
  # DEBUG __p => NULL
  _63 = _60 + 2;
  MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_finish = _63;
  goto <bb 31>; [100.00%]

  <bb 30> [local count: 499557122]:
  # DEBUG D#19 => &__first
  # DEBUG this => D#19
  # DEBUG this => NULL
  # DEBUG this => &__result
  # DEBUG __value => __first$_M_current_92
  # DEBUG this => &SS.m_indices
  # DEBUG __x => __first$_M_current_92
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY end
  # DEBUG D#14 => &MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#14
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.112708] = _60;
  # DEBUG this => NULL
  std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (&SS.m_indices, D.112708, __first$_M_current_92);
  goto <bb 27>; [100.00%]

  <bb 31> [local count: 8685080097]:
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __value => NULL
  # DEBUG this => NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  # DEBUG D#165 => (const short unsigned int *) (ivtmp.92_37 + 2)
  # DEBUG __first$_M_current => D#165
  # DEBUG __first$_M_current => D#165
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  ivtmp.92_79 = ivtmp.92_37 + 2;
  _211 = (const short unsigned int *) ivtmp.92_79;
  if (__first_94 != _211)
    goto <bb 25>; [89.00%]
  else
    goto <bb 32>; [11.00%]

  <bb 32> [local count: 955358811]:
  pretmp_102 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start;
  # DEBUG __first$_M_current => NULL
  __first ={v} {CLOBBER};
  __last ={v} {CLOBBER};
  __result ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG old_selection => NULL
  # DEBUG this => &SS
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &SS.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#161 => MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start
  # DEBUG D#28 => D#161
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112437 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - D#161
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => D#161
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (pretmp_102 != 0B)
    goto <bb 36>; [61.01%]
  else
    goto <bb 42>; [38.99%]

  <bb 33> [count: 0]:
<L4>:
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __value => NULL
  # DEBUG this => NULL
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)&SS + 8B]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_finish
  _21 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _21
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112552 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _21
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _21
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_21 != 0B)
    goto <bb 34>; [0.00%]
  else
    goto <bb 35>; [0.00%]

  <bb 34> [count: 0]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _21
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _21
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112562 => D#34
  operator delete (_21);
  # DEBUG __p => NULL

  <bb 35> [count: 0]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&SS + 8] ={v} {CLOBBER};
  # DEBUG this => NULL
  resx 11

  <bb 36> [local count: 573966693]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => D#161
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => D#161
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112447 => D#34
  operator delete (pretmp_102);
  # DEBUG __p => NULL
  goto <bb 42>; [100.00%]

  <bb 37> [local count: 1073436867]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  S ={v} {CLOBBER};
  SS ={v} {CLOBBER};
  return;

  <bb 38> [count: 0]:
<L2>:
  # DEBUG this => &S
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#28 => _45
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112457 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _45
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _45
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _45
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _45
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112467 => D#34
  operator delete (_45);
  # DEBUG __p => NULL
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  resx 2

  <bb 39> [local count: 118078056]:
  # DEBUG __value => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG D#95 => {CLOBBER}
  # DEBUG __first => D#95
  # DEBUG D#96 => {CLOBBER}
  # DEBUG __last => D#96
  # DEBUG this => NULL
  # DEBUG container => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG __value => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#134 => &D.104305
  # DEBUG this => &SS
  # DEBUG old_selection => &S
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG predicate_i => D#134
  # DEBUG D#133 => D#134
  SS.m_container = v_2(D);
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#32 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#32
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#31 => &D#32->_M_impl
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&SS + 8] ={v} {CLOBBER};
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)&SS + 8B]._M_start = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D.112352 => D#133
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY back_inserter
  # DEBUG this => NULL
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG __r => &SS.m_indices
  # DEBUG INLINE_ENTRY __addressof
  # DEBUG __r => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __x => NULL
  # DEBUG D#131 => &S.m_indices
  # DEBUG D#17 => D#131
  # DEBUG INLINE_ENTRY end
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#132 => &S.m_indices
  # DEBUG D#18 => D#132
  # DEBUG INLINE_ENTRY begin
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY copy_if
  # DEBUG __first$_M_current => 0B
  # DEBUG __first$_M_current => 0B
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG __first$_M_current => NULL
  __first ={v} {CLOBBER};
  __last ={v} {CLOBBER};
  __result ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG old_selection => NULL
  # DEBUG this => &SS
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &SS.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#161 => MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start
  # DEBUG D#28 => D#161
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112437 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - D#161
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => D#161
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&SS] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => &S
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#28 => 0B
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112417 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - 0B
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => 0B
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  goto <bb 37>; [100.00%]

  <bb 40> [local count: 0]:
  # iftmp.0_42 = PHI <_45(5)>
  # DEBUG __value => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG D#95 => {CLOBBER}
  # DEBUG __first => D#95
  # DEBUG D#96 => {CLOBBER}
  # DEBUG __last => D#96
  # DEBUG this => NULL
  # DEBUG container => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG __value => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#134 => &D.104305
  # DEBUG this => &SS
  # DEBUG old_selection => &S
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG predicate_i => D#134
  # DEBUG D#133 => D#134
  SS.m_container = v_2(D);
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#32 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#32
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#31 => &D#32->_M_impl
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&SS + 8] ={v} {CLOBBER};
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)&SS + 8B]._M_start = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D.112352 => D#133
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY back_inserter
  # DEBUG this => NULL
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG __r => &SS.m_indices
  # DEBUG INLINE_ENTRY __addressof
  # DEBUG __r => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __x => NULL
  # DEBUG D#131 => &S.m_indices
  # DEBUG D#17 => D#131
  # DEBUG INLINE_ENTRY end
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#132 => &S.m_indices
  # DEBUG D#18 => D#132
  # DEBUG INLINE_ENTRY begin
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY copy_if
  # DEBUG __first$_M_current => iftmp.0_42
  # DEBUG __first$_M_current => iftmp.0_42
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG __first$_M_current => NULL
  __first ={v} {CLOBBER};
  __last ={v} {CLOBBER};
  __result ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG old_selection => NULL
  # DEBUG this => &SS
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &SS.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#161 => MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start
  # DEBUG D#28 => D#161
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112437 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - D#161
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => D#161
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  goto <bb 42>; [100.00%]

  <bb 41> [local count: 955358817]:
  # DEBUG __value => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG D#95 => {CLOBBER}
  # DEBUG __first => D#95
  # DEBUG D#96 => {CLOBBER}
  # DEBUG __last => D#96
  # DEBUG this => NULL
  # DEBUG container => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG __value => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#134 => &D.104305
  # DEBUG this => &SS
  # DEBUG old_selection => &S
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG predicate_i => D#134
  # DEBUG D#133 => D#134
  SS.m_container = v_2(D);
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#32 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#32
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#31 => &D#32->_M_impl
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&SS + 8] ={v} {CLOBBER};
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)&SS + 8B]._M_start = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D.112352 => D#133
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY back_inserter
  # DEBUG this => NULL
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG __r => &SS.m_indices
  # DEBUG INLINE_ENTRY __addressof
  # DEBUG __r => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __x => NULL
  # DEBUG D#131 => &S.m_indices
  # DEBUG D#17 => D#131
  # DEBUG INLINE_ENTRY end
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#132 => &S.m_indices
  # DEBUG D#18 => D#132
  # DEBUG INLINE_ENTRY begin
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY copy_if
  # DEBUG __first$_M_current => _45
  # DEBUG __first$_M_current => _45
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  ivtmp.92_86 = _81;
  goto <bb 26>; [100.00%]

  <bb 42> [local count: 582870533]:
  # iftmp.0_302 = PHI <iftmp.0_42(40), _45(32), _45(36)>
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&SS] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => &S
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#28 => iftmp.0_302
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112417 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - iftmp.0_302
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => iftmp.0_302
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => &S
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#28 => iftmp.0_302
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112417 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - iftmp.0_302
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => iftmp.0_302
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => iftmp.0_302
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => iftmp.0_302
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112427 => D#34
  operator delete (iftmp.0_302);
  # DEBUG __p => NULL
  goto <bb 37>; [100.00%]

}



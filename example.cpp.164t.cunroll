
;; Function foo (_Z3fooRKN3SOA9ContainerISt6vector13s_decayvertexJEEE, funcdef_no=4664, decl_uid=89013, cgraph_uid=997, symbol_order=1457)

Not peeling: number of iterations is not estimated
Not peeling: upper bound is known so can unroll completely

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

_32 -> { _19 }
.MEM_33 -> { .MEM_18 }
__value_34 -> { __value_17 }
.MEM_37 -> { .MEM_22 }
_66 -> { _12 }
__value_79 -> { __value_30 }
__first$_M_current_83 -> { __first$_M_current_46 }
__first$_M_current_86 -> { __first$_M_current_46 }
__value_120 -> { __value_30 }
.MEM_121 -> { .MEM_22 }
_122 -> { _19 }
.MEM_123 -> { .MEM_18 }
__value_124 -> { __value_17 }
_125 -> { _12 }
__first$_M_current_126 -> { __first$_M_current_46 }
__value_127 -> { __value_30 }
.MEM_128 -> { .MEM_22 }
_129 -> { _19 }
.MEM_130 -> { .MEM_18 }
__value_131 -> { __value_17 }
_132 -> { _12 }
__first$_M_current_133 -> { __first$_M_current_46 }
__value_134 -> { __value_30 }
.MEM_135 -> { .MEM_22 }
_136 -> { _19 }
.MEM_137 -> { .MEM_18 }
__value_138 -> { __value_17 }
_139 -> { _12 }
__first$_M_current_140 -> { __first$_M_current_46 }
__value_141 -> { __value_30 }
.MEM_142 -> { .MEM_22 }
_143 -> { _19 }
.MEM_144 -> { .MEM_18 }
__value_145 -> { __value_17 }
_146 -> { _12 }
__first$_M_current_147 -> { __first$_M_current_46 }
__value_148 -> { __value_30 }
.MEM_149 -> { .MEM_22 }
_150 -> { _19 }
.MEM_151 -> { .MEM_18 }
__value_152 -> { __value_17 }
_153 -> { _12 }
__first$_M_current_154 -> { __first$_M_current_46 }
__value_155 -> { __value_30 }
.MEM_156 -> { .MEM_22 }
_157 -> { _19 }
.MEM_158 -> { .MEM_18 }
__value_159 -> { __value_17 }
_160 -> { _12 }
__first$_M_current_161 -> { __first$_M_current_46 }
__value_162 -> { __value_30 }
.MEM_163 -> { .MEM_22 }
_164 -> { _19 }
.MEM_165 -> { .MEM_18 }
__value_166 -> { __value_17 }
_167 -> { _12 }
__first$_M_current_168 -> { __first$_M_current_46 }
__value_169 -> { __value_30 }
.MEM_170 -> { .MEM_22 }
_171 -> { _19 }
.MEM_172 -> { .MEM_18 }
__value_173 -> { __value_17 }
_174 -> { _12 }
__first$_M_current_175 -> { __first$_M_current_46 }
__value_176 -> { __value_30 }
.MEM_177 -> { .MEM_22 }
_178 -> { _19 }
.MEM_179 -> { .MEM_18 }
__value_180 -> { __value_17 }
_181 -> { _12 }
__first$_M_current_182 -> { __first$_M_current_46 }
__value_183 -> { __value_30 }
.MEM_184 -> { .MEM_22 }
_185 -> { _19 }
.MEM_186 -> { .MEM_18 }
__value_187 -> { __value_17 }
_188 -> { _12 }
__first$_M_current_189 -> { __first$_M_current_46 }
__value_190 -> { __value_30 }
.MEM_191 -> { .MEM_22 }
_192 -> { _19 }
.MEM_193 -> { .MEM_18 }
__value_194 -> { __value_17 }
_195 -> { _12 }
__first$_M_current_196 -> { __first$_M_current_46 }
__value_197 -> { __value_30 }
.MEM_198 -> { .MEM_22 }
_199 -> { _19 }
.MEM_200 -> { .MEM_18 }
__value_201 -> { __value_17 }
_202 -> { _12 }
__first$_M_current_203 -> { __first$_M_current_46 }
__value_204 -> { __value_30 }
.MEM_205 -> { .MEM_22 }
_206 -> { _19 }
.MEM_207 -> { .MEM_18 }
__value_208 -> { __value_17 }
_209 -> { _12 }
Incremental SSA update started at block: 30
Number of blocks in CFG: 78
Number of blocks to update: 30 ( 38%)


Removing basic block 77
Removing basic block 45
Merging blocks 46 and 49
Removing basic block 50
Removing basic block 52
Removing basic block 54
Removing basic block 56
Removing basic block 58
Removing basic block 60
Removing basic block 62
Removing basic block 64
Removing basic block 66
Removing basic block 68
Removing basic block 70
Removing basic block 72
Removing basic block 74
Removing basic block 76
Not peeling: number of iterations is not estimated
Not peeling: upper bound is known so can unroll completely
foo (const struct Container & v)
{
  vector(16) short unsigned int * vectp.83;
  vector(16) short unsigned int * vectp.82;
  vector(16) short unsigned int vect__32.81;
  vector(8) int vect_vec_iv_.80;
  int tmp.79;
  short unsigned int * tmp.78;
  unsigned long niters_vector_mult_vf.77;
  unsigned long bnd.76;
  unsigned long niters.75;
  struct __normal_iterator D.112708;
  const short unsigned int * __first$_M_current;
  struct back_insert_iterator D.112695;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct back_insert_iterator __result;
  short unsigned int * D.112657;
  long unsigned int __niter;
  short unsigned int * __first;
  int __value;
  short unsigned int * __first$_M_current;
  struct __normal_iterator D.112586;
  struct __normal_iterator D.112585;
  struct back_insert_iterator D.112584;
  struct back_insert_iterator D.112583;
  struct SelectionView SS;
  struct SelectionView S;
  unsigned long _8;
  short unsigned int * _12;
  short unsigned int _19;
  short unsigned int * _21;
  struct vertex_t * _23;
  struct vertex_t * _24;
  long int _25;
  long int _26;
  long unsigned int _27;
  short unsigned int _32;
  unsigned long _40;
  unsigned long _41;
  short unsigned int * iftmp.0_42;
  long unsigned int _44;
  short unsigned int * _45;
  unsigned long _48;
  short unsigned int _50;
  short unsigned int * iftmp.0_51;
  unsigned long _52;
  long unsigned int _53;
  struct vertex_t * _54;
  long unsigned int _55;
  struct value_type & _56;
  float _57;
  unsigned long _58;
  const short unsigned int * _59;
  short unsigned int * _60;
  short unsigned int * _61;
  short unsigned int * _63;
  const struct container_t & prephitmp_64;
  short unsigned int * _66;
  unsigned long _74;
  unsigned long _76;
  sizetype _78;
  unsigned long _80;
  unsigned long _81;
  sizetype _82;
  const struct container_t & pretmp_84;
  unsigned long _85;
  sizetype _87;
  long unsigned int _88;
  short unsigned int * prephitmp_89;
  unsigned long _90;
  long unsigned int _91;
  short unsigned int * pretmp_102;
  vector(8) int vect_cst__109;
  vector(8) int vect_cst__112;
  unsigned long ivtmp_118;
  unsigned long ivtmp_119;
  short unsigned int _122;
  short unsigned int * _125;
  short unsigned int _129;
  short unsigned int * _132;
  short unsigned int _136;
  short unsigned int * _139;
  short unsigned int _143;
  short unsigned int * _146;
  short unsigned int _150;
  short unsigned int * _153;
  short unsigned int _157;
  short unsigned int * _160;
  short unsigned int _164;
  short unsigned int * _167;
  short unsigned int _171;
  short unsigned int * _174;
  short unsigned int _178;
  short unsigned int * _181;
  short unsigned int _185;
  short unsigned int * _188;
  short unsigned int _192;
  short unsigned int * _195;
  short unsigned int _199;
  short unsigned int * _202;
  short unsigned int _206;
  short unsigned int * _209;

  <bb 2> [local count: 1073741826]:
  # DEBUG BEGIN_STMT
  # DEBUG this => &S
  # DEBUG container => v_2(D)
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&S] ={v} {CLOBBER};
  # DEBUG this => &D.112610
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => &D.112610
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#92 => &MEM[(const struct container_t *)v_2(D)].D.104277.D.104204.D.103696
  # DEBUG this => D#92
  # DEBUG INLINE_ENTRY size
  # DEBUG D#12 => &D#92->m_storage
  # DEBUG __t => D#12
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#5 => &MEM[(const struct tuple *)D#12].D.94746
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#4 => &D#5->D.93464
  # DEBUG __b => D#4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#13 => &MEM[(const struct _Head_base &)D#92]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  _23 = MEM[(struct vertex_t * *)v_2(D) + 8B];
  # DEBUG D#11 => D#13
  _24 = MEM[(struct vertex_t * *)v_2(D) + 16B];
  # DEBUG D#11 => D#13
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#11
  # DEBUG this => D#11
  _25 = _24 - _23;
  _26 = _25 /[ex] 4;
  _27 = (long unsigned int) _26;
  # DEBUG this => NULL
  # DEBUG this => &S.m_indices
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#140 => D#139
  # DEBUG __a => D#140
  # DEBUG D#91 => &MEM[(struct vector *)&S + 8B].D.90158
  # DEBUG this => D#91
  # DEBUG __n => _27
  # DEBUG __a => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#82 => &D#91->_M_impl
  # DEBUG this => D#82
  # DEBUG __a => NULL
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&S + 8] ={v} {CLOBBER};
  # DEBUG this => D#82
  # DEBUG __a => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#82
  # DEBUG D.112624 => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG D.112624 => NULL
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG this => D#91
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY _M_create_storage
  # DEBUG D#80 => D#91
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY _M_allocate
  # DEBUG this => D#80
  # DEBUG D#79 => D#80
  if (_27 != 0)
    goto <bb 3>; [71.00%]
  else
    goto <bb 28>; [29.00%]

  <bb 3> [local count: 762356702]:
  # DEBUG D#78 => &D#79->_M_impl
  # DEBUG D#77 => D#78
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY allocate
  # DEBUG __a => D#77
  # DEBUG D#76 => D#77
  # DEBUG D#74 => D#76
  # DEBUG D#75 => 0B
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY allocate
  # DEBUG this => D#74
  # DEBUG D.112655 => D#75
  # DEBUG D#73 => D#74
  # DEBUG D#72 => D#73
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  if (_25 < 0)
    goto <bb 4>; [0.04%]
  else
    goto <bb 5>; [99.96%]

  <bb 4> [local count: 304941]:
  std::__throw_bad_alloc ();

  <bb 5> [local count: 955358821]:
  _44 = _27 * 2;
  _45 = operator new (_44);
  # DEBUG __n => NULL
  # DEBUG __n => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#90 => &S.m_indices
  # DEBUG D#90 => &S.m_indices
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY _M_default_initialize
  # DEBUG D#89 => D#90
  # DEBUG this => D#89
  # DEBUG this => D#90
  # DEBUG D#87 => &D#89->D.90158
  # DEBUG this => D#87
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#88 => &MEM[(struct _Vector_base *)D#89]._M_impl
  # DEBUG this => NULL
  # DEBUG D#86 => D#88
  # DEBUG __first => _45
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY __uninitialized_default_n_a
  # DEBUG __niter => _27
  # DEBUG __first => _45
  _87 = (sizetype) _26;
  _78 = _87 * 2;
  __builtin_memset (_45, 0, _78);
  _91 = (long unsigned int) _26;
  _88 = _91 * 2;
  __first_94 = _45 + _88;
  # DEBUG __first$_M_current => _45
  # DEBUG __value => 0
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (__first_94 != _45)
    goto <bb 30>; [100.00%]
  else
    goto <bb 28>; [0.00%]

  <bb 30> [local count: 955358821]:
  _90 = (unsigned long) __first_94;
  _81 = (unsigned long) _45;
  _80 = _90 - _81;
  _40 = _80 + 18446744073709551614;
  _41 = _40 /[ex] 2;
  _74 = _41 & 9223372036854775807;
  niters.75_93 = _74 + 1;
  _85 = (unsigned long) __first_94;
  _52 = (unsigned long) _45;
  _8 = _85 - _52;
  _76 = _8 + 18446744073709551614;
  _48 = _76 /[ex] 2;
  _58 = _48 & 9223372036854775807;
  if (_58 <= 14)
    goto <bb 46>; [10.00%]
  else
    goto <bb 41>; [90.00%]

  <bb 41> [local count: 859822937]:
  bnd.76_20 = niters.75_93 >> 4;
  vect_cst__109 = { 16, 16, 16, 16, 16, 16, 16, 16 };
  vect_cst__112 = { 8, 8, 8, 8, 8, 8, 8, 8 };

  <bb 8> [local count: 5158937606]:
  # vect_vec_iv_.80_110 = PHI <vect_vec_iv_.80_111(31), { 0, 1, 2, 3, 4, 5, 6, 7 }(41)>
  # vectp.82_115 = PHI <vectp.82_116(31), _45(41)>
  # ivtmp_118 = PHI <ivtmp_119(31), 0(41)>
  vect_vec_iv_.80_111 = vect_vec_iv_.80_110 + vect_cst__109;
  vect_vec_iv_.80_113 = vect_vec_iv_.80_110 + vect_cst__112;
  # DEBUG __first$_M_current => NULL
  # DEBUG __value => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  vect__32.81_114 = VEC_PACK_TRUNC_EXPR <vect_vec_iv_.80_110, vect_vec_iv_.80_113>;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  MEM[(short unsigned int &)vectp.82_115] = vect__32.81_114;
  # DEBUG D#164 => NULL
  # DEBUG __value => D#164
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  # DEBUG D#163 => NULL
  # DEBUG __first$_M_current => D#163
  # DEBUG __first$_M_current => D#163
  # DEBUG __value => D#164
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  vectp.82_116 = vectp.82_115 + 32;
  ivtmp_119 = ivtmp_118 + 1;
  if (ivtmp_119 < bnd.76_20)
    goto <bb 31>; [83.33%]
  else
    goto <bb 43>; [16.67%]

  <bb 31> [local count: 4299114676]:
  goto <bb 8>; [100.00%]

  <bb 43> [local count: 859822937]:
  niters_vector_mult_vf.77_47 = bnd.76_20 << 4;
  _82 = niters_vector_mult_vf.77_47 * 2;
  tmp.78_29 = _45 + _82;
  tmp.79_3 = (int) niters_vector_mult_vf.77_47;
  if (niters_vector_mult_vf.77_47 == niters.75_93)
    goto <bb 47>; [6.25%]
  else
    goto <bb 46>; [93.75%]

  <bb 46> [local count: 901619889]:
  # __first$_M_current_7 = PHI <tmp.78_29(43), _45(30)>
  # __value_62 = PHI <tmp.79_3(43), 0(30)>
  # DEBUG __first$_M_current => __first$_M_current_7
  # DEBUG __value => __value_62
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _32 = (short unsigned int) __value_62;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_7 = _32;
  __value_34 = __value_62 + 1;
  # DEBUG __value => __value_34
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _66 = __first$_M_current_7 + 2;
  # DEBUG __first$_M_current => _66
  # DEBUG __first$_M_current => _66
  # DEBUG __value => __value_34
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_66 != __first_94)
    goto <bb 51>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 51> [local count: 802441729]:
  # __first$_M_current_83 = PHI <_66(46)>
  # __value_120 = PHI <__value_34(46)>
  # DEBUG __first$_M_current => __first$_M_current_83
  # DEBUG __value => __value_120
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _122 = (short unsigned int) __value_120;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_83 = _122;
  __value_124 = __value_120 + 1;
  # DEBUG __value => __value_124
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _125 = __first$_M_current_83 + 2;
  # DEBUG __first$_M_current => _125
  # DEBUG __first$_M_current => _125
  # DEBUG __value => __value_124
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_125 != __first_94)
    goto <bb 53>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 53> [local count: 714173124]:
  # __first$_M_current_126 = PHI <_125(51)>
  # __value_127 = PHI <__value_124(51)>
  # DEBUG __first$_M_current => __first$_M_current_126
  # DEBUG __value => __value_127
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _129 = (short unsigned int) __value_127;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_126 = _129;
  __value_131 = __value_127 + 1;
  # DEBUG __value => __value_131
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _132 = __first$_M_current_126 + 2;
  # DEBUG __first$_M_current => _132
  # DEBUG __first$_M_current => _132
  # DEBUG __value => __value_131
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_132 != __first_94)
    goto <bb 55>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 55> [local count: 635614065]:
  # __first$_M_current_133 = PHI <_132(53)>
  # __value_134 = PHI <__value_131(53)>
  # DEBUG __first$_M_current => __first$_M_current_133
  # DEBUG __value => __value_134
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _136 = (short unsigned int) __value_134;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_133 = _136;
  __value_138 = __value_134 + 1;
  # DEBUG __value => __value_138
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _139 = __first$_M_current_133 + 2;
  # DEBUG __first$_M_current => _139
  # DEBUG __first$_M_current => _139
  # DEBUG __value => __value_138
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_139 != __first_94)
    goto <bb 57>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 57> [local count: 565696516]:
  # __first$_M_current_140 = PHI <_139(55)>
  # __value_141 = PHI <__value_138(55)>
  # DEBUG __first$_M_current => __first$_M_current_140
  # DEBUG __value => __value_141
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _143 = (short unsigned int) __value_141;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_140 = _143;
  __value_145 = __value_141 + 1;
  # DEBUG __value => __value_145
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _146 = __first$_M_current_140 + 2;
  # DEBUG __first$_M_current => _146
  # DEBUG __first$_M_current => _146
  # DEBUG __value => __value_145
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_146 != __first_94)
    goto <bb 59>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 59> [local count: 503469877]:
  # __first$_M_current_147 = PHI <_146(57)>
  # __value_148 = PHI <__value_145(57)>
  # DEBUG __first$_M_current => __first$_M_current_147
  # DEBUG __value => __value_148
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _150 = (short unsigned int) __value_148;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_147 = _150;
  __value_152 = __value_148 + 1;
  # DEBUG __value => __value_152
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _153 = __first$_M_current_147 + 2;
  # DEBUG __first$_M_current => _153
  # DEBUG __first$_M_current => _153
  # DEBUG __value => __value_152
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_153 != __first_94)
    goto <bb 61>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 61> [local count: 448088219]:
  # __first$_M_current_154 = PHI <_153(59)>
  # __value_155 = PHI <__value_152(59)>
  # DEBUG __first$_M_current => __first$_M_current_154
  # DEBUG __value => __value_155
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _157 = (short unsigned int) __value_155;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_154 = _157;
  __value_159 = __value_155 + 1;
  # DEBUG __value => __value_159
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _160 = __first$_M_current_154 + 2;
  # DEBUG __first$_M_current => _160
  # DEBUG __first$_M_current => _160
  # DEBUG __value => __value_159
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_160 != __first_94)
    goto <bb 63>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 63> [local count: 398798501]:
  # __first$_M_current_161 = PHI <_160(61)>
  # __value_162 = PHI <__value_159(61)>
  # DEBUG __first$_M_current => __first$_M_current_161
  # DEBUG __value => __value_162
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _164 = (short unsigned int) __value_162;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_161 = _164;
  __value_166 = __value_162 + 1;
  # DEBUG __value => __value_166
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _167 = __first$_M_current_161 + 2;
  # DEBUG __first$_M_current => _167
  # DEBUG __first$_M_current => _167
  # DEBUG __value => __value_166
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_167 != __first_94)
    goto <bb 65>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 65> [local count: 354930673]:
  # __first$_M_current_168 = PHI <_167(63)>
  # __value_169 = PHI <__value_166(63)>
  # DEBUG __first$_M_current => __first$_M_current_168
  # DEBUG __value => __value_169
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _171 = (short unsigned int) __value_169;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_168 = _171;
  __value_173 = __value_169 + 1;
  # DEBUG __value => __value_173
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _174 = __first$_M_current_168 + 2;
  # DEBUG __first$_M_current => _174
  # DEBUG __first$_M_current => _174
  # DEBUG __value => __value_173
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_174 != __first_94)
    goto <bb 67>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 67> [local count: 315888275]:
  # __first$_M_current_175 = PHI <_174(65)>
  # __value_176 = PHI <__value_173(65)>
  # DEBUG __first$_M_current => __first$_M_current_175
  # DEBUG __value => __value_176
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _178 = (short unsigned int) __value_176;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_175 = _178;
  __value_180 = __value_176 + 1;
  # DEBUG __value => __value_180
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _181 = __first$_M_current_175 + 2;
  # DEBUG __first$_M_current => _181
  # DEBUG __first$_M_current => _181
  # DEBUG __value => __value_180
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_181 != __first_94)
    goto <bb 69>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 69> [local count: 281140555]:
  # __first$_M_current_182 = PHI <_181(67)>
  # __value_183 = PHI <__value_180(67)>
  # DEBUG __first$_M_current => __first$_M_current_182
  # DEBUG __value => __value_183
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _185 = (short unsigned int) __value_183;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_182 = _185;
  __value_187 = __value_183 + 1;
  # DEBUG __value => __value_187
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _188 = __first$_M_current_182 + 2;
  # DEBUG __first$_M_current => _188
  # DEBUG __first$_M_current => _188
  # DEBUG __value => __value_187
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_188 != __first_94)
    goto <bb 71>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 71> [local count: 250215083]:
  # __first$_M_current_189 = PHI <_188(69)>
  # __value_190 = PHI <__value_187(69)>
  # DEBUG __first$_M_current => __first$_M_current_189
  # DEBUG __value => __value_190
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _192 = (short unsigned int) __value_190;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_189 = _192;
  __value_194 = __value_190 + 1;
  # DEBUG __value => __value_194
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _195 = __first$_M_current_189 + 2;
  # DEBUG __first$_M_current => _195
  # DEBUG __first$_M_current => _195
  # DEBUG __value => __value_194
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_195 != __first_94)
    goto <bb 73>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 73> [local count: 222691400]:
  # __first$_M_current_196 = PHI <_195(71)>
  # __value_197 = PHI <__value_194(71)>
  # DEBUG __first$_M_current => __first$_M_current_196
  # DEBUG __value => __value_197
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _199 = (short unsigned int) __value_197;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_196 = _199;
  __value_201 = __value_197 + 1;
  # DEBUG __value => __value_201
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _202 = __first$_M_current_196 + 2;
  # DEBUG __first$_M_current => _202
  # DEBUG __first$_M_current => _202
  # DEBUG __value => __value_201
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_202 != __first_94)
    goto <bb 75>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 75> [local count: 198195336]:
  # __first$_M_current_203 = PHI <_202(73)>
  # __value_204 = PHI <__value_201(73)>
  # DEBUG __first$_M_current => __first$_M_current_203
  # DEBUG __value => __value_204
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _206 = (short unsigned int) __value_204;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_203 = _206;
  __value_208 = __value_204 + 1;
  # DEBUG __value => __value_208
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _209 = __first$_M_current_203 + 2;
  # DEBUG __first$_M_current => _209
  # DEBUG __first$_M_current => _209
  # DEBUG __value => __value_208
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_209 != __first_94)
    goto <bb 44>; [89.00%]
  else
    goto <bb 47>; [11.00%]

  <bb 44> [local count: 176393881]:
  # __first$_M_current_46 = PHI <_209(75)>
  # __value_30 = PHI <__value_208(75)>
  # DEBUG __first$_M_current => __first$_M_current_46
  # DEBUG __value => __value_30
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  _19 = (short unsigned int) __value_30;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_46 = _19;
  __value_17 = __value_30 + 1;
  # DEBUG __value => __value_17
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _12 = __first$_M_current_46 + 2;
  # DEBUG __first$_M_current => _12
  # DEBUG __first$_M_current => _12
  # DEBUG __value => __value_17
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  goto <bb 47>; [100.00%]

  <bb 9> [local count: 7729721292]:
  pretmp_84 = SS.m_container;

  <bb 10> [local count: 8685080097]:
  # __first$_M_current_92 = PHI <_45(47), _59(9)>
  # prephitmp_64 = PHI <v_2(D)(47), pretmp_84(9)>
  # DEBUG __first$_M_current => __first$_M_current_92
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG D#19 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#19
  _50 = *__first$_M_current_92;
  # DEBUG this => NULL
  # DEBUG i => _50
  # DEBUG INLINE_ENTRY operator()
  # DEBUG D#162 => SS.m_container
  # DEBUG D#58 => &D#162->D.104277.D.104204.D.103696
  _53 = (long unsigned int) _50;
  # DEBUG this => D#58
  # DEBUG idx => _53
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG D#129 => &MEM[(const struct _View *)D#162].m_storage
  # DEBUG this => NULL
  # DEBUG D.112672 => D#129
  # DEBUG D.112671 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#10
  # DEBUG D.112675 => D#129
  # DEBUG D.112674 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#9 => &D#10->D.101954
  # DEBUG this => D#9
  # DEBUG D.112678 => D#129
  # DEBUG D.112677 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#8 => &D#9->D.101686
  # DEBUG this => D#8
  # DEBUG D.112681 => D#129
  # DEBUG D.112680 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#7 => &D#8->D.101625
  # DEBUG this => D#7
  # DEBUG stor => D#129
  # DEBUG idx => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  # DEBUG this => NULL
  # DEBUG D.112681 => NULL
  # DEBUG D.112680 => NULL
  # DEBUG this => NULL
  # DEBUG D.112678 => NULL
  # DEBUG D.112677 => NULL
  # DEBUG this => NULL
  # DEBUG D.112675 => NULL
  # DEBUG D.112674 => NULL
  # DEBUG this => NULL
  # DEBUG D.112672 => NULL
  # DEBUG D.112671 => NULL
  # DEBUG this => NULL
  # DEBUG idx => NULL
  # DEBUG D#57 => D#61
  # DEBUG decayvertexskin => D#129
  # DEBUG decayvertexskin$8 => _53
  # DEBUG INLINE_ENTRY operator()
  # DEBUG __closure => D#57
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY vertex
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY _get
  # DEBUG D#56 => &MEM[(struct SkinBase *)&decayvertexskin].D.101954.D.101686
  # DEBUG this => D#56
  # DEBUG INLINE_ENTRY get
  # DEBUG D#53 => &D#56->D.101625
  # DEBUG this => D#53
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __t => D#129
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#3 => &MEM[(struct tuple *)D#129].D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#54 => &MEM[(struct _Head_base &)D#129]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG D#55 => &D#56->D.101625
  # DEBUG this => D#55
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _54 = MEM[(struct vertex_t * *)prephitmp_64 + 8B];
  # DEBUG D#6 => D#54
  # DEBUG __n => _53
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG this => D#6
  _55 = _53 * 4;
  _56 = _54 + _55;
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _57 = _56->k;
  # DEBUG D#59 => {CLOBBER}
  # DEBUG decayvertexskin => D#59
  # DEBUG D#60 => {CLOBBER}
  # DEBUG decayvertexskin$8 => D#60
  # DEBUG this => NULL
  # DEBUG i => NULL
  if (_57 > 3.0e+0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 11>; [67.00%]

  <bb 11> [local count: 6318560803]:
  goto <bb 15>; [100.00%]

  <bb 12> [local count: 2866076432]:
  # DEBUG D#19 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#19
  # DEBUG this => &__result
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__result
  # DEBUG __value => __first$_M_current_92
  # DEBUG INLINE_ENTRY operator=
  # DEBUG this => &SS.m_indices
  # DEBUG __x => __first$_M_current_92
  # DEBUG INLINE_ENTRY push_back
  _60 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_finish;
  _61 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_end_of_storage;
  if (_60 != _61)
    goto <bb 13>; [82.57%]
  else
    goto <bb 14>; [17.43%]

  <bb 13> [local count: 2366519310]:
  # DEBUG D#128 => &MEM[(struct vector *)&SS + 8B].D.90158._M_impl
  # DEBUG D#67 => D#128
  # DEBUG D#68 => __first$_M_current_92
  # DEBUG __p => _60
  # DEBUG INLINE_ENTRY construct
  # DEBUG __a => D#67
  # DEBUG D#66 => D#68
  # DEBUG __args#0 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __t => D#66
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66
  # DEBUG __p => _60
  # DEBUG INLINE_ENTRY construct
  # DEBUG this => D#63
  # DEBUG D#62 => D#64
  # DEBUG __args#0 => D#62
  # DEBUG __t => D#62
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#1 => 2
  # DEBUG __p => _60
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111346 => D#1
  # DEBUG BEGIN_STMT
  # DEBUG __p => NULL
  *_60 = _50;
  # DEBUG __p => NULL
  # DEBUG __p => NULL
  _63 = _60 + 2;
  MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_finish = _63;
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 499557122]:
  # DEBUG D#19 => &__first
  # DEBUG this => D#19
  # DEBUG this => NULL
  # DEBUG this => &__result
  # DEBUG __value => __first$_M_current_92
  # DEBUG this => &SS.m_indices
  # DEBUG __x => __first$_M_current_92
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY end
  # DEBUG D#14 => &MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#14
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.112708] = _60;
  # DEBUG this => NULL
  std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (&SS.m_indices, D.112708, __first$_M_current_92);
  goto <bb 11>; [100.00%]

  <bb 15> [local count: 8685080097]:
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __value => NULL
  # DEBUG this => NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _59 = __first$_M_current_92 + 2;
  # DEBUG __first$_M_current => _59
  # DEBUG __first$_M_current => _59
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (__first_94 != _59)
    goto <bb 9>; [89.00%]
  else
    goto <bb 16>; [11.00%]

  <bb 16> [local count: 955358805]:
  pretmp_102 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start;

  <bb 17> [local count: 1073436867]:
  # iftmp.0_51 = PHI <iftmp.0_42(28), _45(16)>
  # prephitmp_89 = PHI <0B(28), pretmp_102(16)>
  # DEBUG __first$_M_current => NULL
  __first ={v} {CLOBBER};
  __last ={v} {CLOBBER};
  __result ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG old_selection => NULL
  # DEBUG this => &SS
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &SS.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#161 => MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start
  # DEBUG D#28 => D#161
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112437 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - D#161
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => D#161
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (prephitmp_89 != 0B)
    goto <bb 21>; [53.47%]
  else
    goto <bb 22>; [46.53%]

  <bb 18> [count: 0]:
<L4>:
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __value => NULL
  # DEBUG this => NULL
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)&SS + 8B]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_finish
  _21 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _21
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112552 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _21
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _21
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_21 != 0B)
    goto <bb 19>; [0.00%]
  else
    goto <bb 20>; [0.00%]

  <bb 19> [count: 0]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _21
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _21
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112562 => D#34
  operator delete (_21);
  # DEBUG __p => NULL

  <bb 20> [count: 0]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&SS + 8] ={v} {CLOBBER};
  # DEBUG this => NULL
  resx 11

  <bb 21> [local count: 573966693]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => D#161
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => D#161
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112447 => D#34
  operator delete (prephitmp_89);
  # DEBUG __p => NULL

  <bb 22> [local count: 1073436867]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&SS] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => &S
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#28 => iftmp.0_51
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112417 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - iftmp.0_51
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => iftmp.0_51
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (iftmp.0_51 != 0B)
    goto <bb 23>; [53.47%]
  else
    goto <bb 24>; [46.53%]

  <bb 23> [local count: 573966693]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => iftmp.0_51
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => iftmp.0_51
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112427 => D#34
  operator delete (iftmp.0_51);
  # DEBUG __p => NULL

  <bb 24> [local count: 1073436867]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  S ={v} {CLOBBER};
  SS ={v} {CLOBBER};
  return;

  <bb 25> [count: 0]:
<L2>:
  # DEBUG this => &S
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  # DEBUG D#28 => _45
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112457 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _45
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _45
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_45 != 0B)
    goto <bb 26>; [0.00%]
  else
    goto <bb 27>; [0.00%]

  <bb 26> [count: 0]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _45
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _45
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112467 => D#34
  operator delete (_45);
  # DEBUG __p => NULL

  <bb 27> [count: 0]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  resx 2

  <bb 28> [local count: 118078056]:
  # iftmp.0_42 = PHI <0B(2), _45(5)>
  # DEBUG __value => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG D#95 => {CLOBBER}
  # DEBUG __first => D#95
  # DEBUG D#96 => {CLOBBER}
  # DEBUG __last => D#96
  # DEBUG this => NULL
  # DEBUG container => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG __value => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#134 => &D.104305
  # DEBUG this => &SS
  # DEBUG old_selection => &S
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG predicate_i => D#134
  # DEBUG D#133 => D#134
  SS.m_container = v_2(D);
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#32 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#32
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#31 => &D#32->_M_impl
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&SS + 8] ={v} {CLOBBER};
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)&SS + 8B]._M_start = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D.112352 => D#133
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY back_inserter
  # DEBUG this => NULL
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG __r => &SS.m_indices
  # DEBUG INLINE_ENTRY __addressof
  # DEBUG __r => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __x => NULL
  # DEBUG D#131 => &S.m_indices
  # DEBUG D#17 => D#131
  # DEBUG INLINE_ENTRY end
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#132 => &S.m_indices
  # DEBUG D#18 => D#132
  # DEBUG INLINE_ENTRY begin
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY copy_if
  # DEBUG __first$_M_current => iftmp.0_42
  # DEBUG __first$_M_current => iftmp.0_42
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  goto <bb 17>; [100.00%]

  <bb 47> [local count: 955358817]:
  # DEBUG __value => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG D#95 => {CLOBBER}
  # DEBUG __first => D#95
  # DEBUG D#96 => {CLOBBER}
  # DEBUG __last => D#96
  # DEBUG this => NULL
  # DEBUG container => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG __value => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#134 => &D.104305
  # DEBUG this => &SS
  # DEBUG old_selection => &S
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG predicate_i => D#134
  # DEBUG D#133 => D#134
  SS.m_container = v_2(D);
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#32 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#32
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#31 => &D#32->_M_impl
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&SS + 8] ={v} {CLOBBER};
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)&SS + 8B]._M_start = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D.112352 => D#133
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY back_inserter
  # DEBUG this => NULL
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG __r => &SS.m_indices
  # DEBUG INLINE_ENTRY __addressof
  # DEBUG __r => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  # DEBUG __x => NULL
  # DEBUG D#131 => &S.m_indices
  # DEBUG D#17 => D#131
  # DEBUG INLINE_ENTRY end
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG D#132 => &S.m_indices
  # DEBUG D#18 => D#132
  # DEBUG INLINE_ENTRY begin
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY copy_if
  # DEBUG __first$_M_current => _45
  # DEBUG __first$_M_current => _45
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  goto <bb 10>; [100.00%]

}



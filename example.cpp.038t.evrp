
;; Function operator new (_ZnwmPv, funcdef_no=212, decl_uid=4547, cgraph_uid=191, symbol_order=628)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__p_1(D): VARYING


operator new (size_t D.4545, void * __p)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  return __p_1(D);

}



;; Function std::max<long unsigned int> (_ZSt3maxImERKT_S2_S2_, funcdef_no=2547, decl_uid=55227, cgraph_uid=679, symbol_order=1131)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_2: VARYING
_3: ~[0, 0]
__a_5(D): ~[0, 0]
__b_6(D): ~[0, 0]


std::max<long unsigned int> (const long unsigned int & __a, const long unsigned int & __b)
{
  long unsigned int _1;
  long unsigned int _2;
  const long unsigned int & _3;

  <bb 2> :
  _1 = *__a_5(D);
  _2 = *__b_6(D);
  if (_1 < _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  // predicted unlikely by early return (on trees) predictor.

  <bb 4> :
  # _3 = PHI <__b_6(D)(3), __a_5(D)(2)>
  return _3;

}



;; Function std::_Head_base<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> >, false>::_M_head (_ZNSt10_Head_baseILm0ESt6vectorI8vertex_tN3SOA16AlignedAllocatorIS1_Lm64EEEELb0EE7_M_headERS6_, funcdef_no=4681, decl_uid=92959, cgraph_uid=948, symbol_order=1408)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__b_1(D): ~[0, 0]
_2: ~[0, 0]


std::_Head_base<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> >, false>::_M_head (struct _Head_base & __b)
{
  struct vector & _2;

  <bb 2> :
  _2 = &__b_1(D)->_M_head_impl;
  return _2;

}



;; Function std::_Tuple_impl<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >::_M_head (_ZNSt11_Tuple_implILm0EJSt6vectorI8vertex_tN3SOA16AlignedAllocatorIS1_Lm64EEEEEE7_M_headERS6_, funcdef_no=4680, decl_uid=93064, cgraph_uid=949, symbol_order=1409)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__t_2(D): ~[0, 0]
_4: ~[0, 0]


std::_Tuple_impl<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >::_M_head (struct _Tuple_impl & __t)
{
  struct vector & D.110905;
  struct vector & _4;

  <bb 2> :
  # DEBUG D#2 => &__t_2(D)->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY _M_head
  _4 = &MEM[(struct _Head_base &)__t_2(D)]._M_head_impl;
  # DEBUG __b => NULL
  return _4;

}



;; Function std::__get_helper<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > > (_ZSt12__get_helperILm0ESt6vectorI8vertex_tN3SOA16AlignedAllocatorIS1_Lm64EEEEJEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE, funcdef_no=4679, decl_uid=97087, cgraph_uid=950, symbol_order=1410)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__t_2(D): ~[0, 0]
_3: ~[0, 0]


std::__get_helper<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > > (struct _Tuple_impl & __t)
{
  struct vector & D.110909;
  struct vector & _3;

  <bb 2> :
  # DEBUG __t => __t_2(D)
  # DEBUG INLINE_ENTRY _M_head
  # DEBUG D#2 => &__t_2(D)->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY _M_head
  _3 = &MEM[(struct _Head_base &)__t_2(D)]._M_head_impl;
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  return _3;

}



;; Function std::get<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > > (_ZSt3getILm0EJSt6vectorI8vertex_tN3SOA16AlignedAllocatorIS1_Lm64EEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_, funcdef_no=4678, decl_uid=94944, cgraph_uid=951, symbol_order=1411)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__t_2(D): ~[0, 0]
_4: ~[0, 0]


std::get<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > > (struct tuple & __t)
{
  struct vector & D.110914;
  struct vector & _4;

  <bb 2> :
  # DEBUG D#3 => &__t_2(D)->D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY __get_helper
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY _M_head
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY _M_head
  _4 = &MEM[(struct _Head_base &)__t_2(D)]._M_head_impl;
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  return _4;

}



;; Function std::_Head_base<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> >, false>::_M_head (_ZNSt10_Head_baseILm0ESt6vectorI8vertex_tN3SOA16AlignedAllocatorIS1_Lm64EEEELb0EE7_M_headERKS6_, funcdef_no=4692, decl_uid=92961, cgraph_uid=959, symbol_order=1419)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__b_1(D): ~[0, 0]
_2: ~[0, 0]


std::_Head_base<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> >, false>::_M_head (const struct _Head_base & __b)
{
  const struct vector & _2;

  <bb 2> :
  _2 = &__b_1(D)->_M_head_impl;
  return _2;

}



;; Function std::_Tuple_impl<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >::_M_head (_ZNSt11_Tuple_implILm0EJSt6vectorI8vertex_tN3SOA16AlignedAllocatorIS1_Lm64EEEEEE7_M_headERKS6_, funcdef_no=4691, decl_uid=93066, cgraph_uid=960, symbol_order=1420)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__t_2(D): ~[0, 0]
_4: ~[0, 0]


std::_Tuple_impl<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >::_M_head (const struct _Tuple_impl & __t)
{
  const struct vector & D.110918;
  const struct vector & _4;

  <bb 2> :
  # DEBUG D#4 => &__t_2(D)->D.93464
  # DEBUG __b => D#4
  # DEBUG INLINE_ENTRY _M_head
  _4 = &MEM[(const struct _Head_base &)__t_2(D)]._M_head_impl;
  # DEBUG __b => NULL
  return _4;

}



;; Function std::__get_helper<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > > (_ZSt12__get_helperILm0ESt6vectorI8vertex_tN3SOA16AlignedAllocatorIS1_Lm64EEEEJEERKT0_RKSt11_Tuple_implIXT_EJS6_DpT1_EE, funcdef_no=4690, decl_uid=97085, cgraph_uid=961, symbol_order=1421)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__t_2(D): ~[0, 0]
_3: ~[0, 0]


std::__get_helper<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > > (const struct _Tuple_impl & __t)
{
  const struct vector & D.110922;
  const struct vector & _3;

  <bb 2> :
  # DEBUG __t => __t_2(D)
  # DEBUG INLINE_ENTRY _M_head
  # DEBUG D#4 => &__t_2(D)->D.93464
  # DEBUG __b => D#4
  # DEBUG INLINE_ENTRY _M_head
  _3 = &MEM[(const struct _Head_base &)__t_2(D)]._M_head_impl;
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  return _3;

}



;; Function std::get<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > > (_ZSt3getILm0EJSt6vectorI8vertex_tN3SOA16AlignedAllocatorIS1_Lm64EEEEEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKSA_, funcdef_no=4689, decl_uid=94942, cgraph_uid=962, symbol_order=1422)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__t_2(D): ~[0, 0]
_4: ~[0, 0]


std::get<0, std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > > (const struct tuple & __t)
{
  const struct vector & D.110927;
  const struct vector & _4;

  <bb 2> :
  # DEBUG D#5 => &__t_2(D)->D.94746
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY __get_helper
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY _M_head
  # DEBUG D#4 => &D#5->D.93464
  # DEBUG __b => D#4
  # DEBUG INLINE_ENTRY _M_head
  _4 = &MEM[(const struct _Head_base &)__t_2(D)]._M_head_impl;
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  return _4;

}



;; Function main (main, funcdef_no=4728, decl_uid=104327, cgraph_uid=998, symbol_order=1458)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:



main ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  return 0;

}



;; Function std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> >::operator[] (_ZNSt6vectorI8vertex_tN3SOA16AlignedAllocatorIS0_Lm64EEEEixEm, funcdef_no=5007, decl_uid=92296, cgraph_uid=1277, symbol_order=1737)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_2: [0, +INF]
this_4(D): ~[0B, 0B]
__n_5(D): VARYING
_6: VARYING


std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> >::operator[] (struct vector * const this, size_type __n)
{
  struct vertex_t * _1;
  long unsigned int _2;
  struct value_type & _6;

  <bb 2> :
  _1 = this_4(D)->D.92757._M_impl._M_start;
  _2 = __n_5(D) * 4;
  _6 = _1 + _2;
  return _6;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_get_Tp_allocator (_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv, funcdef_no=5115, decl_uid=89385, cgraph_uid=1384, symbol_order=1844)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_1(D): ~[0B, 0B]
_2: ~[0, 0]


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_get_Tp_allocator (struct _Vector_base * const this)
{
  struct _Tp_alloc_type & _2;

  <bb 2> :
  _2 = &this_1(D)->_M_impl;
  return _2;

}



;; Function SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position::position (_ZN3SOA5_ViewISt5tupleIJSt6vectorI8vertex_tNS_16AlignedAllocatorIS3_Lm64EEEEEE13s_decayvertexJ8f_vertexEE8positionC2EPS7_m, funcdef_no=5131, decl_uid=94840, cgraph_uid=1393, symbol_order=1853)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
stor_4(D): VARYING
idx_6(D): VARYING


SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position::position (struct position * const this, struct SOAStorage * stor, size_type idx)
{
  <bb 2> :
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->m_stor = stor_4(D);
  this_2(D)->m_idx = idx_6(D);
  return;

}



;; Function SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position>::ObjectProxy (_ZN3SOA11ObjectProxyINS_5_ViewISt5tupleIJSt6vectorI8vertex_tNS_16AlignedAllocatorIS4_Lm64EEEEEE13s_decayvertexJ8f_vertexEE8positionEECI2SC_EPS8_m, funcdef_no=5133, decl_uid=101593, cgraph_uid=1396, symbol_order=1856)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_5(D): ~[0B, 0B]
_11(D): VARYING
_12(D): VARYING


SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position>::ObjectProxy (struct ObjectProxy * const this, struct SOAStorage * D.101595, size_type D.101596)
{
  struct position * _1;

  <bb 2> :
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  _1 = &this_5(D)->D.101625;
  # DEBUG this => _1
  # DEBUG stor => _12(D)
  # DEBUG idx => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  MEM[(struct position *)this_5(D)].m_stor = _12(D);
  MEM[(struct position *)this_5(D)].m_idx = _11(D);
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  return;

}



;; Function SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >::PrintableNullSkin (_ZN3SOA17PrintableNullSkinINS_11ObjectProxyINS_5_ViewISt5tupleIJSt6vectorI8vertex_tNS_16AlignedAllocatorIS5_Lm64EEEEEE13s_decayvertexJ8f_vertexEE8positionEEEECI2SD_EPS9_m, funcdef_no=5135, decl_uid=101682, cgraph_uid=1399, symbol_order=1859)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_5(D): ~[0B, 0B]
_11(D): VARYING
_12(D): VARYING


SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >::PrintableNullSkin (struct PrintableNullSkin * const this, struct SOAStorage * D.101684, size_type D.101685)
{
  struct ObjectProxy * _1;

  <bb 2> :
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  _1 = &this_5(D)->D.101686;
  # DEBUG this => _1
  # DEBUG D.110945 => _12(D)
  # DEBUG D.110946 => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#7 => &_1->D.101625
  # DEBUG this => D#7
  # DEBUG stor => _12(D)
  # DEBUG idx => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  MEM[(struct position *)this_5(D)].m_stor = _12(D);
  MEM[(struct position *)this_5(D)].m_idx = _11(D);
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  # DEBUG this => NULL
  # DEBUG D.110945 => NULL
  # DEBUG D.110946 => NULL
  return;

}



;; Function SOA::impl::SkinBase<SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >, f_vertex>::SkinBase (_ZN3SOA4impl8SkinBaseINS_17PrintableNullSkinINS_11ObjectProxyINS_5_ViewISt5tupleIJSt6vectorI8vertex_tNS_16AlignedAllocatorIS7_Lm64EEEEEE13s_decayvertexJ8f_vertexEE8positionEEEEEJSD_EECI2SF_EPSB_m, funcdef_no=5137, decl_uid=101925, cgraph_uid=1402, symbol_order=1862)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_5(D): ~[0B, 0B]
_11(D): VARYING
_12(D): VARYING


SOA::impl::SkinBase<SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >, f_vertex>::SkinBase (struct SkinBase * const this, struct SOAStorage * D.101927, size_type D.101928)
{
  struct PrintableNullSkin * _1;

  <bb 2> :
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  _1 = &this_5(D)->D.101954;
  # DEBUG this => _1
  # DEBUG D.110952 => _12(D)
  # DEBUG D.110953 => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#8 => &_1->D.101686
  # DEBUG this => D#8
  # DEBUG D.110955 => _12(D)
  # DEBUG D.110954 => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#7 => &D#8->D.101625
  # DEBUG this => D#7
  # DEBUG stor => _12(D)
  # DEBUG idx => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  MEM[(struct position *)this_5(D)].m_stor = _12(D);
  MEM[(struct position *)this_5(D)].m_idx = _11(D);
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  # DEBUG this => NULL
  # DEBUG D.110955 => NULL
  # DEBUG D.110954 => NULL
  # DEBUG this => NULL
  # DEBUG D.110952 => NULL
  # DEBUG D.110953 => NULL
  return;

}



;; Function s_decayvertex<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >::s_decayvertex (_ZN13s_decayvertexIN3SOA11ObjectProxyINS0_5_ViewISt5tupleIJSt6vectorI8vertex_tNS0_16AlignedAllocatorIS5_Lm64EEEEEES_J8f_vertexEE8positionEEEECI2SC_EPS9_m, funcdef_no=5139, decl_uid=102277, cgraph_uid=1405, symbol_order=1865)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_5(D): ~[0B, 0B]
_11(D): VARYING
_12(D): VARYING


s_decayvertex<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >::s_decayvertex (struct s_decayvertex * const this, struct SOAStorage * D.102279, size_type D.102280)
{
  struct SkinBase * _1;

  <bb 2> :
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  _1 = &this_5(D)->D.102303;
  # DEBUG this => _1
  # DEBUG D.110962 => _12(D)
  # DEBUG D.110963 => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#9 => &_1->D.101954
  # DEBUG this => D#9
  # DEBUG D.110965 => _12(D)
  # DEBUG D.110964 => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#8 => &D#9->D.101686
  # DEBUG this => D#8
  # DEBUG D.110968 => _12(D)
  # DEBUG D.110967 => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#7 => &D#8->D.101625
  # DEBUG this => D#7
  # DEBUG stor => _12(D)
  # DEBUG idx => _11(D)
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)this_5(D)] ={v} {CLOBBER};
  MEM[(struct position *)this_5(D)].m_stor = _12(D);
  MEM[(struct position *)this_5(D)].m_idx = _11(D);
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  # DEBUG this => NULL
  # DEBUG D.110968 => NULL
  # DEBUG D.110967 => NULL
  # DEBUG this => NULL
  # DEBUG D.110965 => NULL
  # DEBUG D.110964 => NULL
  # DEBUG this => NULL
  # DEBUG D.110962 => NULL
  # DEBUG D.110963 => NULL
  return;

}



;; Function SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::operator[] (_ZNK3SOA5_ViewISt5tupleIJSt6vectorI8vertex_tNS_16AlignedAllocatorIS3_Lm64EEEEEE13s_decayvertexJ8f_vertexEEixEm, funcdef_no=5125, decl_uid=102782, cgraph_uid=1407, symbol_order=1867)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_2(D): ~[0B, 0B]
idx_4(D): VARYING


SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::operator[] (const struct _View * const this, size_type idx)
{
  long unsigned int SR.13;
  struct SOAStorage * SR.12;
  const struct const_reference D.108182;
  const struct const_reference D.110665;
  const struct SOAStorage * _1;

  <bb 2> :
  _1 = &this_2(D)->m_storage;
  # DEBUG this => &D.108182
  # DEBUG D.110975 => _1
  # DEBUG D.110976 => idx_4(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#10 => &D.108182.D.102303
  # DEBUG this => D#10
  # DEBUG D.110978 => _1
  # DEBUG D.110977 => idx_4(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#9 => &D#10->D.101954
  # DEBUG this => D#9
  # DEBUG D.110981 => _1
  # DEBUG D.110980 => idx_4(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#8 => &D#9->D.101686
  # DEBUG this => D#8
  # DEBUG D.110984 => _1
  # DEBUG D.110983 => idx_4(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#7 => &D#8->D.101625
  # DEBUG this => D#7
  # DEBUG stor => _1
  # DEBUG idx => idx_4(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  # DEBUG this => NULL
  # DEBUG D.110984 => NULL
  # DEBUG D.110983 => NULL
  # DEBUG this => NULL
  # DEBUG D.110981 => NULL
  # DEBUG D.110980 => NULL
  # DEBUG this => NULL
  # DEBUG D.110978 => NULL
  # DEBUG D.110977 => NULL
  # DEBUG this => NULL
  # DEBUG D.110975 => NULL
  # DEBUG D.110976 => NULL
  MEM[(struct s_decayvertex *)&D.110665] = _1;
  MEM[(struct s_decayvertex *)&D.110665 + 8B] = idx_4(D);
  return D.110665;

}



;; Function std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> >::size (_ZNKSt6vectorI8vertex_tN3SOA16AlignedAllocatorIS0_Lm64EEEE4sizeEv, funcdef_no=5194, decl_uid=92276, cgraph_uid=1463, symbol_order=1923)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_2: VARYING
_3: VARYING
_4: [-2305843009213693952, 2305843009213693951]
this_6(D): ~[0B, 0B]
_7: ~[2305843009213693952, 16140901064495857663]


std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> >::size (const struct vector * const this)
{
  struct vertex_t * _1;
  struct vertex_t * _2;
  long int _3;
  long int _4;
  size_type _7;

  <bb 2> :
  _1 = this_6(D)->D.92757._M_impl._M_finish;
  _2 = this_6(D)->D.92757._M_impl._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 4;
  _7 = (size_type) _4;
  return _7;

}



;; Function SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::size (_ZNK3SOA5_ViewISt5tupleIJSt6vectorI8vertex_tNS_16AlignedAllocatorIS3_Lm64EEEEEE13s_decayvertexJ8f_vertexEE4sizeEv, funcdef_no=5096, decl_uid=102640, cgraph_uid=1365, symbol_order=1825)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_3(D): ~[0B, 0B]
_8: VARYING
_9: VARYING
_10: VARYING
_11: [-2305843009213693952, 2305843009213693951]
_12: ~[2305843009213693952, 16140901064495857663]


SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::size (const struct _View * const this)
{
  const struct __tuple_element_t & D.111010;
  size_type D.111005;
  struct vertex_t * _8;
  struct vertex_t * _9;
  long int _10;
  long int _11;
  long unsigned int _12;

  <bb 2> :
  # DEBUG D#12 => &this_3(D)->m_storage
  # DEBUG __t => D#12
  # DEBUG INLINE_ENTRY get
  # DEBUG D#5 => &MEM[(const struct tuple *)D#12].D.94746
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY __get_helper
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY _M_head
  # DEBUG D#4 => &D#5->D.93464
  # DEBUG __b => D#4
  # DEBUG INLINE_ENTRY _M_head
  # DEBUG D#13 => &MEM[(const struct _Head_base &)this_3(D)]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  _8 = MEM[(struct vertex_t * *)this_3(D) + 8B];
  # DEBUG D#11 => D#13
  _9 = MEM[(struct vertex_t * *)this_3(D) + 16B];
  # DEBUG D#11 => D#13
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#11
  # DEBUG this => D#11
  _10 = _9 - _8;
  _11 = _10 /[ex] 4;
  _12 = (long unsigned int) _11;
  return _12;

}



;; Function __gnu_cxx::new_allocator<short unsigned int>::new_allocator (_ZN9__gnu_cxx13new_allocatorItEC2Ev, funcdef_no=5196, decl_uid=89158, cgraph_uid=1465, symbol_order=1925)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:



__gnu_cxx::new_allocator<short unsigned int>::new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator<short unsigned int>::allocator (_ZNSaItEC2Ev, funcdef_no=5098, decl_uid=89223, cgraph_uid=1367, symbol_order=1827)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]


std::allocator<short unsigned int>::allocator (struct allocator * const this)
{
  <bb 2> :
  # DEBUG this => this_2(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  return;

}



;; Function __gnu_cxx::new_allocator<short unsigned int>::~new_allocator (_ZN9__gnu_cxx13new_allocatorItED2Ev, funcdef_no=5199, decl_uid=89163, cgraph_uid=1468, symbol_order=1928)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:



__gnu_cxx::new_allocator<short unsigned int>::~new_allocator (struct new_allocator * const this)
{
  <bb 2> :
  return;

}



;; Function std::allocator<short unsigned int>::~allocator (_ZNSaItED2Ev, funcdef_no=5101, decl_uid=89228, cgraph_uid=1370, symbol_order=1830)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]


std::allocator<short unsigned int>::~allocator (struct allocator * const this)
{
  <bb 2> :
  # DEBUG this => this_2(D)
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  return;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_impl::~_Vector_impl (_ZNSt12_Vector_baseItSaItEE12_Vector_implD2Ev, funcdef_no=5111, decl_uid=90193, cgraph_uid=1379, symbol_order=1839)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_impl::~_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  # DEBUG this => this_2(D)
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => this_2(D)
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function __gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEC2ERKS1_, funcdef_no=5206, decl_uid=107064, cgraph_uid=1475, symbol_order=1935)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
this_3(D): ~[0B, 0B]
__i_5(D): ~[0, 0]


__gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::__normal_iterator (struct __normal_iterator * const this, short unsigned int * const & __i)
{
  short unsigned int * _1;

  <bb 2> :
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  _1 = *__i_5(D);
  this_3(D)->_M_current = _1;
  return;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::end (_ZNSt6vectorItSaItEE3endEv, funcdef_no=5107, decl_uid=89657, cgraph_uid=1376, symbol_order=1836)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
_7: VARYING


std::vector<short unsigned int, std::allocator<short unsigned int> >::end (struct vector * const this)
{
  short unsigned int * SR.16;
  struct iterator D.108007;
  struct iterator D.110613;
  short unsigned int * _7;

  <bb 2> :
  # DEBUG D#14 => &this_2(D)->D.90158._M_impl._M_finish
  # DEBUG this => &D.108007
  # DEBUG __i => D#14
  # DEBUG INLINE_ENTRY __ct 
  _7 = MEM[(short unsigned int * const &)this_2(D) + 8];
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.110613] = _7;
  return D.110613;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::begin (_ZNSt6vectorItSaItEE5beginEv, funcdef_no=5106, decl_uid=89653, cgraph_uid=1375, symbol_order=1835)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
_7: VARYING


std::vector<short unsigned int, std::allocator<short unsigned int> >::begin (struct vector * const this)
{
  short unsigned int * SR.17;
  struct iterator D.108005;
  struct iterator D.110616;
  short unsigned int * _7;

  <bb 2> :
  # DEBUG D#15 => &this_2(D)->D.90158._M_impl._M_start
  # DEBUG this => &D.108005
  # DEBUG __i => D#15
  # DEBUG INLINE_ENTRY __ct 
  _7 = MEM[(short unsigned int * const &)this_2(D)];
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.110616] = _7;
  return D.110616;

}



;; Function __gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEppEv, funcdef_no=5209, decl_uid=107026, cgraph_uid=1478, symbol_order=1938)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_2: VARYING
this_4(D): ~[0B, 0B]


__gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator++ (struct __normal_iterator * const this)
{
  short unsigned int * _1;
  short unsigned int * _2;

  <bb 2> :
  _1 = this_4(D)->_M_current;
  _2 = _1 + 2;
  this_4(D)->_M_current = _2;
  return this_4(D);

}



;; Function __gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEdeEv, funcdef_no=5210, decl_uid=107022, cgraph_uid=1479, symbol_order=1939)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
_3: VARYING


__gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator* (const struct __normal_iterator * const this)
{
  short unsigned int & _3;

  <bb 2> :
  _3 = this_2(D)->_M_current;
  return _3;

}



;; Function __gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::__normal_iterator (_ZN9__gnu_cxx17__normal_iteratorIPKtSt6vectorItSaItEEEC2ERKS2_, funcdef_no=5217, decl_uid=107267, cgraph_uid=1486, symbol_order=1946)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
this_3(D): ~[0B, 0B]
__i_5(D): ~[0, 0]


__gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::__normal_iterator (struct __normal_iterator * const this, const short unsigned int * const & __i)
{
  const short unsigned int * _1;

  <bb 2> :
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  _1 = *__i_5(D);
  this_3(D)->_M_current = _1;
  return;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::end (_ZNKSt6vectorItSaItEE3endEv, funcdef_no=5121, decl_uid=89659, cgraph_uid=1390, symbol_order=1850)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
this_3(D): ~[0B, 0B]


std::vector<short unsigned int, std::allocator<short unsigned int> >::end (const struct vector * const this)
{
  const short unsigned int * SR.19;
  const short unsigned int * const D.108069;
  struct const_iterator D.108070;
  struct const_iterator D.110640;
  short unsigned int * _1;

  <bb 2> :
  _1 = this_3(D)->D.90158._M_impl._M_finish;
  # DEBUG this => &D.108070
  # DEBUG __i => &D.108069
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.110640] = _1;
  return D.110640;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::begin (_ZNKSt6vectorItSaItEE5beginEv, funcdef_no=5120, decl_uid=89655, cgraph_uid=1389, symbol_order=1849)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
this_3(D): ~[0B, 0B]


std::vector<short unsigned int, std::allocator<short unsigned int> >::begin (const struct vector * const this)
{
  const short unsigned int * SR.21;
  const short unsigned int * const D.108066;
  struct const_iterator D.108067;
  struct const_iterator D.110644;
  short unsigned int * _1;

  <bb 2> :
  _1 = this_3(D)->D.90158._M_impl._M_start;
  # DEBUG this => &D.108067
  # DEBUG __i => &D.108066
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.110644] = _1;
  return D.110644;

}



;; Function std::__addressof<std::vector<short unsigned int, std::allocator<short unsigned int> > > (_ZSt11__addressofISt6vectorItSaItEEEPT_RS3_, funcdef_no=5220, decl_uid=108670, cgraph_uid=1488, symbol_order=1948)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__r_1(D): ~[0, 0]


std::__addressof<std::vector<short unsigned int, std::allocator<short unsigned int> > > (struct vector & __r)
{
  <bb 2> :
  return __r_1(D);

}



;; Function std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >::back_insert_iterator (_ZNSt20back_insert_iteratorISt6vectorItSaItEEEC2ERS2_, funcdef_no=5221, decl_uid=107311, cgraph_uid=1490, symbol_order=1950)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_3(D): ~[0B, 0B]
__x_5(D): ~[0, 0]


std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >::back_insert_iterator (struct back_insert_iterator * const this, struct vector & __x)
{
  struct vector * D.111073;

  <bb 2> :
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  # DEBUG __r => __x_5(D)
  # DEBUG INLINE_ENTRY __addressof
  # DEBUG __r => NULL
  this_3(D)->container = __x_5(D);
  return;

}



;; Function std::back_inserter<std::vector<short unsigned int, std::allocator<short unsigned int> > > (_ZSt13back_inserterISt6vectorItSaItEEESt20back_insert_iteratorIT_ERS4_, funcdef_no=5122, decl_uid=107287, cgraph_uid=1391, symbol_order=1851)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__x_2(D): ~[0, 0]


std::back_inserter<std::vector<short unsigned int, std::allocator<short unsigned int> > > (struct vector & __x)
{
  struct vector * SR.23;
  struct back_insert_iterator D.108090;
  struct back_insert_iterator D.110635;

  <bb 2> :
  # DEBUG this => &D.108090
  # DEBUG __x => __x_2(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG __r => __x_2(D)
  # DEBUG INLINE_ENTRY __addressof
  # DEBUG __r => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  MEM[(struct back_insert_iterator *)&D.110635] = __x_2(D);
  return D.110635;

}



;; Function __gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator++ (_ZN9__gnu_cxx17__normal_iteratorIPKtSt6vectorItSaItEEEppEv, funcdef_no=5224, decl_uid=107229, cgraph_uid=1493, symbol_order=1953)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_2: VARYING
this_4(D): ~[0B, 0B]


__gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator++ (struct __normal_iterator * const this)
{
  const short unsigned int * _1;
  const short unsigned int * _2;

  <bb 2> :
  _1 = this_4(D)->_M_current;
  _2 = _1 + 2;
  this_4(D)->_M_current = _2;
  return this_4(D);

}



;; Function __gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator* (_ZNK9__gnu_cxx17__normal_iteratorIPKtSt6vectorItSaItEEEdeEv, funcdef_no=5225, decl_uid=107225, cgraph_uid=1494, symbol_order=1954)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
_3: VARYING


__gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator* (const struct __normal_iterator * const this)
{
  const short unsigned int & _3;

  <bb 2> :
  _3 = this_2(D)->_M_current;
  return _3;

}



;; Function std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator* (_ZNSt20back_insert_iteratorISt6vectorItSaItEEEdeEv, funcdef_no=5227, decl_uid=107301, cgraph_uid=1496, symbol_order=1956)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_1(D): ~[0B, 0B]


std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator* (struct back_insert_iterator * const this)
{
  <bb 2> :
  return this_1(D);

}



;; Function std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator++ (_ZNSt20back_insert_iteratorISt6vectorItSaItEEEppEv, funcdef_no=5229, decl_uid=107303, cgraph_uid=1498, symbol_order=1958)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_1(D): ~[0B, 0B]


std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator++ (struct back_insert_iterator * const this)
{
  <bb 2> :
  return this_1(D);

}



;; Function __gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::base (_ZNK9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEE4baseEv, funcdef_no=5283, decl_uid=107051, cgraph_uid=1552, symbol_order=2012)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_1(D): ~[0B, 0B]
_2: ~[0, 0]


__gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::base (const struct __normal_iterator * const this)
{
  short unsigned int * const & _2;

  <bb 2> :
  _2 = &this_1(D)->_M_current;
  return _2;

}



;; Function __gnu_cxx::operator!=<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > > (_ZN9__gnu_cxxneIPtSt6vectorItSaItEEEEbRKNS_17__normal_iteratorIT_T0_EESA_, funcdef_no=5208, decl_uid=108009, cgraph_uid=1477, symbol_order=1937)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_2: VARYING
_4: VARYING
__lhs_6(D): ~[0, 0]
__rhs_8(D): ~[0, 0]
_10: [0, +INF]


__gnu_cxx::operator!=<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  short unsigned int * const & D.111094;
  short unsigned int * const & D.111092;
  short unsigned int * _2;
  short unsigned int * _4;
  bool _10;

  <bb 2> :
  # DEBUG this => __lhs_6(D)
  # DEBUG INLINE_ENTRY base
  # DEBUG this => NULL
  _2 = MEM[(short unsigned int * const &)__lhs_6(D)];
  # DEBUG this => __rhs_8(D)
  # DEBUG INLINE_ENTRY base
  # DEBUG this => NULL
  _4 = MEM[(short unsigned int * const &)__rhs_8(D)];
  _10 = _2 != _4;
  return _10;

}



;; Function std::iota<__gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >, int> (_ZSt4iotaIN9__gnu_cxx17__normal_iteratorIPtSt6vectorItSaItEEEEiEvT_S7_T0_, funcdef_no=5108, decl_uid=107083, cgraph_uid=1377, symbol_order=1837)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 3 }
;; 5 succs { 1 }

Value ranges after Early VRP:

_1: [0, +INF]
__value_3: [__value_5(D), +INF]
__value_5(D): VARYING
_7: VARYING
__value_11: VARYING
__first$_M_current_14: [__first$_M_current_18, -1B]
_16: VARYING
__first$_M_current_18: VARYING


std::iota<__gnu_cxx::__normal_iterator<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >, int> (struct __normal_iterator __first, struct __normal_iterator __last, int __value)
{
  short unsigned int * __first$_M_current;
  short unsigned int & D.111103;
  struct __normal_iterator & D.111100;
  bool D.111098;
  short unsigned int _1;
  short unsigned int * _7;
  short unsigned int * _16;

  <bb 2> :
  __first$_M_current_18 = MEM[(struct __normal_iterator *)&__first];
  # DEBUG __first$_M_current => __first$_M_current_18

  <bb 3> :
  # __value_3 = PHI <__value_11(4), __value_5(D)(2)>
  # __first$_M_current_14 = PHI <_16(4), __first$_M_current_18(2)>
  # DEBUG __first$_M_current => __first$_M_current_14
  # DEBUG __value => __value_3
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _7 = MEM[(short unsigned int * const &)&__last];
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_7 != __first$_M_current_14)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  _1 = (short unsigned int) __value_3;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY operator*
  # DEBUG this => D#16
  *__first$_M_current_14 = _1;
  __value_11 = __value_3 + 1;
  # DEBUG __value => __value_11
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _16 = __first$_M_current_14 + 2;
  # DEBUG __first$_M_current => _16
  goto <bb 3>; [100.00%]

  <bb 5> :
  return;

}



;; Function std::_Destroy_aux<true>::__destroy<short unsigned int*> (_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_, funcdef_no=5285, decl_uid=108658, cgraph_uid=1554, symbol_order=2014)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:



std::_Destroy_aux<true>::__destroy<short unsigned int*> (short unsigned int * D.108659, short unsigned int * D.108660)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::_Destroy<short unsigned int*> (_ZSt8_DestroyIPtEvT_S1_, funcdef_no=5212, decl_uid=108041, cgraph_uid=1481, symbol_order=1941)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__first_2(D): VARYING
__last_3(D): VARYING


std::_Destroy<short unsigned int*> (short unsigned int * __first, short unsigned int * __last)
{
  <bb 2> :
  # DEBUG D#20 => __first_2(D)
  # DEBUG D#21 => __last_3(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  return;

}



;; Function std::_Destroy<short unsigned int*, short unsigned int> (_ZSt8_DestroyIPttEvT_S1_RSaIT0_E, funcdef_no=5116, decl_uid=107094, cgraph_uid=1385, symbol_order=1845)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__first_2(D): VARYING
__last_3(D): VARYING


std::_Destroy<short unsigned int*, short unsigned int> (short unsigned int * __first, short unsigned int * __last, struct allocator & D.107097)
{
  <bb 2> :
  # DEBUG D#24 => __first_2(D)
  # DEBUG D#25 => __last_3(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  return;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseItSaItEE12_Vector_implC2Ev, funcdef_no=5287, decl_uid=89446, cgraph_uid=1556, symbol_order=2016)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this)
{
  <bb 2> :
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # DEBUG this => this_2(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => this_2(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  this_2(D)->_M_start = 0B;
  this_2(D)->_M_finish = 0B;
  this_2(D)->_M_end_of_storage = 0B;
  return;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_base (_ZNSt12_Vector_baseItSaItEEC2Ev, funcdef_no=5214, decl_uid=89505, cgraph_uid=1483, symbol_order=1943)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_4(D): ~[0B, 0B]


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_base (struct _Vector_base * const this)
{
  struct _Vector_impl * _1;
  struct _Vector_impl * _2;

  <bb 2> :
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  _1 = &this_4(D)->_M_impl;
  # DEBUG this => _1
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  # DEBUG this => _1
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => _1
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)this_4(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  return;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::vector (_ZNSt6vectorItSaItEEC2Ev, funcdef_no=5118, decl_uid=90150, cgraph_uid=1387, symbol_order=1847)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_4(D): ~[0B, 0B]


std::vector<short unsigned int, std::allocator<short unsigned int> >::vector (struct vector * const this)
{
  struct _Vector_base * _1;
  struct _Vector_base * _2;

  <bb 2> :
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  _1 = &this_4(D)->D.90158;
  # DEBUG this => _1
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#31 => &_1->_M_impl
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)this_4(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  return;

}



;; Function __gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::base (_ZNK9__gnu_cxx17__normal_iteratorIPKtSt6vectorItSaItEEE4baseEv, funcdef_no=5289, decl_uid=107254, cgraph_uid=1558, symbol_order=2018)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_1(D): ~[0B, 0B]
_2: ~[0, 0]


__gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >::base (const struct __normal_iterator * const this)
{
  const short unsigned int * const & _2;

  <bb 2> :
  _2 = &this_1(D)->_M_current;
  return _2;

}



;; Function __gnu_cxx::operator!=<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > > (_ZN9__gnu_cxxneIPKtSt6vectorItSaItEEEEbRKNS_17__normal_iteratorIT_T0_EESB_, funcdef_no=5223, decl_uid=108092, cgraph_uid=1492, symbol_order=1952)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_2: VARYING
_4: VARYING
__lhs_6(D): ~[0, 0]
__rhs_8(D): ~[0, 0]
_10: [0, +INF]


__gnu_cxx::operator!=<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  const short unsigned int * const & D.111154;
  const short unsigned int * const & D.111152;
  const short unsigned int * _2;
  const short unsigned int * _4;
  bool _10;

  <bb 2> :
  # DEBUG this => __lhs_6(D)
  # DEBUG INLINE_ENTRY base
  # DEBUG this => NULL
  _2 = MEM[(const short unsigned int * const &)__lhs_6(D)];
  # DEBUG this => __rhs_8(D)
  # DEBUG INLINE_ENTRY base
  # DEBUG this => NULL
  _4 = MEM[(const short unsigned int * const &)__rhs_8(D)];
  _10 = _2 != _4;
  return _10;

}



;; Function __gnu_cxx::new_allocator<short unsigned int>::deallocate (_ZN9__gnu_cxx13new_allocatorItE10deallocateEPtm, funcdef_no=5345, decl_uid=89112, cgraph_uid=1614, symbol_order=2074)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__p_2(D): VARYING


__gnu_cxx::new_allocator<short unsigned int>::deallocate (struct new_allocator * const this, short unsigned int * __p, size_type D.89115)
{
  <bb 2> :
  operator delete (__p_2(D));
  return;

}



;; Function std::allocator_traits<std::allocator<short unsigned int> >::deallocate (_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm, funcdef_no=5284, decl_uid=89267, cgraph_uid=1553, symbol_order=2013)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__a_2(D): ~[0, 0]
__p_3(D): VARYING
__n_4(D): VARYING


std::allocator_traits<std::allocator<short unsigned int> >::deallocate (struct allocator_type & __a, short unsigned int * __p, size_type __n)
{
  <bb 2> :
  # DEBUG D#33 => __a_2(D)
  # DEBUG D#34 => __n_4(D)
  # DEBUG __p => __p_3(D)
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.111166 => D#34
  operator delete (__p_3(D));
  # DEBUG __p => NULL
  return;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_deallocate (_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm, funcdef_no=5211, decl_uid=89456, cgraph_uid=1480, symbol_order=1940)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

_1: ~[0B, 0B]
__p_3(D): VARYING
this_5(D): ~[0B, 0B]
__n_6(D): VARYING


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_deallocate (struct _Vector_base * const this, short unsigned int * __p, size_t __n)
{
  struct _Vector_impl * _1;

  <bb 2> :
  if (__p_3(D) != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _1 = &this_5(D)->_M_impl;
  # DEBUG D#37 => _1
  # DEBUG D#38 => __n_6(D)
  # DEBUG __p => __p_3(D)
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => __p_3(D)
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.111184 => D#34
  operator delete (__p_3(D));
  # DEBUG __p => NULL

  <bb 4> :
  return;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::~_Vector_base (_ZNSt12_Vector_baseItSaItEED2Ev, funcdef_no=5113, decl_uid=89510, cgraph_uid=1382, symbol_order=1842)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_2: VARYING
_3: VARYING
_4: [-4611686018427387904, 4611686018427387903]
_5: ~[4611686018427387904, 13835058055282163711]
this_9(D): ~[0B, 0B]


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::~_Vector_base (struct _Vector_base * const this)
{
  short unsigned int * _1;
  short unsigned int * _2;
  long int _3;
  long int _4;
  long unsigned int _5;

  <bb 2> :
  _1 = this_9(D)->_M_impl._M_end_of_storage;
  _2 = this_9(D)->_M_impl._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 2;
  _5 = (long unsigned int) _4;
  # DEBUG D#42 => this_9(D)
  # DEBUG D#43 => _5
  # DEBUG __p => _2
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_2 != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _2
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _2
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.111213 => D#34
  operator delete (_2);
  # DEBUG __p => NULL

  <bb 4> :
  # DEBUG __p => NULL
  # DEBUG D#44 => &this_9(D)->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)this_9(D)] ={v} {CLOBBER};
  # DEBUG this => NULL
  MEM[(struct  &)this_9(D)] ={v} {CLOBBER};
  return;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::~vector (_ZNSt6vectorItSaItEED2Ev, funcdef_no=5012, decl_uid=90155, cgraph_uid=1282, symbol_order=1742)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

_3: VARYING
_4: VARYING
_5: ~[0B, 0B]
this_6(D): ~[0B, 0B]
_8: ~[0, 0]


std::vector<short unsigned int, std::allocator<short unsigned int> >::~vector (struct vector * const this)
{
  struct _Tp_alloc_type & D.111234;
  short unsigned int * _3;
  short unsigned int * _4;
  struct _Vector_base * _5;
  struct _Tp_alloc_type & _8;

  <bb 2> :
  # DEBUG D#48 => &this_6(D)->D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  _8 = &MEM[(struct _Vector_base *)this_6(D)]._M_impl;
  # DEBUG this => NULL
  _3 = this_6(D)->D.90158._M_impl._M_finish;
  _4 = this_6(D)->D.90158._M_impl._M_start;
  # DEBUG D#28 => _4
  # DEBUG D#29 => _3
  # DEBUG D#30 => _8
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.111230 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  _5 = &this_6(D)->D.90158;
  # DEBUG this => _5
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => _5->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _4
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => _5
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _4
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_4 != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _4
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _4
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.111225 => D#34
  operator delete (_4);
  # DEBUG __p => NULL

  <bb 4> :
  # DEBUG __p => NULL
  # DEBUG D#44 => &_5->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  # DEBUG this => NULL
  MEM[(struct  &)this_6(D)] ={v} {CLOBBER};
  return;

}



;; Function SelectionView<const SOA::Container<std::vector, s_decayvertex>&>::~SelectionView (_ZN13SelectionViewIRKN3SOA9ContainerISt6vector13s_decayvertexJEEEtED2Ev, funcdef_no=4725, decl_uid=104285, cgraph_uid=995, symbol_order=1455)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_2(D): ~[0B, 0B]
_6: VARYING


SelectionView<const SOA::Container<std::vector, s_decayvertex>&>::~SelectionView (struct SelectionView * const this)
{
  struct index_vector * _1;
  short unsigned int * _6;

  <bb 2> :
  _1 = &this_2(D)->m_indices;
  # DEBUG this => _1
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)_1].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)_1]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)_1].D.90158._M_impl._M_finish
  _6 = MEM[(struct vector *)this_2(D) + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _6
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.111240 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)_1].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _6
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _6
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_6 != 0B)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _6
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _6
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.111250 => D#34
  operator delete (_6);
  # DEBUG __p => NULL

  <bb 4> :
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)this_2(D) + 8] ={v} {CLOBBER};
  # DEBUG this => NULL
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;

}



;; Function std::forward<const short unsigned int&> (_ZSt7forwardIRKtEOT_RNSt16remove_referenceIS2_E4typeE, funcdef_no=5348, decl_uid=109979, cgraph_uid=1616, symbol_order=2076)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__t_1(D): ~[0, 0]


std::forward<const short unsigned int&> (const type & __t)
{
  <bb 2> :
  return __t_1(D);

}



;; Function __gnu_cxx::new_allocator<short unsigned int>::new_allocator (_ZN9__gnu_cxx13new_allocatorItEC2ERKS1_, funcdef_no=5370, decl_uid=89153, cgraph_uid=1639, symbol_order=2099)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:



__gnu_cxx::new_allocator<short unsigned int>::new_allocator (struct new_allocator * const this, const struct new_allocator & D.89155)
{
  <bb 2> :
  return;

}



;; Function std::allocator<short unsigned int>::allocator (_ZNSaItEC2ERKS_, funcdef_no=5341, decl_uid=89218, cgraph_uid=1610, symbol_order=2070)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
__a_3(D): ~[0, 0]


std::allocator<short unsigned int>::allocator (struct allocator * const this, const struct allocator & __a)
{
  <bb 2> :
  # DEBUG this => this_2(D)
  # DEBUG D.111259 => __a_3(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG D.111259 => NULL
  return;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_impl::_Vector_impl (_ZNSt12_Vector_baseItSaItEE12_Vector_implC2ERKS0_, funcdef_no=5279, decl_uid=89441, cgraph_uid=1548, symbol_order=2008)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
__a_4(D): ~[0, 0]


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_impl::_Vector_impl (struct _Vector_impl * const this, const struct _Tp_alloc_type & __a)
{
  <bb 2> :
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  # DEBUG this => this_2(D)
  # DEBUG __a => __a_4(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => this_2(D)
  # DEBUG D.111263 => __a_4(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG D.111263 => NULL
  # DEBUG this => NULL
  # DEBUG __a => NULL
  this_2(D)->_M_start = 0B;
  this_2(D)->_M_finish = 0B;
  this_2(D)->_M_end_of_storage = 0B;
  return;

}



;; Function SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position::stor (_ZN3SOA5_ViewISt5tupleIJSt6vectorI8vertex_tNS_16AlignedAllocatorIS3_Lm64EEEEEE13s_decayvertexJ8f_vertexEE8position4storEv, funcdef_no=5374, decl_uid=94810, cgraph_uid=1643, symbol_order=2103)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_1(D): ~[0B, 0B]
_2: ~[0, 0]


SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position::stor (struct position * const this)
{
  struct SOAStorage * & _2;

  <bb 2> :
  _2 = &this_1(D)->m_stor;
  return _2;

}



;; Function SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position::idx (_ZN3SOA5_ViewISt5tupleIJSt6vectorI8vertex_tNS_16AlignedAllocatorIS3_Lm64EEEEEE13s_decayvertexJ8f_vertexEE8position3idxEv, funcdef_no=5375, decl_uid=94814, cgraph_uid=1644, symbol_order=2104)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_1(D): ~[0B, 0B]
_2: ~[0, 0]


SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position::idx (struct position * const this)
{
  size_type & _2;

  <bb 2> :
  _2 = &this_1(D)->m_idx;
  return _2;

}



;; Function SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position>::get<0> (_ZN3SOA11ObjectProxyINS_5_ViewISt5tupleIJSt6vectorI8vertex_tNS_16AlignedAllocatorIS4_Lm64EEEEEE13s_decayvertexJ8f_vertexEE8positionEE3getILm0EEEDTixcl3getIXT_EEdecldtcl7declvalIRSC_EE4storEEcldtcl7declvalISF_EE3idxEEv, funcdef_no=5346, decl_uid=101694, cgraph_uid=1615, symbol_order=2075)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_3: VARYING
_7: VARYING
this_8(D): ~[0B, 0B]
_11: VARYING
_12: [0, +INF]
_15: VARYING


SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position>::get<0> (struct ObjectProxy * const this)
{
  struct SOAStorage * & D.111280;
  struct __tuple_element_t & D.111278;
  size_type & D.111273;
  struct value_type & D.111271;
  struct SOAStorage * _3;
  long unsigned int _7;
  struct value_type & _11;
  long unsigned int _12;
  struct vertex_t * _15;

  <bb 2> :
  # DEBUG D#53 => &this_8(D)->D.101625
  # DEBUG this => D#53
  # DEBUG INLINE_ENTRY stor
  # DEBUG this => NULL
  _3 = MEM[(struct SOAStorage * &)this_8(D)];
  # DEBUG __t => _3
  # DEBUG INLINE_ENTRY get
  # DEBUG D#3 => &MEM[(struct tuple *)_3].D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY __get_helper
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY _M_head
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY _M_head
  # DEBUG D#54 => &MEM[(struct _Head_base &)_3]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG D#55 => &this_8(D)->D.101625
  # DEBUG this => D#55
  # DEBUG INLINE_ENTRY idx
  # DEBUG this => NULL
  _7 = MEM[(size_type &)this_8(D) + 8];
  _15 = MEM[(struct vertex_t * *)_3 + 8B];
  # DEBUG D#6 => D#54
  # DEBUG __n => _7
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG this => D#6
  _12 = _7 * 4;
  _11 = _15 + _12;
  # DEBUG __n => NULL
  return _11;

}



;; Function SOA::impl::FieldBase<vertex_t, f_vertex>::AccessorBase<SOA::impl::SkinBase<SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >, f_vertex>, 0, SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> > >::_get (_ZN3SOA4impl9FieldBaseI8vertex_t8f_vertexE12AccessorBaseINS0_8SkinBaseINS_17PrintableNullSkinINS_11ObjectProxyINS_5_ViewISt5tupleIJSt6vectorIS2_NS_16AlignedAllocatorIS2_Lm64EEEEEE13s_decayvertexJS3_EE8positionEEEEEJS3_EEELm0ESK_E4_getEv, funcdef_no=5290, decl_uid=101696, cgraph_uid=1559, symbol_order=2019)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
_4: VARYING
_6: VARYING
_7: VARYING
_8: [0, +INF]
_9: VARYING


SOA::impl::FieldBase<vertex_t, f_vertex>::AccessorBase<SOA::impl::SkinBase<SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >, f_vertex>, 0, SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> > >::_get (struct AccessorBase * const this)
{
  struct value_type & D.111285;
  struct SOAStorage * _4;
  long unsigned int _6;
  struct vertex_t * _7;
  long unsigned int _8;
  struct value_type & _9;

  <bb 2> :
  # DEBUG D#56 => &MEM[(struct SkinBase *)this_2(D)].D.101954.D.101686
  # DEBUG this => D#56
  # DEBUG INLINE_ENTRY get
  # DEBUG D#53 => &D#56->D.101625
  # DEBUG this => D#53
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _4 = MEM[(struct SOAStorage * &)this_2(D)];
  # DEBUG __t => _4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#3 => &MEM[(struct tuple *)_4].D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#54 => &MEM[(struct _Head_base &)_4]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG D#55 => &D#56->D.101625
  # DEBUG this => D#55
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _6 = MEM[(size_type &)this_2(D) + 8];
  _7 = MEM[(struct vertex_t * *)_4 + 8B];
  # DEBUG D#6 => D#54
  # DEBUG __n => _6
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG this => D#6
  _8 = _6 * 4;
  _9 = _7 + _8;
  # DEBUG __n => NULL
  # DEBUG this => NULL
  return _9;

}



;; Function f_vertex::accessors<SOA::impl::SkinBase<SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >, f_vertex>, SOA::Typelist::typelist<f_vertex>, SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> > >::vertex (_ZN8f_vertex9accessorsIN3SOA4impl8SkinBaseINS1_17PrintableNullSkinINS1_11ObjectProxyINS1_5_ViewISt5tupleIJSt6vectorI8vertex_tNS1_16AlignedAllocatorIS9_Lm64EEEEEE13s_decayvertexJS_EE8positionEEEEEJS_EEENS1_8Typelist8typelistIJS_EEESI_E6vertexEv, funcdef_no=5226, decl_uid=101717, cgraph_uid=1495, symbol_order=1955)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
_3: VARYING
_5: VARYING
_6: VARYING
_7: [0, +INF]
_8: VARYING


f_vertex::accessors<SOA::impl::SkinBase<SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> >, f_vertex>, SOA::Typelist::typelist<f_vertex>, SOA::PrintableNullSkin<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> > >::vertex (struct accessors * const this)
{
  struct value_type & D.111291;
  struct SOAStorage * _3;
  long unsigned int _5;
  struct vertex_t * _6;
  long unsigned int _7;
  struct value_type & _8;

  <bb 2> :
  # DEBUG this => this_2(D)
  # DEBUG INLINE_ENTRY _get
  # DEBUG D#56 => &MEM[(struct SkinBase *)this_2(D)].D.101954.D.101686
  # DEBUG this => D#56
  # DEBUG INLINE_ENTRY get
  # DEBUG D#53 => &D#56->D.101625
  # DEBUG this => D#53
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _3 = MEM[(struct SOAStorage * &)this_2(D)];
  # DEBUG __t => _3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#3 => &MEM[(struct tuple *)_3].D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#54 => &MEM[(struct _Head_base &)_3]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG D#55 => &D#56->D.101625
  # DEBUG this => D#55
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _5 = MEM[(size_type &)this_2(D) + 8];
  _6 = MEM[(struct vertex_t * *)_3 + 8B];
  # DEBUG D#6 => D#54
  # DEBUG __n => _5
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG this => D#6
  _7 = _5 * 4;
  _8 = _6 + _7;
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  return _8;

}



;; Function foo(const SOA::Container<std::vector, s_decayvertex>&)::<lambda(auto:2)>::operator()<s_decayvertex<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> > > (_ZZ3fooRKN3SOA9ContainerISt6vector13s_decayvertexJEEEENKUlT_E_clIS2_INS_11ObjectProxyINS_5_ViewISt5tupleIJS1_I8vertex_tNS_16AlignedAllocatorISC_Lm64EEEEEES2_J8f_vertexEE8positionEEEEEEbS6_, funcdef_no=5141, decl_uid=108133, cgraph_uid=1408, symbol_order=1868)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_2: VARYING
_4: VARYING
_5: [0, +INF]
_6: VARYING
_7: VARYING
_8: [0, +INF]
_9: VARYING


foo(const SOA::Container<std::vector, s_decayvertex>&)::<lambda(auto:2)>::operator()<s_decayvertex<SOA::ObjectProxy<SOA::_View<std::tuple<std::vector<vertex_t, SOA::AlignedAllocator<vertex_t, 64> > >, s_decayvertex, f_vertex>::position> > > (const struct __lambda9 * const __closure, struct s_decayvertex decayvertexskin)
{
  struct value_type & D.111298;
  float _2;
  struct SOAStorage * _4;
  bool _5;
  long unsigned int _6;
  struct vertex_t * _7;
  long unsigned int _8;
  struct value_type & _9;

  <bb 2> :
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY vertex
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY _get
  # DEBUG D#56 => &MEM[(struct SkinBase *)&decayvertexskin].D.101954.D.101686
  # DEBUG this => D#56
  # DEBUG INLINE_ENTRY get
  # DEBUG D#53 => &D#56->D.101625
  # DEBUG this => D#53
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _4 = MEM[(struct SOAStorage * &)&decayvertexskin];
  # DEBUG __t => _4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#3 => &MEM[(struct tuple *)_4].D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#54 => &MEM[(struct _Head_base &)_4]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG D#55 => &D#56->D.101625
  # DEBUG this => D#55
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _6 = MEM[(size_type &)&decayvertexskin + 8];
  _7 = MEM[(struct vertex_t * *)_4 + 8B];
  # DEBUG D#6 => D#54
  # DEBUG __n => _6
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG this => D#6
  _8 = _6 * 4;
  _9 = _7 + _8;
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _2 = _9->k;
  _5 = _2 > 3.0e+0;
  return _5;

}



;; Function SelectionView<CONTAINER, IndexSize>::SelectionView(const SelectionView<CONTAINER, IndexSize>&, Predicate_t&&) [with Predicate_t = foo(const SOA::Container<std::vector, s_decayvertex>&)::<lambda(auto:2)>; CONTAINER = const SOA::Container<std::vector, s_decayvertex>&; IndexSize = short unsigned int]::<lambda(auto:1)>::operator()<short unsigned int> (_ZZN13SelectionViewIRKN3SOA9ContainerISt6vector13s_decayvertexJEEEtEC4IZ3fooS6_EUlT_E_EERKS7_OS9_ENKUlS9_E_clItEEDaS9_, funcdef_no=5124, decl_uid=108107, cgraph_uid=1409, symbol_order=1869)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_2: VARYING
_3: VARYING
_5: [0, 65535]
this_7(D): ~[0B, 0B]
i_8(D): VARYING
_13: VARYING
_14: [0, 262140]
_15: VARYING
_16: VARYING
_17: [0, +INF]
_18: VARYING


SelectionView<CONTAINER, IndexSize>::SelectionView(const SelectionView<CONTAINER, IndexSize>&, Predicate_t&&) [with Predicate_t = foo(const SOA::Container<std::vector, s_decayvertex>&)::<lambda(auto:2)>; CONTAINER = const SOA::Container<std::vector, s_decayvertex>&; IndexSize = short unsigned int]::<lambda(auto:1)>::operator()<short unsigned int> (const struct __lambda10 * const this, short unsigned int i)
{
  long unsigned int SR.31;
  struct SOAStorage * SR.30;
  long unsigned int decayvertexskin$8;
  struct SOAStorage * decayvertexskin;
  long unsigned int SR.27;
  struct SOAStorage * SR.26;
  const struct const_reference D.111337;
  bool D.111319;
  struct s_decayvertex decayvertexskin;
  struct s_decayvertex D.110663;
  struct __lambda9 & _1;
  struct SelectionView * _2;
  const struct container_t & _3;
  long unsigned int _5;
  struct vertex_t * _13;
  long unsigned int _14;
  struct value_type & _15;
  float _16;
  bool _17;
  const struct SOAStorage * _18;

  <bb 2> :
  _1 = this_7(D)->__predicate_i;
  _2 = this_7(D)->__this;
  _3 = _2->m_container;
  # DEBUG D#58 => &_3->D.104277.D.104204.D.103696
  _5 = (long unsigned int) i_8(D);
  # DEBUG this => D#58
  # DEBUG idx => _5
  # DEBUG INLINE_ENTRY operator[]
  _18 = &MEM[(const struct _View *)_3].m_storage;
  # DEBUG this => NULL
  # DEBUG D.111323 => _18
  # DEBUG D.111322 => _5
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#10 => NULL
  # DEBUG this => D#10
  # DEBUG D.111326 => _18
  # DEBUG D.111325 => _5
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#9 => &D#10->D.101954
  # DEBUG this => D#9
  # DEBUG D.111329 => _18
  # DEBUG D.111328 => _5
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#8 => &D#9->D.101686
  # DEBUG this => D#8
  # DEBUG D.111332 => _18
  # DEBUG D.111331 => _5
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#7 => &D#8->D.101625
  # DEBUG this => D#7
  # DEBUG stor => _18
  # DEBUG idx => _5
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  # DEBUG this => NULL
  # DEBUG D.111332 => NULL
  # DEBUG D.111331 => NULL
  # DEBUG this => NULL
  # DEBUG D.111329 => NULL
  # DEBUG D.111328 => NULL
  # DEBUG this => NULL
  # DEBUG D.111326 => NULL
  # DEBUG D.111325 => NULL
  # DEBUG this => NULL
  # DEBUG D.111323 => NULL
  # DEBUG D.111322 => NULL
  # DEBUG this => NULL
  # DEBUG idx => NULL
  # DEBUG D#57 => _1
  # DEBUG decayvertexskin => _18
  # DEBUG decayvertexskin$8 => _5
  # DEBUG INLINE_ENTRY operator()
  # DEBUG __closure => D#57
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY vertex
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY _get
  # DEBUG D#56 => &MEM[(struct SkinBase *)&decayvertexskin].D.101954.D.101686
  # DEBUG this => D#56
  # DEBUG INLINE_ENTRY get
  # DEBUG D#53 => &D#56->D.101625
  # DEBUG this => D#53
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __t => _18
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#3 => &MEM[(struct tuple *)_18].D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#54 => &MEM[(struct _Head_base &)_18]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG D#55 => &D#56->D.101625
  # DEBUG this => D#55
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _13 = MEM[(struct vertex_t * *)_18 + 8B];
  # DEBUG D#6 => D#54
  # DEBUG __n => _5
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG this => D#6
  _14 = _5 * 4;
  _15 = _13 + _14;
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _16 = _15->k;
  _17 = _16 > 3.0e+0;
  # DEBUG D#59 => {CLOBBER}
  # DEBUG decayvertexskin => D#59
  # DEBUG D#60 => {CLOBBER}
  # DEBUG decayvertexskin$8 => D#60
  return _17;

}



;; Function __gnu_cxx::new_allocator<short unsigned int>::construct<short unsigned int, const short unsigned int&> (_ZN9__gnu_cxx13new_allocatorItE9constructItJRKtEEEvPT_DpOT0_, funcdef_no=5376, decl_uid=109981, cgraph_uid=1645, symbol_order=2105)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__args#0_3(D): ~[0, 0]
_5: VARYING
__p_6(D): VARYING


__gnu_cxx::new_allocator<short unsigned int>::construct<short unsigned int, const short unsigned int&> (struct new_allocator * const this, short unsigned int * __p, const short unsigned int & __args#0)
{
  const short unsigned int & D.111349;
  void * D.111347;
  short unsigned int _5;

  <bb 2> :
  # DEBUG __t => __args#0_3(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  _5 = *__args#0_3(D);
  # DEBUG D#1 => 2
  # DEBUG __p => __p_6(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111346 => D#1
  # DEBUG BEGIN_STMT
  # DEBUG __p => NULL
  *__p_6(D) = _5;
  return;

}



;; Function std::allocator_traits<std::allocator<short unsigned int> >::construct<short unsigned int, const short unsigned int&> (_ZNSt16allocator_traitsISaItEE9constructItJRKtEEEvRS0_PT_DpOT0_, funcdef_no=5347, decl_uid=109658, cgraph_uid=1617, symbol_order=2077)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__args#0_3(D): ~[0, 0]
__a_5(D): ~[0, 0]
__p_6(D): VARYING
_8: VARYING


std::allocator_traits<std::allocator<short unsigned int> >::construct<short unsigned int, const short unsigned int&> (struct allocator_type & __a, short unsigned int * __p, const short unsigned int & __args#0)
{
  const short unsigned int & D.111367;
  short unsigned int _8;

  <bb 2> :
  # DEBUG __t => __args#0_3(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#63 => __a_5(D)
  _8 = *__args#0_3(D);
  # DEBUG D#64 => __args#0_3(D)
  # DEBUG __p => __p_6(D)
  # DEBUG INLINE_ENTRY construct
  # DEBUG this => D#63
  # DEBUG D#62 => D#64
  # DEBUG __args#0 => D#62
  # DEBUG __t => D#62
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#1 => 2
  # DEBUG __p => __p_6(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111346 => D#1
  # DEBUG BEGIN_STMT
  # DEBUG __p => NULL
  *__p_6(D) = _8;
  # DEBUG __p => NULL
  return;

}



;; Function __gnu_cxx::operator-<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > > (_ZN9__gnu_cxxmiIPtSt6vectorItSaItEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_, funcdef_no=5378, decl_uid=109992, cgraph_uid=1647, symbol_order=2107)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_2: VARYING
_4: VARYING
_5: VARYING
__lhs_7(D): ~[0, 0]
__rhs_9(D): ~[0, 0]
_11: [-4611686018427387904, 4611686018427387903]


__gnu_cxx::operator-<short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > > (const struct __normal_iterator & __lhs, const struct __normal_iterator & __rhs)
{
  short unsigned int * const & D.111385;
  short unsigned int * const & D.111383;
  short unsigned int * _2;
  short unsigned int * _4;
  long int _5;
  difference_type _11;

  <bb 2> :
  # DEBUG this => __lhs_7(D)
  # DEBUG INLINE_ENTRY base
  # DEBUG this => NULL
  _2 = MEM[(short unsigned int * const &)__lhs_7(D)];
  # DEBUG this => __rhs_9(D)
  # DEBUG INLINE_ENTRY base
  # DEBUG this => NULL
  _4 = MEM[(short unsigned int * const &)__rhs_9(D)];
  _5 = _2 - _4;
  _11 = _5 /[ex] 2;
  return _11;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::size (_ZNKSt6vectorItSaItEE4sizeEv, funcdef_no=5395, decl_uid=89677, cgraph_uid=1664, symbol_order=2124)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_2: VARYING
_3: VARYING
_4: [-4611686018427387904, 4611686018427387903]
this_6(D): ~[0B, 0B]
_7: ~[4611686018427387904, 13835058055282163711]


std::vector<short unsigned int, std::allocator<short unsigned int> >::size (const struct vector * const this)
{
  short unsigned int * _1;
  short unsigned int * _2;
  long int _3;
  long int _4;
  size_type _7;

  <bb 2> :
  _1 = this_6(D)->D.90158._M_impl._M_finish;
  _2 = this_6(D)->D.90158._M_impl._M_start;
  _3 = _1 - _2;
  _4 = _3 /[ex] 2;
  _7 = (size_type) _4;
  return _7;

}



;; Function std::move_iterator<short unsigned int*>::move_iterator (_ZNSt13move_iteratorIPtEC2ES0_, funcdef_no=5397, decl_uid=110211, cgraph_uid=1666, symbol_order=2126)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
__i_4(D): VARYING


std::move_iterator<short unsigned int*>::move_iterator (struct move_iterator * const this, short unsigned int * __i)
{
  <bb 2> :
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  this_2(D)->_M_current = __i_4(D);
  return;

}



;; Function std::__make_move_if_noexcept_iterator<short unsigned int> (_ZSt32__make_move_if_noexcept_iteratorItSt13move_iteratorIPtEET0_PT_, funcdef_no=5380, decl_uid=110106, cgraph_uid=1648, symbol_order=2108)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__i_2(D): VARYING


std::__make_move_if_noexcept_iterator<short unsigned int> (short unsigned int * __i)
{
  short unsigned int * SR.36;
  struct move_iterator D.110259;
  struct move_iterator D.110743;

  <bb 2> :
  # DEBUG this => &D.110259
  # DEBUG __i => __i_2(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct move_iterator *)&D.110743] = __i_2(D);
  return D.110743;

}



;; Function __gnu_cxx::new_allocator<short unsigned int>::destroy<short unsigned int> (_ZN9__gnu_cxx13new_allocatorItE7destroyItEEvPT_, funcdef_no=5400, decl_uid=110261, cgraph_uid=1669, symbol_order=2129)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:



__gnu_cxx::new_allocator<short unsigned int>::destroy<short unsigned int> (struct new_allocator * const this, short unsigned int * __p)
{
  <bb 2> :
  GIMPLE_NOP
  return;

}



;; Function std::allocator_traits<std::allocator<short unsigned int> >::destroy<short unsigned int> (_ZNSt16allocator_traitsISaItEE7destroyItEEvRS0_PT_, funcdef_no=5381, decl_uid=110007, cgraph_uid=1650, symbol_order=2110)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__a_2(D): ~[0, 0]
__p_3(D): VARYING


std::allocator_traits<std::allocator<short unsigned int> >::destroy<short unsigned int> (struct allocator_type & __a, short unsigned int * __p)
{
  <bb 2> :
  # DEBUG D#70 => __a_2(D)
  # DEBUG D#71 => __p_3(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#70
  # DEBUG __p => D#71
  return;

}



;; Function __gnu_cxx::new_allocator<short unsigned int>::max_size (_ZNK9__gnu_cxx13new_allocatorItE8max_sizeEv, funcdef_no=5404, decl_uid=89116, cgraph_uid=1673, symbol_order=2133)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:



__gnu_cxx::new_allocator<short unsigned int>::max_size (const struct new_allocator * const this)
{
  <bb 2> :
  return 9223372036854775807;

}



;; Function __gnu_cxx::new_allocator<short unsigned int>::allocate (_ZN9__gnu_cxx13new_allocatorItE8allocateEmPKv, funcdef_no=5392, decl_uid=89108, cgraph_uid=1661, symbol_order=2121)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
Adding assert for __n_6(D) from __n_6(D) + 9223372036854775808
Adding assert for __n_6(D) from __n_6(D) + 9223372036854775808

Value ranges after Early VRP:

_3: [0, 18446744073709551614]
this_4(D): ~[0B, 0B]
__n_6(D): VARYING
_10: ~[0B, 0B]
_12: VARYING


__gnu_cxx::new_allocator<short unsigned int>::allocate (struct new_allocator * const this, size_type __n, const void * D.89111)
{
  size_type D.111419;
  long unsigned int _3;
  short unsigned int * _10;
  signed long _12;

  <bb 2> :
  # DEBUG D#72 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  _12 = (signed long) __n_6(D);
  if (_12 < 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_bad_alloc ();

  <bb 4> :
  _3 = __n_6(D) * 2;
  _10 = operator new (_3);
  return _10;

}



;; Function std::allocator_traits<std::allocator<short unsigned int> >::allocate (_ZNSt16allocator_traitsISaItEE8allocateERS0_m, funcdef_no=5372, decl_uid=89260, cgraph_uid=1641, symbol_order=2101)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
Adding assert for __n_3(D) from __n_3(D) + 9223372036854775808
Adding assert for __n_3(D) from __n_3(D) + 9223372036854775808

Value ranges after Early VRP:

__a_2(D): ~[0, 0]
__n_3(D): VARYING
_7: VARYING
_8: [0, 18446744073709551614]
_9: ~[0B, 0B]


std::allocator_traits<std::allocator<short unsigned int> >::allocate (struct allocator_type & __a, size_type __n)
{
  short unsigned int * D.111434;
  signed long _7;
  long unsigned int _8;
  short unsigned int * _9;

  <bb 2> :
  # DEBUG D#74 => __a_2(D)
  # DEBUG D#75 => 0B
  # DEBUG __n => __n_3(D)
  # DEBUG INLINE_ENTRY allocate
  # DEBUG this => D#74
  # DEBUG D.111432 => D#75
  # DEBUG D#73 => D#74
  # DEBUG D#72 => D#73
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  _7 = (signed long) __n_3(D);
  if (_7 < 0)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> :
  std::__throw_bad_alloc ();

  <bb 4> :
  _8 = __n_3(D) * 2;
  _9 = operator new (_8);
  # DEBUG __n => NULL
  return _9;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_allocate (_ZNSt12_Vector_baseItSaItEE11_M_allocateEm, funcdef_no=5343, decl_uid=89453, cgraph_uid=1612, symbol_order=2072)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 }
;; 6 succs { 1 }
Adding assert for __n_4(D) from __n_4(D) + 9223372036854775808
Adding assert for __n_4(D) from __n_4(D) + 9223372036854775808

Value ranges after Early VRP:

_1: ~[0B, 0B]
iftmp.0_2: VARYING
__n_4(D): VARYING
this_5(D): ~[0B, 0B]
_12: ~[0, 0]
_13: [2, 18446744073709551614]
_14: ~[0B, 0B]


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_allocate (struct _Vector_base * const this, size_t __n)
{
  short unsigned int * D.111452;
  struct _Vector_impl * _1;
  short unsigned int * iftmp.0_2;
  signed long _12;
  long unsigned int _13;
  short unsigned int * _14;

  <bb 2> :
  if (__n_4(D) != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  _1 = &this_5(D)->_M_impl;
  # DEBUG D#77 => _1
  # DEBUG __n => __n_4(D)
  # DEBUG INLINE_ENTRY allocate
  # DEBUG __a => D#77
  # DEBUG D#76 => D#77
  # DEBUG D#74 => D#76
  # DEBUG D#75 => 0B
  # DEBUG __n => __n_4(D)
  # DEBUG INLINE_ENTRY allocate
  # DEBUG this => D#74
  # DEBUG D.111450 => D#75
  # DEBUG D#73 => D#74
  # DEBUG D#72 => D#73
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  _12 = (signed long) __n_4(D);
  if (_12 < 0)
    goto <bb 4>; [0.04%]
  else
    goto <bb 5>; [99.96%]

  <bb 4> :
  std::__throw_bad_alloc ();

  <bb 5> :
  _13 = __n_4(D) * 2;
  _14 = operator new (_13);
  # DEBUG __n => NULL
  # DEBUG __n => NULL

  <bb 6> :
  # iftmp.0_2 = PHI <_14(5), 0B(2)>
  return iftmp.0_2;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_create_storage (_ZNSt12_Vector_baseItSaItEE17_M_create_storageEm, funcdef_no=5281, decl_uid=89460, cgraph_uid=1550, symbol_order=2010)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_4: [0, +INF]
_5: VARYING
this_7(D): ~[0B, 0B]
__n_8(D): VARYING
_10: VARYING


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_create_storage (struct _Vector_base * const this, size_t __n)
{
  long unsigned int _4;
  short unsigned int * _5;
  short unsigned int * _10;

  <bb 2> :
  # DEBUG D#80 => this_7(D)
  _10 = std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_ZNSt12_Vector_baseItSaItEE11_M_allocateEm.isra.21 (__n_8(D));
  this_7(D)->_M_impl._M_start = _10;
  this_7(D)->_M_impl._M_finish = _10;
  _4 = __n_8(D) * 2;
  _5 = _10 + _4;
  this_7(D)->_M_impl._M_end_of_storage = _5;
  return;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_base (_ZNSt12_Vector_baseItSaItEEC2EmRKS0_, funcdef_no=5202, decl_uid=89487, cgraph_uid=1471, symbol_order=1931)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_4(D): ~[0B, 0B]
__a_6(D): ~[0, 0]
__n_8(D): VARYING
_11: VARYING
_12: [0, +INF]
_13: VARYING


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_Vector_base (struct _Vector_base * const this, size_t __n, const struct allocator_type & __a)
{
  struct _Vector_impl * _1;
  short unsigned int * _11;
  long unsigned int _12;
  short unsigned int * _13;

  <bb 2> :
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  _1 = &this_4(D)->_M_impl;
  # DEBUG this => _1
  # DEBUG __a => __a_6(D)
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  # DEBUG this => _1
  # DEBUG __a => __a_6(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => _1
  # DEBUG D.111475 => __a_6(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG D.111475 => NULL
  # DEBUG this => NULL
  # DEBUG __a => NULL
  MEM[(struct _Vector_impl *)this_4(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_4(D)]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG this => this_4(D)
  # DEBUG __n => __n_8(D)
  # DEBUG INLINE_ENTRY _M_create_storage
  # DEBUG D#80 => this_4(D)
  _11 = std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_ZNSt12_Vector_baseItSaItEE11_M_allocateEm.isra.21 (__n_8(D));

  <bb 3> :
  this_4(D)->_M_impl._M_start = _11;
  this_4(D)->_M_impl._M_finish = _11;
  _12 = __n_8(D) * 2;
  _13 = _11 + _12;
  this_4(D)->_M_impl._M_end_of_storage = _13;
  # DEBUG this => NULL
  # DEBUG __n => NULL
  return;

  <bb 4> :
<L0>:
  # DEBUG D#81 => &this_4(D)->_M_impl
  # DEBUG this => D#81
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#81
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#81
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  # DEBUG this => NULL
  resx 1

}



;; Function std::__niter_base<short unsigned int*> (_ZSt12__niter_baseIPtET_S1_, funcdef_no=5405, decl_uid=110281, cgraph_uid=1674, symbol_order=2134)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__it_1(D): VARYING


std::__niter_base<short unsigned int*> (short unsigned int * __it)
{
  <bb 2> :
  return __it_1(D);

}



;; Function std::__fill_n_a<short unsigned int*, long unsigned int, short unsigned int> (_ZSt10__fill_n_aIPtmtEN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT1_E7__valueET_E6__typeES6_T0_RKS4_, funcdef_no=5406, decl_uid=110328, cgraph_uid=1675, symbol_order=2135)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

__first_8 -> { __first_1 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 6
Number of blocks to update: 3 ( 50%)



Value ranges after Early VRP:

__first_1: [__first_9(D), -1B]
__niter_2: [0, __n_7(D)]
__value_5(D): ~[0, 0]
__tmp_6: VARYING
__n_7(D): VARYING
__first_8: [__first_9(D), -1B]
__first_9(D): VARYING
__niter_11: [0, 18446744073709551614]
__first_12: VARYING


std::__fill_n_a<short unsigned int*, long unsigned int, short unsigned int> (short unsigned int * __first, long unsigned int __n, const short unsigned int & __value)
{
  long unsigned int __niter;
  const short unsigned int __tmp;

  <bb 2> :
  __tmp_6 = *__value_5(D);
  # DEBUG __tmp => __tmp_6
  # DEBUG __niter => __n_7(D)

  <bb 3> :
  # __first_1 = PHI <__first_9(D)(2), __first_12(4)>
  # __niter_2 = PHI <__n_7(D)(2), __niter_11(4)>
  # DEBUG __niter => __niter_2
  # DEBUG __first => __first_1
  if (__niter_2 == 0)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  *__first_1 = __tmp_6;
  __niter_11 = __niter_2 + 18446744073709551615;
  # DEBUG __niter => __niter_11
  __first_12 = __first_1 + 2;
  # DEBUG __first => __first_12
  goto <bb 3>; [INV]

  <bb 5> :
  # __first_8 = PHI <__first_1(3)>
  return __first_8;

}



;; Function std::fill_n<short unsigned int*, long unsigned int, short unsigned int> (_ZSt6fill_nIPtmtET_S1_T0_RKT1_, funcdef_no=5393, decl_uid=110035, cgraph_uid=1662, symbol_order=2122)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

__first_16 -> { __first_11 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 6
Number of blocks to update: 3 ( 50%)



Value ranges after Early VRP:

__first_3(D): VARYING
__n_5(D): VARYING
__value_6(D): ~[0, 0]
_9: VARYING
__niter_10: [0, __n_5(D)]
__first_11: [__first_3(D), -1B]
__niter_12: [0, 18446744073709551614]
__first_13: VARYING
__first_16: [__first_3(D), -1B]


std::fill_n<short unsigned int*, long unsigned int, short unsigned int> (short unsigned int * __first, long unsigned int __n, const short unsigned int & __value)
{
  short unsigned int * D.111501;
  long unsigned int __niter;
  const short unsigned int __tmp;
  short unsigned int * D.111499;
  short unsigned int * __first;
  short unsigned int _9;

  <bb 2> :
  # DEBUG __it => __first_3(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  _9 = *__value_6(D);
  # DEBUG D#83 => __value_6(D)
  # DEBUG __first => __first_3(D)
  # DEBUG __n => __n_5(D)
  # DEBUG INLINE_ENTRY __fill_n_a
  # DEBUG __value => D#83
  # DEBUG __tmp => _9
  # DEBUG __niter => __n_5(D)

  <bb 3> :
  # __first_11 = PHI <__first_3(D)(2), __first_13(4)>
  # __niter_10 = PHI <__n_5(D)(2), __niter_12(4)>
  # DEBUG __niter => __niter_10
  # DEBUG __first => __first_11
  if (__niter_10 == 0)
    goto <bb 5>; [11.00%]
  else
    goto <bb 4>; [89.00%]

  <bb 4> :
  *__first_11 = _9;
  __niter_12 = __niter_10 + 18446744073709551615;
  # DEBUG __niter => __niter_12
  __first_13 = __first_11 + 2;
  # DEBUG __first => __first_13
  goto <bb 3>; [100.00%]

  <bb 5> :
  # __first_16 = PHI <__first_11(3)>
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __tmp => NULL
  # DEBUG __niter => NULL
  return __first_16;

}



;; Function std::__uninitialized_default_n_1<true>::__uninit_default_n<short unsigned int*, long unsigned int> (_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPtmEET_S3_T0_, funcdef_no=5373, decl_uid=109969, cgraph_uid=1642, symbol_order=2102)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

__first_19 -> { __first_12 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 6
Number of blocks to update: 3 ( 50%)



Value ranges after Early VRP:

__first_3(D): VARYING
__n_4(D): VARYING
__niter_11: [0, __n_4(D)]
__first_12: [__first_3(D), -1B]
__niter_13: [0, 18446744073709551614]
__first_14: VARYING
__first_19: [__first_3(D), -1B]


std::__uninitialized_default_n_1<true>::__uninit_default_n<short unsigned int*, long unsigned int> (short unsigned int * __first, long unsigned int __n)
{
  long unsigned int __niter;
  short unsigned int * __first;
  short unsigned int * D.111527;
  const short unsigned int D.110039;

  <bb 2> :
  # DEBUG D#85 => &D.110039
  # DEBUG __first => __first_3(D)
  # DEBUG __n => __n_4(D)
  # DEBUG INLINE_ENTRY fill_n
  # DEBUG D#84 => D#85
  # DEBUG __value => D#84
  # DEBUG __it => __first_3(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#83 => D#84
  # DEBUG __first => __first_3(D)
  # DEBUG __n => __n_4(D)
  # DEBUG INLINE_ENTRY __fill_n_a
  # DEBUG __value => D#83
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_4(D)

  <bb 3> :
  # __first_12 = PHI <__first_3(D)(2), __first_14(4)>
  # __niter_11 = PHI <__n_4(D)(2), __niter_13(4)>
  # DEBUG __niter => __niter_11
  # DEBUG __first => __first_12
  if (__niter_11 == 0)
    goto <bb 5>; [11.00%]
  else
    goto <bb 4>; [89.00%]

  <bb 4> :
  *__first_12 = 0;
  __niter_13 = __niter_11 + 18446744073709551615;
  # DEBUG __niter => __niter_13
  __first_14 = __first_12 + 2;
  # DEBUG __first => __first_14
  goto <bb 3>; [100.00%]

  <bb 5> :
  # __first_19 = PHI <__first_12(3)>
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __tmp => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  return __first_19;

}



;; Function std::__uninitialized_default_n<short unsigned int*, long unsigned int> (_ZSt25__uninitialized_default_nIPtmET_S1_T0_, funcdef_no=5344, decl_uid=109640, cgraph_uid=1613, symbol_order=2073)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

__first_1 -> { __first_9 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 6
Number of blocks to update: 3 ( 50%)



Value ranges after Early VRP:

__first_1: [__first_3(D), -1B]
__first_3(D): VARYING
__n_4(D): VARYING
__niter_8: [0, __n_4(D)]
__first_9: [__first_3(D), -1B]
__niter_10: [0, 18446744073709551614]
__first_11: VARYING


std::__uninitialized_default_n<short unsigned int*, long unsigned int> (short unsigned int * __first, long unsigned int __n)
{
  short unsigned int * __first;
  long unsigned int __niter;
  short unsigned int * D.111540;
  const bool __assignable;

  <bb 2> :
  # DEBUG __assignable => 1
  # DEBUG __first => __first_3(D)
  # DEBUG __n => __n_4(D)
  # DEBUG INLINE_ENTRY __uninit_default_n
  # DEBUG D#85 => NULL
  # DEBUG __first => __first_3(D)
  # DEBUG __n => __n_4(D)
  # DEBUG INLINE_ENTRY fill_n
  # DEBUG D#84 => D#85
  # DEBUG __value => D#84
  # DEBUG __it => __first_3(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#83 => D#84
  # DEBUG __first => __first_3(D)
  # DEBUG __n => __n_4(D)
  # DEBUG INLINE_ENTRY __fill_n_a
  # DEBUG __value => D#83
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_4(D)

  <bb 3> :
  # __first_9 = PHI <__first_3(D)(2), __first_11(4)>
  # __niter_8 = PHI <__n_4(D)(2), __niter_10(4)>
  # DEBUG __niter => __niter_8
  # DEBUG __first => __first_9
  if (__niter_8 == 0)
    goto <bb 5>; [11.00%]
  else
    goto <bb 4>; [89.00%]

  <bb 4> :
  *__first_9 = 0;
  __niter_10 = __niter_8 + 18446744073709551615;
  # DEBUG __niter => __niter_10
  __first_11 = __first_9 + 2;
  # DEBUG __first => __first_11
  goto <bb 3>; [100.00%]

  <bb 5> :
  # __first_1 = PHI <__first_9(3)>
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __tmp => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  return __first_1;

}



;; Function std::__uninitialized_default_n_a<short unsigned int*, long unsigned int, short unsigned int> (_ZSt27__uninitialized_default_n_aIPtmtET_S1_T0_RSaIT1_E, funcdef_no=5282, decl_uid=108529, cgraph_uid=1551, symbol_order=2011)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

__first_11 -> { __first_8 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 6
Number of blocks to update: 3 ( 50%)



Value ranges after Early VRP:

__first_2(D): VARYING
__n_3(D): VARYING
__niter_7: [0, __n_3(D)]
__first_8: [__first_2(D), -1B]
__niter_9: [0, 18446744073709551614]
__first_10: VARYING
__first_11: [__first_2(D), -1B]


std::__uninitialized_default_n_a<short unsigned int*, long unsigned int, short unsigned int> (short unsigned int * __first, long unsigned int __n, struct allocator & D.108532)
{
  long unsigned int __niter;
  short unsigned int * __first;
  short unsigned int * D.111557;

  <bb 2> :
  # DEBUG __first => __first_2(D)
  # DEBUG __n => __n_3(D)
  # DEBUG INLINE_ENTRY __uninitialized_default_n
  # DEBUG __assignable => 1
  # DEBUG __first => __first_2(D)
  # DEBUG __n => __n_3(D)
  # DEBUG INLINE_ENTRY __uninit_default_n
  # DEBUG __first => __first_2(D)
  # DEBUG __n => __n_3(D)
  # DEBUG INLINE_ENTRY fill_n
  # DEBUG D#84 => D#85
  # DEBUG __value => D#84
  # DEBUG __it => __first_2(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#83 => D#84
  # DEBUG __first => __first_2(D)
  # DEBUG __n => __n_3(D)
  # DEBUG INLINE_ENTRY __fill_n_a
  # DEBUG __value => D#83
  # DEBUG __tmp => 0
  # DEBUG __niter => __n_3(D)

  <bb 3> :
  # __first_8 = PHI <__first_2(D)(2), __first_10(4)>
  # __niter_7 = PHI <__n_3(D)(2), __niter_9(4)>
  # DEBUG __niter => __niter_7
  # DEBUG __first => __first_8
  if (__niter_7 == 0)
    goto <bb 5>; [11.00%]
  else
    goto <bb 4>; [89.00%]

  <bb 4> :
  *__first_8 = 0;
  __niter_9 = __niter_7 + 18446744073709551615;
  # DEBUG __niter => __niter_9
  __first_10 = __first_8 + 2;
  # DEBUG __first => __first_10
  goto <bb 3>; [100.00%]

  <bb 5> :
  # __first_11 = PHI <__first_8(3)>
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __tmp => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  return __first_11;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_default_initialize (_ZNSt6vectorItSaItEE21_M_default_initializeEm, funcdef_no=5204, decl_uid=89867, cgraph_uid=1473, symbol_order=1933)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

__first_1 -> { __first_12 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 6
Number of blocks to update: 3 ( 50%)



Value ranges after Early VRP:

__first_1: [_3, -1B]
_3: VARYING
this_5(D): ~[0B, 0B]
__niter_7: [0, __n_8(D)]
__n_8(D): VARYING
__first_12: [_3, -1B]
__niter_13: [0, 18446744073709551614]
__first_14: VARYING
_16: ~[0, 0]


std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_default_initialize (struct vector * const this, size_type __n)
{
  struct _Tp_alloc_type & D.111602;
  long unsigned int __niter;
  short unsigned int * __first;
  short unsigned int * D.111600;
  short unsigned int * _3;
  struct _Tp_alloc_type & _16;

  <bb 2> :
  # DEBUG D#87 => &this_5(D)->D.90158
  # DEBUG this => D#87
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  _16 = &MEM[(struct _Vector_base *)this_5(D)]._M_impl;
  # DEBUG this => NULL
  _3 = this_5(D)->D.90158._M_impl._M_start;
  # DEBUG D#86 => _16
  # DEBUG __first => _3
  # DEBUG __n => __n_8(D)
  # DEBUG INLINE_ENTRY __uninitialized_default_n_a

  <bb 3> :
  # __first_12 = PHI <_3(2), __first_14(4)>
  # __niter_7 = PHI <__n_8(D)(2), __niter_13(4)>
  # DEBUG __niter => __niter_7
  # DEBUG __first => __first_12
  if (__niter_7 == 0)
    goto <bb 5>; [11.00%]
  else
    goto <bb 4>; [89.00%]

  <bb 4> :
  *__first_12 = 0;
  __niter_13 = __niter_7 + 18446744073709551615;
  # DEBUG __niter => __niter_13
  __first_14 = __first_12 + 2;
  # DEBUG __first => __first_14
  goto <bb 3>; [100.00%]

  <bb 5> :
  # __first_1 = PHI <__first_12(3)>
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __tmp => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  this_5(D)->D.90158._M_impl._M_finish = __first_1;
  return;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::vector (_ZNSt6vectorItSaItEEC2EmRKS0_, funcdef_no=5104, decl_uid=90138, cgraph_uid=1373, symbol_order=1833)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 5 4 }
;; 4 succs { 3 }
;; 5 succs { 1 }

SSA replacement table
N_i -> { O_1 ... O_j } means that N_i replaces O_1, ..., O_j

__first_9 -> { __first_13 }
Incremental SSA update started at block: 3
Number of blocks in CFG: 6
Number of blocks to update: 3 ( 50%)



Value ranges after Early VRP:

_1: ~[0B, 0B]
this_3(D): ~[0B, 0B]
__n_5(D): VARYING
__a_6(D): ~[0, 0]
__first_9: [_17, -1B]
__niter_12: [0, __n_5(D)]
__first_13: [_17, -1B]
__niter_14: [0, 18446744073709551614]
__first_15: VARYING
_17: VARYING
_18: [0, +INF]
_19: VARYING


std::vector<short unsigned int, std::allocator<short unsigned int> >::vector (struct vector * const this, size_type __n, const struct allocator_type & __a)
{
  long unsigned int __niter;
  short unsigned int * __first;
  struct _Vector_base * _1;
  short unsigned int * _17;
  long unsigned int _18;
  short unsigned int * _19;

  <bb 2> :
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  _1 = &this_3(D)->D.90158;
  # DEBUG this => _1
  # DEBUG __n => __n_5(D)
  # DEBUG __a => __a_6(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#82 => &_1->_M_impl
  # DEBUG this => D#82
  # DEBUG __a => __a_6(D)
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)this_3(D)] ={v} {CLOBBER};
  # DEBUG this => D#82
  # DEBUG __a => __a_6(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#82
  # DEBUG D.111667 => __a_6(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG D.111667 => NULL
  # DEBUG this => NULL
  # DEBUG __a => NULL
  MEM[(struct _Vector_impl *)this_3(D)]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_3(D)]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_3(D)]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG this => _1
  # DEBUG __n => __n_5(D)
  # DEBUG INLINE_ENTRY _M_create_storage
  # DEBUG D#80 => _1
  _17 = std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_ZNSt12_Vector_baseItSaItEE11_M_allocateEm.isra.21 (__n_5(D));
  MEM[(struct _Vector_base *)this_3(D)]._M_impl._M_start = _17;
  MEM[(struct _Vector_base *)this_3(D)]._M_impl._M_finish = _17;
  _18 = __n_5(D) * 2;
  _19 = _17 + _18;
  MEM[(struct _Vector_base *)this_3(D)]._M_impl._M_end_of_storage = _19;
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#90 => this_3(D)
  # DEBUG D#90 => this_3(D)
  # DEBUG __n => __n_5(D)
  # DEBUG INLINE_ENTRY _M_default_initialize
  # DEBUG D#89 => D#90
  # DEBUG this => D#89
  # DEBUG this => D#90
  # DEBUG D#87 => &D#89->D.90158
  # DEBUG this => D#87
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#88 => &MEM[(struct _Vector_base *)D#89]._M_impl
  # DEBUG this => NULL
  # DEBUG D#86 => D#88
  # DEBUG __first => _17
  # DEBUG __n => __n_5(D)
  # DEBUG INLINE_ENTRY __uninitialized_default_n_a

  <bb 3> :
  # __first_13 = PHI <_17(2), __first_15(4)>
  # __niter_12 = PHI <__n_5(D)(2), __niter_14(4)>
  # DEBUG __niter => __niter_12
  # DEBUG __first => __first_13
  if (__niter_12 == 0)
    goto <bb 5>; [11.00%]
  else
    goto <bb 4>; [89.00%]

  <bb 4> :
  *__first_13 = 0;
  __niter_14 = __niter_12 + 18446744073709551615;
  # DEBUG __niter => __niter_14
  __first_15 = __first_13 + 2;
  # DEBUG __first => __first_15
  goto <bb 3>; [100.00%]

  <bb 5> :
  # __first_9 = PHI <__first_13(3)>
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __tmp => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  MEM[(short unsigned int * *)this_3(D) + 8B] = __first_9;
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  return;

}



;; Function SelectionView<const SOA::Container<std::vector, s_decayvertex>&>::SelectionView (_ZN13SelectionViewIRKN3SOA9ContainerISt6vector13s_decayvertexJEEEtEC2ES6_, funcdef_no=5009, decl_uid=90239, cgraph_uid=1279, symbol_order=1739)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 4, latch 5
;;  depth 1, outer 0
;;  nodes: 4 5
;; 2 succs { 7 3 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 4 }
;; 6 succs { 1 }
;; 7 succs { 8 }
;; 8 succs { }

Value ranges after Early VRP:

_1: ~[0B, 0B]
this_9(D): ~[0B, 0B]
container_11(D): ~[0, 0]
_13: [-2305843009213693952, 2305843009213693951]
_14: VARYING
_16: VARYING
_21: VARYING
_23: ~[2305843009213693952, 16140901064495857663]
__first$_M_current_26: [_31, -1B]
__value_27: [0, +INF]
_28: [0, +INF]
__value_29: [1, +INF]
_30: VARYING
_31: VARYING
_32: VARYING


SelectionView<const SOA::Container<std::vector, s_decayvertex>&>::SelectionView (struct SelectionView * const this, const struct container_t & container)
{
  short unsigned int * SR.46;
  short unsigned int * SR.45;
  short unsigned int * const __last;
  short unsigned int * __first;
  short unsigned int * SR.42;
  short unsigned int * SR.41;
  struct iterator D.111692;
  struct iterator D.111688;
  short unsigned int * __first$_M_current;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  int __value;
  size_type D.111675;
  struct __normal_iterator D.110546;
  struct __normal_iterator D.110545;
  struct allocator_type D.107088;
  struct index_vector * _1;
  struct index_vector * _7;
  long int _13;
  long int _14;
  struct vertex_t * _16;
  struct vertex_t * _21;
  long unsigned int _23;
  short unsigned int _28;
  short unsigned int * _30;
  short unsigned int * _31;
  short unsigned int * _32;

  <bb 2> :
  MEM[(struct  &)this_9(D)] ={v} {CLOBBER};
  this_9(D)->m_container = container_11(D);
  _1 = &this_9(D)->m_indices;
  # DEBUG this => &D.107088
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => &D.107088
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#92 => &container_11(D)->D.104277.D.104204.D.103696
  # DEBUG this => D#92
  # DEBUG INLINE_ENTRY size
  # DEBUG D#12 => &D#92->m_storage
  # DEBUG __t => D#12
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#5 => &MEM[(const struct tuple *)D#12].D.94746
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#4 => &D#5->D.93464
  # DEBUG __b => D#4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#13 => &MEM[(const struct _Head_base &)D#92]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  _21 = MEM[(struct vertex_t * *)container_11(D) + 8B];
  # DEBUG D#11 => D#13
  _16 = MEM[(struct vertex_t * *)container_11(D) + 16B];
  # DEBUG D#11 => D#13
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#11
  # DEBUG this => D#11
  _14 = _16 - _21;
  _13 = _14 /[ex] 4;
  _23 = (long unsigned int) _13;
  # DEBUG this => NULL
  std::vector<short unsigned int, std::allocator<short unsigned int> >::vector (_1, _23, &D.107088);

  <bb 3> :
  # DEBUG this => &D.107088
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => &D.107088
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  D.107088 ={v} {CLOBBER};
  # DEBUG D#93 => &this_9(D)->m_indices
  # DEBUG this => D#93
  # DEBUG INLINE_ENTRY end
  # DEBUG D#14 => &MEM[(struct vector *)D#93].D.90158._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#14
  # DEBUG INLINE_ENTRY __ct 
  _32 = MEM[(short unsigned int * const &)this_9(D) + 16];
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG D#94 => &this_9(D)->m_indices
  # DEBUG this => D#94
  # DEBUG INLINE_ENTRY begin
  # DEBUG D#15 => &MEM[(struct vector *)D#94].D.90158._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#15
  # DEBUG INLINE_ENTRY __ct 
  _31 = MEM[(short unsigned int * const &)this_9(D) + 8];
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __first => _31
  # DEBUG __last => _32
  # DEBUG __value => 0
  # DEBUG INLINE_ENTRY iota
  # DEBUG __first$_M_current => _31

  <bb 4> :
  # __value_27 = PHI <0(3), __value_29(5)>
  # __first$_M_current_26 = PHI <_31(3), _30(5)>
  # DEBUG __first$_M_current => __first$_M_current_26
  # DEBUG __value => __value_27
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (__first$_M_current_26 != _32)
    goto <bb 5>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 5> :
  _28 = (short unsigned int) __value_27;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_26 = _28;
  __value_29 = __value_27 + 1;
  # DEBUG __value => __value_29
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _30 = __first$_M_current_26 + 2;
  # DEBUG __first$_M_current => _30
  goto <bb 4>; [100.00%]

  <bb 6> :
  # DEBUG __value => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG D#95 => {CLOBBER}
  # DEBUG __first => D#95
  # DEBUG D#96 => {CLOBBER}
  # DEBUG __last => D#96
  return;

  <bb 7> :
<L0>:
  # DEBUG this => &D.107088
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => &D.107088
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  resx 2

  <bb 8> :
<L1>:
  D.107088 ={v} {CLOBBER};
  resx 1

}



;; Function std::allocator_traits<std::allocator<short unsigned int> >::max_size (_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_, funcdef_no=5407, decl_uid=89295, cgraph_uid=1676, symbol_order=2136)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__a_2(D): ~[0, 0]


std::allocator_traits<std::allocator<short unsigned int> >::max_size (const struct allocator_type & __a)
{
  size_type D.111705;

  <bb 2> :
  # DEBUG D#72 => __a_2(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  return 9223372036854775807;

}



;; Function std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_get_Tp_allocator (_ZNKSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv, funcdef_no=5408, decl_uid=89387, cgraph_uid=1677, symbol_order=2137)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_1(D): ~[0B, 0B]
_2: ~[0, 0]


std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_M_get_Tp_allocator (const struct _Vector_base * const this)
{
  const struct _Tp_alloc_type & _2;

  <bb 2> :
  _2 = &this_1(D)->_M_impl;
  return _2;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::max_size (_ZNKSt6vectorItSaItEE8max_sizeEv, funcdef_no=5394, decl_uid=89679, cgraph_uid=1663, symbol_order=2123)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_3(D): ~[0B, 0B]
_6: ~[0, 0]


std::vector<short unsigned int, std::allocator<short unsigned int> >::max_size (const struct vector * const this)
{
  const struct _Tp_alloc_type & D.111717;
  size_type D.111715;
  const struct _Tp_alloc_type & _6;

  <bb 2> :
  # DEBUG D#99 => &this_3(D)->D.90158
  # DEBUG this => D#99
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  _6 = &MEM[(const struct _Vector_base *)this_3(D)]._M_impl;
  # DEBUG this => NULL
  # DEBUG D#98 => _6
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __a => D#98
  # DEBUG D#97 => D#98
  # DEBUG D#72 => D#97
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  return 9223372036854775807;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_check_len (_ZNKSt6vectorItSaItEE12_M_check_lenEmPKc, funcdef_no=5377, decl_uid=90034, cgraph_uid=1646, symbol_order=2106)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 8 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 1 }

Value ranges after Early VRP:

_3: [4611686018427387904, 13835058055282163711]
__n.6_4: VARYING
_9: VARYING
iftmp.8_12: [0, +INF]
this_16(D): ~[0B, 0B]
_22: ~[4611686018427387904, 13835058055282163711]
_24: [-4611686018427387904, 4611686018427387903]
__len_25: [0, +INF]
_27: VARYING
_33: VARYING
_34: VARYING
_45: ~[0B, 0B]
__s_64(D): VARYING
_65: VARYING


std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_check_len (const struct vector * const this, size_type __n, const char * __s)
{
  size_type D.111755;
  size_type D.111753;
  size_type D.111751;
  size_type D.111746;
  const long unsigned int & D.111741;
  size_type D.111738;
  size_type D.111733;
  size_type D.111731;
  const size_type __len;
  const long unsigned int D.110048;
  long unsigned int _3;
  long unsigned int __n.6_4;
  long unsigned int _9;
  size_type iftmp.8_12;
  long unsigned int _22;
  long int _24;
  long int _27;
  short unsigned int * _33;
  short unsigned int * _34;
  const long unsigned int & _45;
  signed long _65;

  <bb 2> :
  # DEBUG D#103 => this_16(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#103
  # DEBUG D#102 => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#99 => &D#101->D.90158
  # DEBUG this => D#99
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#100 => &MEM[(const struct _Vector_base *)D#102]._M_impl
  # DEBUG this => NULL
  # DEBUG D#98 => D#100
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __a => D#98
  # DEBUG D#97 => D#98
  # DEBUG D#72 => D#97
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  _33 = MEM[(short unsigned int * *)this_16(D)];
  # DEBUG D#69 => this_16(D)
  _34 = MEM[(short unsigned int * *)this_16(D) + 8B];
  # DEBUG D#69 => this_16(D)
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#69
  # DEBUG this => D#69
  _27 = _34 - _33;
  _24 = _27 /[ex] 2;
  _22 = (long unsigned int) _24;
  _3 = 9223372036854775807 - _22;
  __n.6_4 = __n;
  if (_3 < __n.6_4)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  std::__throw_length_error (__s_64(D));

  <bb 4> :
  # DEBUG D#69 => this_16(D)
  # DEBUG D#69 => this_16(D)
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG D#69 => this_16(D)
  # DEBUG D#69 => this_16(D)
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.110048 = _22;
  # DEBUG __a => &D.110048
  # DEBUG __b => &__n
  # DEBUG INLINE_ENTRY max
  if (__n.6_4 > _22)
    goto <bb 5>; [34.00%]
  else
    goto <bb 6>; [66.00%]

  <bb 5> :

  <bb 6> :
  # _45 = PHI <&D.110048(4), &__n(5)>
  # DEBUG __a => NULL
  # DEBUG __b => NULL
  _9 = *_45;
  __len_25 = _9 + _22;
  # DEBUG __len => __len_25
  D.110048 ={v} {CLOBBER};
  # DEBUG D#69 => this_16(D)
  # DEBUG D#69 => this_16(D)
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#69
  # DEBUG this => D#69
  if (_22 > __len_25)
    goto <bb 8>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG D#103 => this_16(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#103
  # DEBUG D#102 => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#99 => &D#101->D.90158
  # DEBUG this => D#99
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#100 => &MEM[(const struct _Vector_base *)D#102]._M_impl
  # DEBUG this => NULL
  # DEBUG D#98 => D#100
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __a => D#98
  # DEBUG D#97 => D#98
  # DEBUG D#72 => D#97
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  _65 = (signed long) __len_25;
  if (_65 < 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  # DEBUG D#103 => this_16(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#103
  # DEBUG D#102 => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#99 => &D#101->D.90158
  # DEBUG this => D#99
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#100 => &MEM[(const struct _Vector_base *)D#102]._M_impl
  # DEBUG this => NULL
  # DEBUG D#98 => D#100
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __a => D#98
  # DEBUG D#97 => D#98
  # DEBUG D#72 => D#97
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72

  <bb 9> :
  # iftmp.8_12 = PHI <9223372036854775807(8), __len_25(7)>
  return iftmp.8_12;

}



;; Function std::move_iterator<short unsigned int*>::base (_ZNKSt13move_iteratorIPtE4baseEv, funcdef_no=5412, decl_uid=110169, cgraph_uid=1680, symbol_order=2140)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

this_2(D): ~[0B, 0B]
_3: VARYING


std::move_iterator<short unsigned int*>::base (const struct move_iterator * const this)
{
  short unsigned int * _3;

  <bb 2> :
  _3 = this_2(D)->_M_current;
  return _3;

}



;; Function std::__miter_base<short unsigned int*> (_ZSt12__miter_baseIPtET_S1_, funcdef_no=5415, decl_uid=110410, cgraph_uid=1684, symbol_order=2144)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__it_1(D): VARYING


std::__miter_base<short unsigned int*> (short unsigned int * __it)
{
  <bb 2> :
  return __it_1(D);

}



;; Function std::__miter_base<short unsigned int*> (_ZSt12__miter_baseIPtEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E, funcdef_no=5413, decl_uid=110413, cgraph_uid=1682, symbol_order=2142)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_6: VARYING


std::__miter_base<short unsigned int*> (struct move_iterator __it)
{
  short unsigned int * D.111769;
  short unsigned int * D.111766;
  short unsigned int * _6;

  <bb 2> :
  _6 = MEM[(short unsigned int * *)&__it];
  # DEBUG D#104 => &__it
  # DEBUG INLINE_ENTRY base
  # DEBUG this => D#104
  # DEBUG __it => _6
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  return _6;

}



;; Function std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<short unsigned int> (_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_, funcdef_no=5417, decl_uid=110465, cgraph_uid=1686, symbol_order=2146)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_Num.9_2: ~[4611686018427387904, 13835058055282163711]
_3: [0, +INF]
_Num.10_4: ~[4611686018427387904, 13835058055282163711]
_5: [0, +INF]
__last_7(D): VARYING
__first_8(D): VARYING
_Num_9: [-4611686018427387904, 4611686018427387903]
__result_11(D): VARYING
_13: VARYING


std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<short unsigned int> (const short unsigned int * __first, const short unsigned int * __last, short unsigned int * __result)
{
  const ptrdiff_t _Num;
  long int _1;
  long unsigned int _Num.9_2;
  long unsigned int _3;
  long unsigned int _Num.10_4;
  long unsigned int _5;
  short unsigned int * _13;

  <bb 2> :
  _1 = __last_7(D) - __first_8(D);
  _Num_9 = _1 /[ex] 2;
  # DEBUG _Num => _Num_9
  if (__last_7(D) != __first_8(D))
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _Num.9_2 = (long unsigned int) _Num_9;
  _3 = (long unsigned int) _1;
  __builtin_memmove (__result_11(D), __first_8(D), _3);

  <bb 4> :
  _Num.10_4 = (long unsigned int) _Num_9;
  _5 = (long unsigned int) _1;
  _13 = __result_11(D) + _5;
  return _13;

}



;; Function std::__copy_move_a<true, short unsigned int*, short unsigned int*> (_ZSt13__copy_move_aILb1EPtS0_ET1_T0_S2_S1_, funcdef_no=5416, decl_uid=110425, cgraph_uid=1685, symbol_order=2145)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

__first_3(D): VARYING
__last_4(D): VARYING
__result_5(D): VARYING
_8: VARYING
_9: [0, +INF]
_10: [0, +INF]
_11: VARYING


std::__copy_move_a<true, short unsigned int*, short unsigned int*> (short unsigned int * __first, short unsigned int * __last, short unsigned int * __result)
{
  short unsigned int * D.111777;
  const bool __simple;
  long int _8;
  long unsigned int _9;
  long unsigned int _10;
  short unsigned int * _11;

  <bb 2> :
  # DEBUG __simple => 1
  # DEBUG __first => __first_3(D)
  # DEBUG __last => __last_4(D)
  # DEBUG __result => __result_5(D)
  # DEBUG INLINE_ENTRY __copy_m
  _8 = __last_4(D) - __first_3(D);
  # DEBUG _Num => _8 /[ex] 2
  if (__first_3(D) != __last_4(D))
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  _9 = (long unsigned int) _8;
  __builtin_memmove (__result_5(D), __first_3(D), _9);

  <bb 4> :
  _10 = (long unsigned int) _8;
  _11 = __result_5(D) + _10;
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  return _11;

}



;; Function std::__copy_move_a2<true, short unsigned int*, short unsigned int*> (_ZSt14__copy_move_a2ILb1EPtS0_ET1_T0_S2_S1_, funcdef_no=5414, decl_uid=110419, cgraph_uid=1683, symbol_order=2143)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

__result_5(D): VARYING
_6: [0, +INF]
__last_7(D): VARYING
_8: [0, +INF]
__first_9(D): VARYING
_10: VARYING
_14: VARYING


std::__copy_move_a2<true, short unsigned int*, short unsigned int*> (short unsigned int * __first, short unsigned int * __last, short unsigned int * __result)
{
  short unsigned int * D.111797;
  short unsigned int * D.111795;
  short unsigned int * D.111793;
  short unsigned int * D.111791;
  long unsigned int _6;
  long unsigned int _8;
  long int _10;
  short unsigned int * _14;

  <bb 2> :
  # DEBUG __it => __result_5(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __last_7(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_9(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __first_9(D)
  # DEBUG __last => __last_7(D)
  # DEBUG __result => __result_5(D)
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __first_9(D)
  # DEBUG __last => __last_7(D)
  # DEBUG __result => __result_5(D)
  # DEBUG INLINE_ENTRY __copy_m
  _10 = __last_7(D) - __first_9(D);
  # DEBUG _Num => _10 /[ex] 2
  if (__last_7(D) != __first_9(D))
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  _8 = (long unsigned int) _10;
  __builtin_memmove (__result_5(D), __first_9(D), _8);

  <bb 4> :
  _6 = (long unsigned int) _10;
  _14 = __result_5(D) + _6;
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  return _14;

}



;; Function std::copy<std::move_iterator<short unsigned int*>, short unsigned int*> (_ZSt4copyISt13move_iteratorIPtES1_ET0_T_S4_S3_, funcdef_no=5411, decl_uid=110396, cgraph_uid=1681, symbol_order=2141)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

__it_1: VARYING
_4: [0, +INF]
_6: VARYING
__result_8(D): VARYING
_12: [0, +INF]
_13: VARYING
__it_18: VARYING


std::copy<std::move_iterator<short unsigned int*>, short unsigned int*> (struct move_iterator __first, struct move_iterator __last, short unsigned int * __result)
{
  short unsigned int * const __it;
  short unsigned int * const __it;
  short unsigned int * D.111818;
  struct move_iterator __it;
  short unsigned int * D.111816;
  struct move_iterator __it;
  short unsigned int * D.111814;
  long unsigned int _4;
  long int _6;
  long unsigned int _12;
  short unsigned int * _13;

  <bb 2> :
  __it_18 = MEM[(struct move_iterator *)&__last];
  # DEBUG __it => __it_18
  # DEBUG INLINE_ENTRY __miter_base
  # DEBUG D#104 => &__it
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __it_18
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  __it_1 = MEM[(struct move_iterator *)&__first];
  # DEBUG __it => __it_1
  # DEBUG INLINE_ENTRY __miter_base
  # DEBUG D#104 => &__it
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __it_1
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __it_1
  # DEBUG __last => __it_18
  # DEBUG __result => __result_8(D)
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => __result_8(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __it_18
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __it_1
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __it_1
  # DEBUG __last => __it_18
  # DEBUG __result => __result_8(D)
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __it_1
  # DEBUG __last => __it_18
  # DEBUG __result => __result_8(D)
  # DEBUG INLINE_ENTRY __copy_m
  _6 = __it_18 - __it_1;
  # DEBUG _Num => _6 /[ex] 2
  if (__it_1 != __it_18)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  _4 = (long unsigned int) _6;
  __builtin_memmove (__result_8(D), __it_1, _4);

  <bb 4> :
  _12 = (long unsigned int) _6;
  _13 = __result_8(D) + _12;
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  return _13;

}



;; Function std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<short unsigned int*>, short unsigned int*> (_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPtES3_EET0_T_S6_S5_, funcdef_no=5410, decl_uid=110389, cgraph_uid=1679, symbol_order=2139)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

__result_2(D): VARYING
__last_4: VARYING
_8: VARYING
_9: [0, +INF]
_10: [0, +INF]
_11: VARYING
__first_15: VARYING


std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<short unsigned int*>, short unsigned int*> (struct move_iterator __first, struct move_iterator __last, short unsigned int * __result)
{
  short unsigned int * const __last;
  short unsigned int * const __first;
  short unsigned int * const __it;
  short unsigned int * const __it;
  short unsigned int * D.111840;
  struct move_iterator __first;
  struct move_iterator __last;
  long int _8;
  long unsigned int _9;
  long unsigned int _10;
  short unsigned int * _11;

  <bb 2> :
  __first_15 = MEM[(struct move_iterator *)&__first];
  # DEBUG __first => __first_15
  __last_4 = MEM[(struct move_iterator *)&__last];
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => __last_4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#104 => &__it
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __last_4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __first_15
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#104 => &__it
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __first_15
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __first_15
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => __result_2(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __last_4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_15
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __first_15
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __first_15
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY __copy_m
  _8 = __last_4 - __first_15;
  # DEBUG _Num => _8 /[ex] 2
  if (__last_4 != __first_15)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  _9 = (long unsigned int) _8;
  __builtin_memmove (__result_2(D), __first_15, _9);

  <bb 4> :
  _10 = (long unsigned int) _8;
  _11 = __result_2(D) + _10;
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  return _11;

}



;; Function std::uninitialized_copy<std::move_iterator<short unsigned int*>, short unsigned int*> (_ZSt18uninitialized_copyISt13move_iteratorIPtES1_ET0_T_S4_S3_, funcdef_no=5409, decl_uid=110338, cgraph_uid=1678, symbol_order=2138)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

__first_1: VARYING
__result_3(D): VARYING
_9: VARYING
_10: [0, +INF]
_11: [0, +INF]
_12: VARYING
__last_16: VARYING


std::uninitialized_copy<std::move_iterator<short unsigned int*>, short unsigned int*> (struct move_iterator __first, struct move_iterator __last, short unsigned int * __result)
{
  short unsigned int * const __last;
  short unsigned int * const __first;
  short unsigned int * const __first;
  short unsigned int * const __last;
  short unsigned int * D.111869;
  struct move_iterator __first;
  struct move_iterator __last;
  const bool __assignable;
  long int _9;
  long unsigned int _10;
  long unsigned int _11;
  short unsigned int * _12;

  <bb 2> :
  # DEBUG __assignable => 1
  __first_1 = MEM[(struct move_iterator *)&__first];
  # DEBUG __first => __first_1
  __last_16 = MEM[(struct move_iterator *)&__last];
  # DEBUG __last => __last_16
  # DEBUG __result => __result_3(D)
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => __first_1
  # DEBUG __last => __last_16
  # DEBUG __result => __result_3(D)
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => __last_16
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#104 => NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __last_16
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __first_1
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#104 => NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __first_1
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __first_1
  # DEBUG __last => __last_16
  # DEBUG __result => __result_3(D)
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => __result_3(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __last_16
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_1
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __first_1
  # DEBUG __last => __last_16
  # DEBUG __result => __result_3(D)
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __first_1
  # DEBUG __last => __last_16
  # DEBUG __result => __result_3(D)
  # DEBUG INLINE_ENTRY __copy_m
  _9 = __last_16 - __first_1;
  # DEBUG _Num => _9 /[ex] 2
  if (__first_1 != __last_16)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  _10 = (long unsigned int) _9;
  __builtin_memmove (__result_3(D), __first_1, _10);

  <bb 4> :
  _11 = (long unsigned int) _9;
  _12 = __result_3(D) + _11;
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  return _12;

}



;; Function std::__uninitialized_copy_a<std::move_iterator<short unsigned int*>, short unsigned int*, short unsigned int> (_ZSt22__uninitialized_copy_aISt13move_iteratorIPtES1_tET0_T_S4_S3_RSaIT1_E, funcdef_no=5399, decl_uid=110230, cgraph_uid=1668, symbol_order=2128)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

__result_2(D): VARYING
__last_4: VARYING
_8: VARYING
_9: [0, +INF]
_10: [0, +INF]
_11: VARYING
__first_15: VARYING


std::__uninitialized_copy_a<std::move_iterator<short unsigned int*>, short unsigned int*, short unsigned int> (struct move_iterator __first, struct move_iterator __last, short unsigned int * __result, struct allocator & D.110234)
{
  short unsigned int * const __last;
  short unsigned int * const __first;
  short unsigned int * const __first;
  short unsigned int * const __last;
  short unsigned int * D.111904;
  struct move_iterator __first;
  struct move_iterator __last;
  long int _8;
  long unsigned int _9;
  long unsigned int _10;
  short unsigned int * _11;

  <bb 2> :
  __first_15 = MEM[(struct move_iterator *)&__first];
  # DEBUG __first => __first_15
  __last_4 = MEM[(struct move_iterator *)&__last];
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY uninitialized_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __first_15
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => __first_15
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => __last_4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __last_4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __first_15
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __first_15
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __first_15
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => __result_2(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __last_4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_15
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __first_15
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __first_15
  # DEBUG __last => __last_4
  # DEBUG __result => __result_2(D)
  # DEBUG INLINE_ENTRY __copy_m
  _8 = __last_4 - __first_15;
  # DEBUG _Num => _8 /[ex] 2
  if (__last_4 != __first_15)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  _9 = (long unsigned int) _8;
  __builtin_memmove (__result_2(D), __first_15, _9);

  <bb 4> :
  _10 = (long unsigned int) _8;
  _11 = __result_2(D) + _10;
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG __first => D#111
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __last => D#112
  return _11;

}



;; Function std::__uninitialized_move_if_noexcept_a<short unsigned int*, short unsigned int*, std::allocator<short unsigned int> > (_ZSt34__uninitialized_move_if_noexcept_aIPtS0_SaItEET0_T_S3_S2_RT1_, funcdef_no=5379, decl_uid=110002, cgraph_uid=1649, symbol_order=2109)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Value ranges after Early VRP:

__last_2(D): VARYING
__first_4(D): VARYING
__result_6(D): VARYING
__alloc_7(D): ~[0, 0]
_13: VARYING
_14: [0, +INF]
_15: [0, +INF]
_16: VARYING


std::__uninitialized_move_if_noexcept_a<short unsigned int*, short unsigned int*, std::allocator<short unsigned int> > (short unsigned int * __first, short unsigned int * __last, short unsigned int * __result, struct allocator & __alloc)
{
  short unsigned int * SR.61;
  short unsigned int * SR.60;
  short unsigned int * const __last;
  short unsigned int * const __first;
  short unsigned int * SR.57;
  short unsigned int * SR.56;
  struct move_iterator D.111995;
  struct move_iterator D.111991;
  short unsigned int * const __last;
  short unsigned int * const __first;
  short unsigned int * D.111985;
  struct move_iterator __first;
  struct move_iterator __last;
  struct move_iterator D.110740;
  struct move_iterator D.110739;
  long int _13;
  long unsigned int _14;
  long unsigned int _15;
  short unsigned int * _16;

  <bb 2> :
  # DEBUG __i => __last_2(D)
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __last_2(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG __i => __first_4(D)
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __first_4(D)
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG D#113 => __alloc_7(D)
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __last_2(D)
  # DEBUG __result => __result_6(D)
  # DEBUG INLINE_ENTRY __uninitialized_copy_a
  # DEBUG D.111955 => D#113
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __last_2(D)
  # DEBUG __result => __result_6(D)
  # DEBUG INLINE_ENTRY uninitialized_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __last_2(D)
  # DEBUG __result => __result_6(D)
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __last_2(D)
  # DEBUG __result => __result_6(D)
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => __last_2(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __last_2(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __first_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __first_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __last_2(D)
  # DEBUG __result => __result_6(D)
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => __result_6(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __last_2(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __first_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __last_2(D)
  # DEBUG __result => __result_6(D)
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __first_4(D)
  # DEBUG __last => __last_2(D)
  # DEBUG __result => __result_6(D)
  # DEBUG INLINE_ENTRY __copy_m
  _13 = __last_2(D) - __first_4(D);
  # DEBUG _Num => _13 /[ex] 2
  if (__last_2(D) != __first_4(D))
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  _14 = (long unsigned int) _13;
  __builtin_memmove (__result_6(D), __first_4(D), _14);

  <bb 4> :
  _15 = (long unsigned int) _13;
  _16 = __result_6(D) + _15;
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG __first => D#111
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __last => D#112
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D#114 => {CLOBBER}
  # DEBUG __first => D#114
  # DEBUG D#115 => {CLOBBER}
  # DEBUG __last => D#115
  return _16;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_, funcdef_no=5349, decl_uid=109699, cgraph_uid=1618, symbol_order=2078)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }

Value ranges after Early VRP:

_2: ~[0B, 0B]
_4: [0, +INF]
_5: VARYING
_6: ~[0B, 0B]
this_16(D): ~[0B, 0B]
_18: VARYING
_19: [0, +INF]
__old_start_20: VARYING
__old_finish_21: VARYING
__position_22: VARYING
_25: VARYING
_26: VARYING
_27: [-4611686018427387904, 4611686018427387903]
_28: ~[4611686018427387904, 13835058055282163711]
_29: [0, +INF]
_30: VARYING
__elems_before_33: ~[4611686018427387904, 13835058055282163711]
_36: VARYING
__args#0_39(D): ~[0, 0]
_44: VARYING
__new_finish_48: VARYING
_49: [0, +INF]
_50: [0, +INF]
_54: VARYING
_60: VARYING
_65: ~[0, 0]
_69: VARYING
_70: [-4611686018427387904, 4611686018427387903]


std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (struct vector * const this, struct iterator __position, const short unsigned int & __args#0)
{
  short unsigned int * SR.65;
  short unsigned int * SR.64;
  short unsigned int * const SR.63;
  short unsigned int * const __position;
  struct iterator D.112190;
  struct iterator D.112189;
  difference_type D.112185;
  const short unsigned int & D.112182;
  struct _Tp_alloc_type & D.112173;
  short unsigned int * const & D.112171;
  short unsigned int * D.112169;
  struct _Tp_alloc_type & D.112125;
  short unsigned int * const & D.112123;
  short unsigned int * D.112121;
  struct _Tp_alloc_type & D.112077;
  short unsigned int * __new_finish;
  short unsigned int * __new_start;
  const size_type __elems_before;
  short unsigned int * __old_finish;
  short unsigned int * __old_start;
  const size_type __len;
  struct iterator D.109991;
  struct _Vector_base * _2;
  long unsigned int _4;
  short unsigned int * _5;
  struct _Vector_impl * _6;
  const size_type _18;
  long unsigned int _19;
  short unsigned int * _25;
  long int _26;
  long int _27;
  long unsigned int _28;
  long unsigned int _29;
  short unsigned int * _30;
  short unsigned int * _36;
  short unsigned int * _44;
  long unsigned int _49;
  long unsigned int _50;
  long int _54;
  short unsigned int _60;
  struct _Tp_alloc_type & _65;
  long int _69;
  long int _70;

  <bb 2> :
  __position_22 = MEM[(struct __normal_iterator *)&__position];
  # DEBUG __position => __position_22
  _18 = std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_check_len (this_16(D), 1, "vector::_M_realloc_insert");
  # DEBUG __len => _18
  __old_start_20 = this_16(D)->D.90158._M_impl._M_start;
  # DEBUG __old_start => __old_start_20
  __old_finish_21 = this_16(D)->D.90158._M_impl._M_finish;
  # DEBUG __old_finish => __old_finish_21
  # DEBUG this => this_16(D)
  # DEBUG INLINE_ENTRY begin
  # DEBUG D#15 => &this_16(D)->D.90158._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#15
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.109991
  # DEBUG INLINE_ENTRY operator-
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &D.109991
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _69 = __position_22 - __old_start_20;
  _70 = _69 /[ex] 2;
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  __elems_before_33 = (const size_type) _70;
  # DEBUG __elems_before => __elems_before_33
  _2 = &this_16(D)->D.90158;
  # DEBUG D#80 => _2
  _36 = std::_Vector_base<short unsigned int, std::allocator<short unsigned int> >::_ZNSt12_Vector_baseItSaItEE11_M_allocateEm.isra.21 (_18);
  # DEBUG __new_start => _36
  # DEBUG __new_finish => _36
  # DEBUG __t => __args#0_39(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  _4 = (long unsigned int) _69;
  _5 = _36 + _4;
  _6 = &this_16(D)->D.90158._M_impl;
  # DEBUG D#67 => _6
  _60 = *__args#0_39(D);
  # DEBUG D#68 => __args#0_39(D)
  # DEBUG __p => _5
  # DEBUG INLINE_ENTRY construct
  # DEBUG __a => D#67
  # DEBUG D#66 => D#68
  # DEBUG __args#0 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __t => D#66
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66
  # DEBUG __p => _5
  # DEBUG INLINE_ENTRY construct
  # DEBUG this => D#63
  # DEBUG D#62 => D#64
  # DEBUG __args#0 => D#62
  # DEBUG __t => D#62
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#1 => 2
  # DEBUG __p => _5
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111346 => D#1
  # DEBUG BEGIN_STMT
  # DEBUG __p => NULL
  *_5 = _60;
  # DEBUG __p => NULL
  # DEBUG __p => NULL
  # DEBUG __new_finish => 0B
  # DEBUG D#118 => &this_16(D)->D.90158
  # DEBUG this => D#118
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  _65 = &MEM[(struct _Vector_base *)this_16(D)]._M_impl;
  # DEBUG this => NULL
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY base
  # DEBUG this => NULL
  # DEBUG D#117 => _65
  # DEBUG __first => __old_start_20
  # DEBUG __last => __position_22
  # DEBUG __result => _36
  # DEBUG INLINE_ENTRY __uninitialized_move_if_noexcept_a
  # DEBUG __alloc => D#117
  # DEBUG D#116 => D#117
  # DEBUG __i => __position_22
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __position_22
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG __i => __old_start_20
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __old_start_20
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG D#113 => D#116
  # DEBUG __first => __old_start_20
  # DEBUG __last => __position_22
  # DEBUG __result => _36
  # DEBUG INLINE_ENTRY __uninitialized_copy_a
  # DEBUG D.112136 => D#113
  # DEBUG __first => __old_start_20
  # DEBUG __last => __position_22
  # DEBUG __result => _36
  # DEBUG INLINE_ENTRY uninitialized_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __old_start_20
  # DEBUG __last => __position_22
  # DEBUG __result => _36
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => __old_start_20
  # DEBUG __last => __position_22
  # DEBUG __result => _36
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => __position_22
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __position_22
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __old_start_20
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __old_start_20
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __old_start_20
  # DEBUG __last => __position_22
  # DEBUG __result => _36
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => _36
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __position_22
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __old_start_20
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __old_start_20
  # DEBUG __last => __position_22
  # DEBUG __result => _36
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __old_start_20
  # DEBUG __last => __position_22
  # DEBUG __result => _36
  # DEBUG INLINE_ENTRY __copy_m
  # DEBUG _Num => _69 /[ex] 2
  if (__old_start_20 != __position_22)
    goto <bb 3>; [53.47%]
  else
    goto <bb 4>; [46.53%]

  <bb 3> :
  __builtin_memmove (_36, __old_start_20, _4);

  <bb 4> :
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG __first => D#111
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __last => D#112
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D#114 => {CLOBBER}
  # DEBUG __first => D#114
  # DEBUG D#115 => {CLOBBER}
  # DEBUG __last => D#115
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __new_finish => _5
  _19 = _4 + 2;
  __new_finish_48 = _36 + _19;
  # DEBUG __new_finish => __new_finish_48
  # DEBUG D#119 => &this_16(D)->D.90158
  # DEBUG this => D#119
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG this => NULL
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY base
  # DEBUG this => NULL
  # DEBUG D#117 => _65
  # DEBUG __first => __position_22
  # DEBUG __last => __old_finish_21
  # DEBUG __result => __new_finish_48
  # DEBUG INLINE_ENTRY __uninitialized_move_if_noexcept_a
  # DEBUG __alloc => D#117
  # DEBUG D#116 => D#117
  # DEBUG __i => __old_finish_21
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __old_finish_21
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG __i => __position_22
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __position_22
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG D#113 => D#116
  # DEBUG __first => __position_22
  # DEBUG __last => __old_finish_21
  # DEBUG __result => __new_finish_48
  # DEBUG INLINE_ENTRY __uninitialized_copy_a
  # DEBUG D.112088 => D#113
  # DEBUG __first => __position_22
  # DEBUG __last => __old_finish_21
  # DEBUG __result => __new_finish_48
  # DEBUG INLINE_ENTRY uninitialized_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __position_22
  # DEBUG __last => __old_finish_21
  # DEBUG __result => __new_finish_48
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => __position_22
  # DEBUG __last => __old_finish_21
  # DEBUG __result => __new_finish_48
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => __old_finish_21
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __old_finish_21
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __position_22
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __position_22
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __position_22
  # DEBUG __last => __old_finish_21
  # DEBUG __result => __new_finish_48
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => __new_finish_48
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __old_finish_21
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __position_22
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __position_22
  # DEBUG __last => __old_finish_21
  # DEBUG __result => __new_finish_48
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __position_22
  # DEBUG __last => __old_finish_21
  # DEBUG __result => __new_finish_48
  # DEBUG INLINE_ENTRY __copy_m
  _54 = __old_finish_21 - __position_22;
  # DEBUG _Num => _54 /[ex] 2
  if (__old_finish_21 != __position_22)
    goto <bb 5>; [53.47%]
  else
    goto <bb 6>; [46.53%]

  <bb 5> :
  _50 = (long unsigned int) _54;
  __builtin_memmove (__new_finish_48, __position_22, _50);

  <bb 6> :
  _49 = (long unsigned int) _54;
  _44 = __new_finish_48 + _49;
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG __first => D#111
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __last => D#112
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D#114 => {CLOBBER}
  # DEBUG __first => D#114
  # DEBUG D#115 => {CLOBBER}
  # DEBUG __last => D#115
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __new_finish => _44
  # DEBUG D#120 => &this_16(D)->D.90158
  # DEBUG this => D#120
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG this => NULL
  # DEBUG D#28 => __old_start_20
  # DEBUG D#29 => __old_finish_21
  # DEBUG D#30 => _65
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112073 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  _25 = this_16(D)->D.90158._M_impl._M_end_of_storage;
  _26 = _25 - __old_start_20;
  _27 = _26 /[ex] 2;
  _28 = (long unsigned int) _27;
  # DEBUG D#42 => _2
  # DEBUG D#43 => _28
  # DEBUG __p => __old_start_20
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (__old_start_20 != 0B)
    goto <bb 7>; [53.47%]
  else
    goto <bb 8>; [46.53%]

  <bb 7> :
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => __old_start_20
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => __old_start_20
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112071 => D#34
  operator delete (__old_start_20);
  # DEBUG __p => NULL

  <bb 8> :
  # DEBUG __p => NULL
  this_16(D)->D.90158._M_impl._M_start = _36;
  this_16(D)->D.90158._M_impl._M_finish = _44;
  _29 = _18 * 2;
  _30 = _36 + _29;
  this_16(D)->D.90158._M_impl._M_end_of_storage = _30;
  return;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::push_back (_ZNSt6vectorItSaItEE9push_backERKt, funcdef_no=5291, decl_uid=89724, cgraph_uid=1560, symbol_order=2020)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
_2: VARYING
_4: ~[0B, 0B]
_6: VARYING
this_9(D): ~[0B, 0B]
__x_10(D): ~[0, 0]
_15: VARYING


std::vector<short unsigned int, std::allocator<short unsigned int> >::push_back (struct vector * const this, const value_type & __x)
{
  short unsigned int * SR.66;
  struct iterator D.112206;
  struct __normal_iterator D.110699;
  short unsigned int * _1;
  short unsigned int * _2;
  struct _Vector_impl * _4;
  short unsigned int * _6;
  short unsigned int _15;

  <bb 2> :
  _1 = this_9(D)->D.90158._M_impl._M_finish;
  _2 = this_9(D)->D.90158._M_impl._M_end_of_storage;
  if (_1 != _2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = &this_9(D)->D.90158._M_impl;
  # DEBUG D#67 => _4
  _15 = MEM[(const short unsigned int &)__x_10(D)];
  # DEBUG D#68 => __x_10(D)
  # DEBUG __p => _1
  # DEBUG INLINE_ENTRY construct
  # DEBUG __a => D#67
  # DEBUG D#66 => D#68
  # DEBUG __args#0 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __t => D#66
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66
  # DEBUG __p => _1
  # DEBUG INLINE_ENTRY construct
  # DEBUG this => D#63
  # DEBUG D#62 => D#64
  # DEBUG __args#0 => D#62
  # DEBUG __t => D#62
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#1 => 2
  # DEBUG __p => _1
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111346 => D#1
  # DEBUG BEGIN_STMT
  # DEBUG __p => NULL
  *_1 = _15;
  # DEBUG __p => NULL
  # DEBUG __p => NULL
  _6 = _1 + 2;
  this_9(D)->D.90158._M_impl._M_finish = _6;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG this => this_9(D)
  # DEBUG INLINE_ENTRY end
  # DEBUG D#14 => &this_9(D)->D.90158._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#14
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.110699] = _1;
  # DEBUG this => NULL
  std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (this_9(D), D.110699, __x_10(D));

  <bb 5> :
  return;

}



;; Function std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator= (_ZNSt20back_insert_iteratorISt6vectorItSaItEEEaSERKt, funcdef_no=5228, decl_uid=107295, cgraph_uid=1497, symbol_order=1957)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

_1: VARYING
this_3(D): ~[0B, 0B]
__value_4(D): ~[0, 0]


std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >::operator= (struct back_insert_iterator * const this, const value_type & __value)
{
  struct vector * _1;

  <bb 2> :
  _1 = this_3(D)->container;
  std::vector<short unsigned int, std::allocator<short unsigned int> >::push_back (_1, __value_4(D));
  return this_3(D);

}



;; Function std::copy_if<__gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >, std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >, SelectionView<CONTAINER, IndexSize>::SelectionView(const SelectionView<CONTAINER, IndexSize>&, Predicate_t&&) [with Predicate_t = foo(const SOA::Container<std::vector, s_decayvertex>&)::<lambda(auto:2)>; CONTAINER = const SOA::Container<std::vector, s_decayvertex>&; IndexSize = short unsigned int]::<lambda(auto:1)> > (_ZSt7copy_ifIN9__gnu_cxx17__normal_iteratorIPKtSt6vectorItSaItEEEESt20back_insert_iteratorIS6_EZN13SelectionViewIRKN3SOA9ContainerIS4_13s_decayvertexJEEEtEC4IZ3fooSG_EUlT_E_EERKSH_OSJ_EUlSJ_E_ET0_SJ_SJ_SP_T1_, funcdef_no=5123, decl_uid=107388, cgraph_uid=1410, symbol_order=1870)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 3, latch 6
;;  depth 1, outer 0
;;  nodes: 3 6 4 5
;; 2 succs { 3 }
;; 3 succs { 4 7 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 3 }
;; 7 succs { 1 }

Value ranges after Early VRP:

_2: VARYING
_3: [0, 65535]
_9: VARYING
_11: VARYING
_16: VARYING
_23: [0, 65535]
__first$_M_current_24: VARYING
_25: VARYING
_26: [0, 262140]
_27: VARYING
_28: VARYING
__first$_M_current_29: [__first$_M_current_24, -1B]
_31: VARYING
_34: VARYING


std::copy_if<__gnu_cxx::__normal_iterator<const short unsigned int*, std::vector<short unsigned int, std::allocator<short unsigned int> > >, std::back_insert_iterator<std::vector<short unsigned int, std::allocator<short unsigned int> > >, SelectionView<CONTAINER, IndexSize>::SelectionView(const SelectionView<CONTAINER, IndexSize>&, Predicate_t&&) [with Predicate_t = foo(const SOA::Container<std::vector, s_decayvertex>&)::<lambda(auto:2)>; CONTAINER = const SOA::Container<std::vector, s_decayvertex>&; IndexSize = short unsigned int]::<lambda(auto:1)> > (struct __normal_iterator __first, struct __normal_iterator __last, struct back_insert_iterator __result, struct __lambda10 __pred)
{
  const short unsigned int * __first$_M_current;
  struct __normal_iterator & D.112256;
  const short unsigned int & D.112254;
  struct back_insert_iterator & D.112251;
  struct back_insert_iterator & D.112249;
  struct back_insert_iterator & D.112246;
  const short unsigned int & D.112244;
  bool D.112241;
  short unsigned int i;
  bool D.112212;
  struct back_insert_iterator D.110655;
  short unsigned int _2;
  int _3;
  const struct container_t & _9;
  struct SelectionView * _11;
  const short unsigned int * _16;
  long unsigned int _23;
  struct vertex_t * _25;
  long unsigned int _26;
  struct value_type & _27;
  float _28;
  struct vector * _31;
  const short unsigned int * _34;

  <bb 2> :
  __first$_M_current_24 = MEM[(struct __normal_iterator *)&__first];
  # DEBUG __first$_M_current => __first$_M_current_24

  <bb 3> :
  # __first$_M_current_29 = PHI <_34(6), __first$_M_current_24(2)>
  # DEBUG __first$_M_current => __first$_M_current_29
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _16 = MEM[(const short unsigned int * const &)&__last];
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_16 != __first$_M_current_29)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 4> :
  # DEBUG D#19 => &__first
  # DEBUG INLINE_ENTRY operator*
  # DEBUG this => D#19
  _2 = *__first$_M_current_29;
  _3 = (int) _2;
  # DEBUG this => &__pred
  # DEBUG i => _2
  # DEBUG INLINE_ENTRY operator()
  # DEBUG D#61 => __pred.__predicate_i
  _11 = __pred.__this;
  _9 = _11->m_container;
  # DEBUG D#58 => &_9->D.104277.D.104204.D.103696
  _23 = (long unsigned int) _2;
  # DEBUG this => D#58
  # DEBUG idx => _23
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG D#129 => &MEM[(const struct _View *)_9].m_storage
  # DEBUG this => NULL
  # DEBUG D.112220 => D#129
  # DEBUG D.112219 => _23
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#10
  # DEBUG D.112223 => D#129
  # DEBUG D.112222 => _23
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#9 => &D#10->D.101954
  # DEBUG this => D#9
  # DEBUG D.112226 => D#129
  # DEBUG D.112225 => _23
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#8 => &D#9->D.101686
  # DEBUG this => D#8
  # DEBUG D.112229 => D#129
  # DEBUG D.112228 => _23
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#7 => &D#8->D.101625
  # DEBUG this => D#7
  # DEBUG stor => D#129
  # DEBUG idx => _23
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  # DEBUG this => NULL
  # DEBUG D.112229 => NULL
  # DEBUG D.112228 => NULL
  # DEBUG this => NULL
  # DEBUG D.112226 => NULL
  # DEBUG D.112225 => NULL
  # DEBUG this => NULL
  # DEBUG D.112223 => NULL
  # DEBUG D.112222 => NULL
  # DEBUG this => NULL
  # DEBUG D.112220 => NULL
  # DEBUG D.112219 => NULL
  # DEBUG this => NULL
  # DEBUG idx => NULL
  # DEBUG D#57 => D#61
  # DEBUG decayvertexskin => D#129
  # DEBUG decayvertexskin$8 => _23
  # DEBUG INLINE_ENTRY operator()
  # DEBUG __closure => D#57
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY vertex
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY _get
  # DEBUG D#56 => &MEM[(struct SkinBase *)&decayvertexskin].D.101954.D.101686
  # DEBUG this => D#56
  # DEBUG INLINE_ENTRY get
  # DEBUG D#53 => &D#56->D.101625
  # DEBUG this => D#53
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __t => D#129
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#3 => &MEM[(struct tuple *)D#129].D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#54 => &MEM[(struct _Head_base &)D#129]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG D#55 => &D#56->D.101625
  # DEBUG this => D#55
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _25 = MEM[(struct vertex_t * *)_9 + 8B];
  # DEBUG D#6 => D#54
  # DEBUG __n => _23
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG this => D#6
  _26 = _23 * 4;
  _27 = _25 + _26;
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _28 = _27->k;
  # DEBUG D#59 => {CLOBBER}
  # DEBUG decayvertexskin => D#59
  # DEBUG D#60 => {CLOBBER}
  # DEBUG decayvertexskin$8 => D#60
  # DEBUG this => NULL
  # DEBUG i => NULL
  if (_28 > 3.0e+0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  # DEBUG D#19 => &__first
  # DEBUG INLINE_ENTRY operator*
  # DEBUG this => D#19
  # DEBUG this => &__result
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__result
  # DEBUG __value => __first$_M_current_29
  # DEBUG INLINE_ENTRY operator=
  _31 = __result.container;
  std::vector<short unsigned int, std::allocator<short unsigned int> >::push_back (_31, __first$_M_current_29);
  # DEBUG this => NULL
  # DEBUG __value => NULL
  # DEBUG this => &__result
  # DEBUG INLINE_ENTRY NULL

  <bb 6> :
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _34 = __first$_M_current_29 + 2;
  # DEBUG __first$_M_current => _34
  goto <bb 3>; [100.00%]

  <bb 7> :
  D.110655 = __result;
  return D.110655;

}



;; Function SelectionView<const SOA::Container<std::vector, s_decayvertex>&>::SelectionView<foo(const SOA::Container<std::vector, s_decayvertex>&)::<lambda(auto:2)> > (_ZN13SelectionViewIRKN3SOA9ContainerISt6vector13s_decayvertexJEEEtEC2IZ3fooS6_EUlT_E_EERKS7_OS9_, funcdef_no=5016, decl_uid=104323, cgraph_uid=1285, symbol_order=1745)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 1 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { }

Value ranges after Early VRP:

_1: VARYING
_2: ~[0B, 0B]
this_8(D): ~[0B, 0B]
old_selection_10(D): ~[0, 0]
predicate_i_14(D): ~[0, 0]
_21: VARYING
_22: VARYING
_26: VARYING


SelectionView<const SOA::Container<std::vector, s_decayvertex>&>::SelectionView<foo(const SOA::Container<std::vector, s_decayvertex>&)::<lambda(auto:2)> > (struct SelectionView * const this, const struct SelectionView & old_selection, struct __lambda9 & predicate_i)
{
  struct vector * SR.72;
  const short unsigned int * SR.71;
  const short unsigned int * SR.70;
  struct SelectionView * const SR.69;
  struct back_insert_iterator D.112326;
  struct const_iterator D.112321;
  struct const_iterator D.112316;
  struct __normal_iterator D.110633;
  struct __normal_iterator D.110632;
  struct back_insert_iterator D.110631;
  struct __lambda10 D.110630;
  struct back_insert_iterator D.107396;
  const struct container_t & _1;
  struct index_vector * _2;
  short unsigned int * _21;
  short unsigned int * _22;
  short unsigned int * _26;

  <bb 2> :
  MEM[(struct  &)this_8(D)] ={v} {CLOBBER};
  _1 = old_selection_10(D)->m_container;
  this_8(D)->m_container = _1;
  _2 = &this_8(D)->m_indices;
  # DEBUG this => _2
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#32 => &MEM[(struct vector *)_2].D.90158
  # DEBUG this => D#32
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#31 => &D#32->_M_impl
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)this_8(D) + 8] ={v} {CLOBBER};
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)this_8(D) + 8B]._M_start = 0B;
  MEM[(struct _Vector_impl *)this_8(D) + 8B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)this_8(D) + 8B]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D.112352 => predicate_i_14(D)
  D.110630.__predicate_i = predicate_i_14(D);
  # DEBUG __x => _2
  # DEBUG INLINE_ENTRY back_inserter
  # DEBUG this => NULL
  # DEBUG __x => _2
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG __r => _2
  # DEBUG INLINE_ENTRY __addressof
  # DEBUG __r => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  MEM[(struct back_insert_iterator *)&D.110631] = _2;
  # DEBUG __x => NULL
  # DEBUG D#131 => &old_selection_10(D)->m_indices
  _21 = MEM[(short unsigned int * *)old_selection_10(D) + 16B];
  # DEBUG D#17 => D#131
  # DEBUG INLINE_ENTRY end
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.110632] = _21;
  # DEBUG D#132 => &old_selection_10(D)->m_indices
  _22 = MEM[(short unsigned int * *)old_selection_10(D) + 8B];
  # DEBUG D#18 => D#132
  # DEBUG INLINE_ENTRY begin
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.110633] = _22;
  # DEBUG D#130 => D.110630
  D.107396 = std::_ZSt7copy_ifIN9__gnu_cxx17__normal_iteratorIPKtSt6vectorItSaItEEEESt20back_insert_iteratorIS6_EZN13SelectionViewIRKN3SOA9ContainerIS4_13s_decayvertexJEEEtEC4IZ3fooSG_EUlT_E_EERKSH_OSJ_EUlSJ_E_ET0_SJ_SJ_SP_T1_.isra.31 (D.110633, D.110632, D.110631, this_8(D));

  <bb 3> :
  return;

  <bb 4> :
<L0>:
  # DEBUG this => _2
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)_2].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)_2]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)_2].D.90158._M_impl._M_finish
  _26 = MEM[(struct vector *)this_8(D) + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _26
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112336 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)_2].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _26
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _26
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_26 != 0B)
    goto <bb 5>; [53.47%]
  else
    goto <bb 6>; [46.53%]

  <bb 5> :
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _26
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _26
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112346 => D#34
  operator delete (_26);
  # DEBUG __p => NULL

  <bb 6> :
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)this_8(D) + 8] ={v} {CLOBBER};
  # DEBUG this => NULL
  resx 1

}



;; Function foo (_Z3fooRKN3SOA9ContainerISt6vector13s_decayvertexJEEE, funcdef_no=4664, decl_uid=89013, cgraph_uid=997, symbol_order=1457)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 14 3 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 9 succs { 10 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { }

Value ranges after Early VRP:

v_3(D): ~[0, 0]
_15: VARYING
_16: VARYING
_17: VARYING


foo (const struct Container & v)
{
  struct SelectionView SS;
  struct SelectionView S;
  short unsigned int * _15;
  short unsigned int * _16;
  short unsigned int * _17;

  <bb 2> :
  # DEBUG BEGIN_STMT
  SelectionView<const SOA::Container<std::vector, s_decayvertex>&>::SelectionView (&S, v_3(D));

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG D#134 => &D.104305
  SelectionView<const SOA::Container<std::vector, s_decayvertex>&>::_ZN13SelectionViewIRKN3SOA9ContainerISt6vector13s_decayvertexJEEEtEC2IZ3fooS6_EUlT_E_EERKS7_OS9_.isra.32 (&SS, &S);

  <bb 4> :
  # DEBUG this => &SS
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &SS.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  _16 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _16
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112437 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _16
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _16
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_16 != 0B)
    goto <bb 5>; [53.47%]
  else
    goto <bb 6>; [46.53%]

  <bb 5> :
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _16
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _16
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112447 => D#34
  operator delete (_16);
  # DEBUG __p => NULL

  <bb 6> :
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&SS] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => &S
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  _15 = MEM[(struct vector *)&S + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _15
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112417 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _15
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _15
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_15 != 0B)
    goto <bb 7>; [53.47%]
  else
    goto <bb 8>; [46.53%]

  <bb 7> :
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _15
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _15
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112427 => D#34
  operator delete (_15);
  # DEBUG __p => NULL

  <bb 8> :
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&S] ={v} {CLOBBER};
  # DEBUG this => NULL
  S ={v} {CLOBBER};
  SS ={v} {CLOBBER};
  return;

  <bb 9> :
<L0>:
  resx 4

  <bb 10> :
<L1>:
  resx 3

  <bb 11> :
<L2>:
  # DEBUG this => &S
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  _17 = MEM[(struct vector *)&S + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _17
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112457 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _17
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _17
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_17 != 0B)
    goto <bb 12>; [53.47%]
  else
    goto <bb 13>; [46.53%]

  <bb 12> :
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _17
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _17
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112467 => D#34
  operator delete (_17);
  # DEBUG __p => NULL

  <bb 13> :
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&S] ={v} {CLOBBER};
  # DEBUG this => NULL
  resx 2

  <bb 14> :
<L3>:
  S ={v} {CLOBBER};
  SS ={v} {CLOBBER};
  resx 1

}



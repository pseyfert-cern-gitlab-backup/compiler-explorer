
;; Function main (main, funcdef_no=4728, decl_uid=104327, cgraph_uid=998, symbol_order=1458) (executed once)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
ESCAPED = &NULL

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }


Alias information for int main()

Aliased symbols


Call clobber information

ESCAPED, points-to NULL, points-to vars: { }

Flow-insensitive points-to information


main ()
{
  <bb 2> [local count: 1073741825]:
  # DEBUG BEGIN_STMT
  return 0;

}



;; Function std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_, funcdef_no=5349, decl_uid=109699, cgraph_uid=1618, symbol_order=2078)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
this = &NONLOCAL
__position = &NONLOCAL
__args#0 = &NONLOCAL
__position_10 = __position
__n = &NONLOCAL
_37 = *this
_38 = *this + 64
_39 = _38
_39 = _37
_40 = _39
_40 = &NONLOCAL
_41 = _40
_42 = &NONLOCAL
_42 = _41
__n.6_43 = __n
ESCAPED = &STRING
D.112534 = _41
_53 = D.112534
_6 = __n
_44 = &__n
_44 = &D.112534
_45 = _6
_45 = _53
__len_46 = _41
__len_46 = _45
_47 = __len_46
iftmp.8_48 = &NONLOCAL
iftmp.8_48 = __len_46
iftmp.8_48 = &NONLOCAL
__old_start_8 = *this
__old_finish_9 = *this + 64
_25 = __position_10
_25 = __old_start_8
_33 = iftmp.8_48
_34 = iftmp.8_48
_34 = &NONLOCAL
ESCAPED = _34
HEAP(37) = &NONLOCAL
_35 = &HEAP(37)
iftmp.0_36 = &NULL
iftmp.0_36 = _35
_1 = _25
_2 = iftmp.0_36 + UNKNOWN
_24 = *__args#0
*_2 = _24
doubledereftmp(42) = *__old_start_8 + UNKNOWN
*iftmp.0_36 + UNKNOWN = doubledereftmp(42)
_7 = _1
_7 = &NONLOCAL
__new_finish_17 = iftmp.0_36 + UNKNOWN
_20 = __old_finish_9
_20 = __position_10
_19 = _20
doubledereftmp(47) = *__position_10 + UNKNOWN
*__new_finish_17 + UNKNOWN = doubledereftmp(47)
_18 = _20
_16 = __new_finish_17 + UNKNOWN
ESCAPED = __old_start_8
*this = iftmp.0_36
*this + 64 = _16
_11 = iftmp.8_48
_11 = &NONLOCAL
_12 = iftmp.0_36 + UNKNOWN
*this + 128 = _12

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL STRING ESCAPED NONLOCAL HEAP(37) }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
this = { NONLOCAL }
__position = { NONLOCAL } same as this
__args#0 = { NONLOCAL } same as this
__n = { NONLOCAL } same as __n.6_43
_ZSt20__throw_length_errorPKc = { }
D.112534 = { ESCAPED NONLOCAL } same as _53
_ZSt17__throw_bad_allocv = { }
_Znwm = { }
HEAP(37) = { ESCAPED NONLOCAL }
_ZdlPv = { }
__position_10 = { NONLOCAL } same as this
_37 = { ESCAPED NONLOCAL }
_38 = { ESCAPED NONLOCAL }
_39 = { ESCAPED NONLOCAL }
_40 = { ESCAPED NONLOCAL }
_41 = { ESCAPED NONLOCAL } same as _40
_42 = { ESCAPED NONLOCAL } same as _40
__n.6_43 = { NONLOCAL }
_53 = { ESCAPED NONLOCAL }
_6 = { NONLOCAL } same as __n.6_43
_44 = { __n D.112534 }
_45 = { ESCAPED NONLOCAL }
__len_46 = { ESCAPED NONLOCAL } same as _45
_47 = { ESCAPED NONLOCAL } same as _45
iftmp.8_48 = { ESCAPED NONLOCAL } same as _45
__old_start_8 = { ESCAPED NONLOCAL } same as _37
__old_finish_9 = { ESCAPED NONLOCAL }
_25 = { ESCAPED NONLOCAL }
_33 = { ESCAPED NONLOCAL } same as _45
_34 = { ESCAPED NONLOCAL } same as _45
_35 = { HEAP(37) }
iftmp.0_36 = { NULL HEAP(37) }
_1 = { ESCAPED NONLOCAL } same as _25
_2 = { NULL HEAP(37) }
_24 = { ESCAPED NONLOCAL }
doubledereftmp(42) = { ESCAPED NONLOCAL }
_7 = { ESCAPED NONLOCAL } same as _25
__new_finish_17 = { NULL HEAP(37) }
_20 = { ESCAPED NONLOCAL }
_19 = { ESCAPED NONLOCAL } same as _20
doubledereftmp(47) = { ESCAPED NONLOCAL }
_18 = { ESCAPED NONLOCAL } same as _20
_16 = { NULL HEAP(37) }
_11 = { ESCAPED NONLOCAL } same as _45
_12 = { NULL HEAP(37) }


Alias information for void std::vector<_Tp, _Alloc>::_M_realloc_insert(std::vector<_Tp, _Alloc>::iterator, _Args&& ...) [with _Args = {const short unsigned int&}; _Tp = short unsigned int; _Alloc = std::allocator<short unsigned int>]

Aliased symbols

D.112534, UID D.112534, const long unsigned int, is addressable
__n, UID D.112526, size_type, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.112535 } (escaped, escaped heap)

Flow-insensitive points-to information

_2, points-to NULL, points-to vars: { D.112535 } (escaped, escaped heap)
this_4(D), points-to non-local, points-to NULL, points-to vars: { }
__old_start_8, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
__old_finish_9, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
__position_10, points-to non-local, points-to NULL, points-to vars: { }
_12, points-to NULL, points-to vars: { D.112535 } (escaped, escaped heap)
__args#0_15(D), points-to non-local, points-to NULL, points-to vars: { }
_16, points-to NULL, points-to vars: { D.112535 } (escaped, escaped heap)
__new_finish_17, points-to NULL, points-to vars: { D.112535 } (escaped, escaped heap)
_35, points-to NULL, points-to vars: { D.112535 } (escaped, escaped heap)
iftmp.0_36, points-to NULL, points-to vars: { D.112535 } (escaped, escaped heap)
_37, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_38, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_44, points-to NULL, points-to vars: { D.112526 D.112534 }

std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (struct vector * const this, struct iterator __position, const short unsigned int & __args#0)
{
  const long unsigned int D.112534;
  const size_type __len;
  size_type D.112533;
  size_type __n;
  short unsigned int * D.112524;
  short unsigned int * const __position;
  short unsigned int * __new_finish;
  short unsigned int * __old_finish;
  short unsigned int * __old_start;
  long unsigned int _1;
  short unsigned int * _2;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _11;
  short unsigned int * _12;
  short unsigned int * _16;
  long unsigned int _18;
  long unsigned int _19;
  long int _20;
  short unsigned int _24;
  long int _25;
  signed long _33;
  long unsigned int _34;
  short unsigned int * _35;
  short unsigned int * iftmp.0_36;
  short unsigned int * _37;
  short unsigned int * _38;
  long int _39;
  long int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int __n.6_43;
  const long unsigned int & _44;
  long unsigned int _45;
  signed long _47;
  long unsigned int iftmp.8_48;
  long unsigned int _53;

  <bb 2> [local count: 1073741825]:
  __position_10 = MEM[(struct __normal_iterator *)&__position];
  # DEBUG __position => __position_10
  # DEBUG this => this_4(D)
  __n = 1;
  # DEBUG __n => __n
  # DEBUG __s => "vector::_M_realloc_insert"
  # DEBUG INLINE_ENTRY _M_check_len
  # DEBUG D#103 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#103
  # DEBUG D#102 => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#99 => &D#101->D.90158
  # DEBUG this => D#99
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#100 => &MEM[(const struct _Vector_base *)D#102]._M_impl
  # DEBUG this => NULL
  # DEBUG D#98 => D#100
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __a => D#98
  # DEBUG D#97 => D#98
  # DEBUG D#72 => D#97
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  _37 = MEM[(short unsigned int * *)this_4(D)];
  # DEBUG D#69 => this_4(D)
  _38 = MEM[(short unsigned int * *)this_4(D) + 8B];
  # DEBUG D#69 => this_4(D)
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#69
  # DEBUG this => D#69
  _39 = _38 - _37;
  _40 = _39 /[ex] 2;
  _41 = (long unsigned int) _40;
  _42 = 9223372036854775807 - _41;
  __n.6_43 = __n;
  if (_42 < __n.6_43)
    goto <bb 3>; [0.04%]
  else
    goto <bb 4>; [99.96%]

  <bb 3> [local count: 429497]:
  std::__throw_length_error ("vector::_M_realloc_insert");

  <bb 4> [local count: 1073312327]:
  # DEBUG D#69 => this_4(D)
  # DEBUG D#69 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#69
  # DEBUG this => D#69
  # DEBUG D#69 => this_4(D)
  # DEBUG D#69 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#69
  # DEBUG this => D#69
  D.112534 = _41;
  # DEBUG __a => &D.112534
  # DEBUG __b => &__n
  # DEBUG INLINE_ENTRY max
  if (_41 < __n.6_43)
    goto <bb 5>; [34.00%]
  else
    goto <bb 20>; [66.00%]

  <bb 20> [local count: 708386132]:
  _53 = D.112534;
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 364926191]:
  _6 = __n;

  <bb 6> [local count: 1073312327]:
  # _44 = PHI <&__n(5), &D.112534(20)>
  # _45 = PHI <_6(5), _53(20)>
  # DEBUG __a => NULL
  # DEBUG __b => NULL
  __len_46 = _41 + _45;
  # DEBUG __len => __len_46
  D.112534 ={v} {CLOBBER};
  # DEBUG D#69 => this_4(D)
  # DEBUG D#69 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#69
  # DEBUG this => D#69
  if (_41 > __len_46)
    goto <bb 9>; [35.00%]
  else
    goto <bb 7>; [65.00%]

  <bb 7> [local count: 697653013]:
  # DEBUG D#103 => this_4(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#103
  # DEBUG D#102 => D#103
  # DEBUG D#101 => D#103
  # DEBUG D#99 => &D#101->D.90158
  # DEBUG this => D#99
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#100 => &MEM[(const struct _Vector_base *)D#102]._M_impl
  # DEBUG this => NULL
  # DEBUG D#98 => D#100
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __a => D#98
  # DEBUG D#97 => D#98
  # DEBUG D#72 => D#97
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  _47 = (signed long) __len_46;
  if (_47 < 0)
    goto <bb 8>; [27.23%]
  else
    goto <bb 9>; [72.77%]

  <bb 8> [local count: 189970915]:

  <bb 9> [local count: 1073312327]:
  # iftmp.8_48 = PHI <9223372036854775807(6), __len_46(7), 9223372036854775807(8)>
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG __s => NULL
  # DEBUG __len => NULL
  __n ={v} {CLOBBER};
  # DEBUG __len => iftmp.8_48
  __old_start_8 = this_4(D)->D.90158._M_impl._M_start;
  # DEBUG __old_start => __old_start_8
  __old_finish_9 = this_4(D)->D.90158._M_impl._M_finish;
  # DEBUG __old_finish => __old_finish_9
  # DEBUG this => this_4(D)
  # DEBUG INLINE_ENTRY begin
  # DEBUG D#15 => &this_4(D)->D.90158._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#15
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __lhs => &__position
  # DEBUG __rhs => &D.109991
  # DEBUG INLINE_ENTRY operator-
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &D.109991
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _25 = __position_10 - __old_start_8;
  # DEBUG D#127 => _25 /[ex] 2
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  # DEBUG __elems_before => (const size_type) D#127
  # DEBUG D#126 => &this_4(D)->D.90158
  # DEBUG D#80 => D#126
  # DEBUG __n => iftmp.8_48
  # DEBUG INLINE_ENTRY _M_allocate
  # DEBUG this => D#80
  # DEBUG D#79 => D#80
  if (iftmp.8_48 != 0)
    goto <bb 10>; [71.00%]
  else
    goto <bb 13>; [29.00%]

  <bb 10> [local count: 762051752]:
  # DEBUG D#78 => &D#79->_M_impl
  # DEBUG D#77 => D#78
  # DEBUG __n => iftmp.8_48
  # DEBUG INLINE_ENTRY allocate
  # DEBUG __a => D#77
  # DEBUG D#76 => D#77
  # DEBUG D#74 => D#76
  # DEBUG D#75 => 0B
  # DEBUG __n => iftmp.8_48
  # DEBUG INLINE_ENTRY allocate
  # DEBUG this => D#74
  # DEBUG D.112522 => D#75
  # DEBUG D#73 => D#74
  # DEBUG D#72 => D#73
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  _33 = (signed long) iftmp.8_48;
  if (_33 < 0)
    goto <bb 11>; [0.04%]
  else
    goto <bb 12>; [99.96%]

  <bb 11> [local count: 304821]:
  std::__throw_bad_alloc ();

  <bb 12> [local count: 761746931]:
  _34 = iftmp.8_48 * 2;
  _35 = operator new (_34);
  # DEBUG __n => NULL
  # DEBUG __n => NULL

  <bb 13> [local count: 1073007506]:
  # iftmp.0_36 = PHI <0B(9), _35(12)>
  # DEBUG __n => NULL
  # DEBUG __new_start => iftmp.0_36
  # DEBUG __new_finish => iftmp.0_36
  # DEBUG __t => __args#0_15(D)
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  _1 = (long unsigned int) _25;
  _2 = iftmp.0_36 + _1;
  # DEBUG D#125 => &this_4(D)->D.90158._M_impl
  # DEBUG D#67 => D#125
  _24 = *__args#0_15(D);
  # DEBUG D#68 => __args#0_15(D)
  # DEBUG __p => _2
  # DEBUG INLINE_ENTRY construct
  # DEBUG __a => D#67
  # DEBUG D#66 => D#68
  # DEBUG __args#0 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __t => D#66
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66
  # DEBUG __p => _2
  # DEBUG INLINE_ENTRY construct
  # DEBUG this => D#63
  # DEBUG D#62 => D#64
  # DEBUG __args#0 => D#62
  # DEBUG __t => D#62
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#1 => 2
  # DEBUG __p => _2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111346 => D#1
  # DEBUG BEGIN_STMT
  # DEBUG __p => NULL
  *_2 = _24;
  # DEBUG __p => NULL
  # DEBUG __p => NULL
  # DEBUG __new_finish => 0B
  # DEBUG D#118 => &this_4(D)->D.90158
  # DEBUG this => D#118
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#124 => &MEM[(struct _Vector_base *)this_4(D)]._M_impl
  # DEBUG this => NULL
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG D#117 => D#124
  # DEBUG __first => __old_start_8
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __uninitialized_move_if_noexcept_a
  # DEBUG __alloc => D#117
  # DEBUG D#116 => D#117
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG __i => __old_start_8
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __old_start_8
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG D#113 => D#116
  # DEBUG __first => __old_start_8
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __uninitialized_copy_a
  # DEBUG D.112136 => D#113
  # DEBUG __first => __old_start_8
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY uninitialized_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __old_start_8
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => __old_start_8
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __old_start_8
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __old_start_8
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __old_start_8
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => iftmp.0_36
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __old_start_8
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __old_start_8
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __old_start_8
  # DEBUG __last => __position_10
  # DEBUG __result => iftmp.0_36
  # DEBUG INLINE_ENTRY __copy_m
  # DEBUG _Num => _25 /[ex] 2
  if (__old_start_8 != __position_10)
    goto <bb 14>; [53.47%]
  else
    goto <bb 15>; [46.53%]

  <bb 14> [local count: 573737113]:
  __builtin_memmove (iftmp.0_36, __old_start_8, _1);

  <bb 15> [local count: 1073007505]:
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG __first => D#111
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __last => D#112
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D#114 => {CLOBBER}
  # DEBUG __first => D#114
  # DEBUG D#115 => {CLOBBER}
  # DEBUG __last => D#115
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __new_finish => _2
  _7 = _1 + 2;
  __new_finish_17 = iftmp.0_36 + _7;
  # DEBUG __new_finish => __new_finish_17
  # DEBUG D#119 => &this_4(D)->D.90158
  # DEBUG this => D#119
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__position
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG D#117 => D#124
  # DEBUG __first => __position_10
  # DEBUG __last => __old_finish_9
  # DEBUG __result => __new_finish_17
  # DEBUG INLINE_ENTRY __uninitialized_move_if_noexcept_a
  # DEBUG __alloc => D#117
  # DEBUG D#116 => D#117
  # DEBUG __i => __old_finish_9
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __old_finish_9
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __make_move_if_noexcept_iterator
  # DEBUG this => NULL
  # DEBUG __i => __position_10
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG __i => NULL
  # DEBUG D#113 => D#116
  # DEBUG __first => __position_10
  # DEBUG __last => __old_finish_9
  # DEBUG __result => __new_finish_17
  # DEBUG INLINE_ENTRY __uninitialized_copy_a
  # DEBUG D.112088 => D#113
  # DEBUG __first => __position_10
  # DEBUG __last => __old_finish_9
  # DEBUG __result => __new_finish_17
  # DEBUG INLINE_ENTRY uninitialized_copy
  # DEBUG __assignable => 1
  # DEBUG __first => __position_10
  # DEBUG __last => __old_finish_9
  # DEBUG __result => __new_finish_17
  # DEBUG INLINE_ENTRY __uninit_copy
  # DEBUG __first => __position_10
  # DEBUG __last => __old_finish_9
  # DEBUG __result => __new_finish_17
  # DEBUG INLINE_ENTRY copy
  # DEBUG __it => __old_finish_9
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __old_finish_9
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#105 => {CLOBBER}
  # DEBUG __it => D#105
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#104
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG D#106 => {CLOBBER}
  # DEBUG __it => D#106
  # DEBUG __first => __position_10
  # DEBUG __last => __old_finish_9
  # DEBUG __result => __new_finish_17
  # DEBUG INLINE_ENTRY __copy_move_a2
  # DEBUG __it => __new_finish_17
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __old_finish_9
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __it => __position_10
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __it => NULL
  # DEBUG __first => __position_10
  # DEBUG __last => __old_finish_9
  # DEBUG __result => __new_finish_17
  # DEBUG INLINE_ENTRY __copy_move_a
  # DEBUG __simple => 1
  # DEBUG __first => __position_10
  # DEBUG __last => __old_finish_9
  # DEBUG __result => __new_finish_17
  # DEBUG INLINE_ENTRY __copy_m
  _20 = __old_finish_9 - __position_10;
  # DEBUG _Num => _20 /[ex] 2
  if (__old_finish_9 != __position_10)
    goto <bb 16>; [53.47%]
  else
    goto <bb 17>; [46.53%]

  <bb 16> [local count: 573737113]:
  _19 = (long unsigned int) _20;
  __builtin_memmove (__new_finish_17, __position_10, _19);

  <bb 17> [local count: 1073007505]:
  _18 = (long unsigned int) _20;
  _16 = __new_finish_17 + _18;
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __result => NULL
  # DEBUG __it => NULL
  # DEBUG __it => NULL
  # DEBUG D#107 => {CLOBBER}
  # DEBUG __first => D#107
  # DEBUG D#108 => {CLOBBER}
  # DEBUG __last => D#108
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#109 => {CLOBBER}
  # DEBUG __first => D#109
  # DEBUG D#110 => {CLOBBER}
  # DEBUG __last => D#110
  # DEBUG __result => NULL
  # DEBUG __last => NULL
  # DEBUG __first => NULL
  # DEBUG D#111 => {CLOBBER}
  # DEBUG __first => D#111
  # DEBUG D#112 => {CLOBBER}
  # DEBUG __last => D#112
  # DEBUG __result => NULL
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG D#114 => {CLOBBER}
  # DEBUG __first => D#114
  # DEBUG D#115 => {CLOBBER}
  # DEBUG __last => D#115
  # DEBUG __first => NULL
  # DEBUG __last => NULL
  # DEBUG __result => NULL
  # DEBUG __new_finish => _16
  # DEBUG D#120 => &this_4(D)->D.90158
  # DEBUG this => D#120
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG D#28 => __old_start_8
  # DEBUG D#29 => __old_finish_9
  # DEBUG D#30 => D#124
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112073 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#123 => this_4(D)->D.90158._M_impl._M_end_of_storage
  # DEBUG D#122 => D#123 - __old_start_8
  # DEBUG D#121 => D#122 /[ex] 2
  # DEBUG D#42 => D#126
  # DEBUG D#43 => (long unsigned int) D#121
  # DEBUG __p => __old_start_8
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (__old_start_8 != 0B)
    goto <bb 18>; [53.47%]
  else
    goto <bb 19>; [46.53%]

  <bb 18> [local count: 573737113]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => __old_start_8
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => __old_start_8
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112071 => D#34
  operator delete (__old_start_8);
  # DEBUG __p => NULL

  <bb 19> [local count: 1073007505]:
  # DEBUG __p => NULL
  this_4(D)->D.90158._M_impl._M_start = iftmp.0_36;
  this_4(D)->D.90158._M_impl._M_finish = _16;
  _11 = iftmp.8_48 * 2;
  _12 = iftmp.0_36 + _11;
  this_4(D)->D.90158._M_impl._M_end_of_storage = _12;
  return;

}



;; Function foo (_Z3fooRKN3SOA9ContainerISt6vector13s_decayvertexJEEE, funcdef_no=4664, decl_uid=89013, cgraph_uid=997, symbol_order=1457)

Points-to analysis

Constraints:

ANYTHING = &ANYTHING
ESCAPED = *ESCAPED
ESCAPED = ESCAPED + UNKNOWN
*ESCAPED = NONLOCAL
NONLOCAL = &NONLOCAL
NONLOCAL = &ESCAPED
INTEGER = &ANYTHING
v = &NONLOCAL
S.0+64 = v
_23 = *v + 64
_24 = *v + 128
_25 = _24
_25 = _23
_26 = _25
_26 = &NONLOCAL
_27 = _26
S.64+64 = &NULL
S.128+64 = &NULL
S.192+64 = &NULL
_44 = _27
_44 = &NONLOCAL
ESCAPED = _44
HEAP(22) = &NONLOCAL
_45 = &HEAP(22)
iftmp.0_46 = &NULL
iftmp.0_46 = _45
S.64+64 = iftmp.0_46
S.128+64 = iftmp.0_46
_36 = _27
_36 = &NONLOCAL
_37 = iftmp.0_46 + UNKNOWN
S.192+64 = _37
__first_39 = iftmp.0_46
__first_39 = __first_41
__niter_38 = _27
__niter_38 = __niter_40
derefaddrtmp(30) = &NULL
*__first_39 = derefaddrtmp(30)
__niter_40 = __niter_38
__niter_40 = &NONLOCAL
__first_41 = __first_39 + 16
S.128+64 = __first_39
_28 = S.128+64
_29 = S.64+64
__value_31 = &NULL
__value_31 = __value_33
__first$_M_current_30 = _29
__first$_M_current_30 = _34
_32 = __value_31
*__first$_M_current_30 = _32
__value_33 = __value_31
__value_33 = &NONLOCAL
_34 = __first$_M_current_30 + 16
_17 = S.0+64
SS.0+64 = _17
SS.64+64 = &NULL
SS.128+64 = &NULL
SS.192+64 = &NULL
D.112584 = &SS.64+64
_19 = S.128+64
D.112585 = _19
_20 = S.64+64
D.112586 = _20
__first = D.112586
__last = D.112585
__result = D.112584
__first$_M_current_47 = __first
__first$_M_current_49 = __first$_M_current_47
__first$_M_current_49 = _59
_48 = __last
_50 = *__first$_M_current_49
_52 = SS.0+64
_53 = _50
_54 = *_52 + 64
_55 = _53
_55 = &NONLOCAL
_56 = _54 + UNKNOWN
_57 = *_56
_58 = __result
_60 = *_58 + 64
_61 = *_58 + 128
_62 = *__first$_M_current_49
*_60 = _62
_63 = _60 + 16
*_58 + 64 = _63
D.112708 = _60
ESCAPED = _58
ESCAPED = D.112708
ESCAPED = __first$_M_current_49
_59 = __first$_M_current_49 + 16
D.112695 = __result
D.112583 = D.112695
_8 = SS.64+64
_21 = SS.64+64
ESCAPED = _21
ESCAPED = _8
_7 = S.64+64
ESCAPED = _7
_9 = S.64+64
ESCAPED = _9

Collapsing static cycles and doing variable substitution
Building predecessor graph
Detecting pointer and location equivalences
Rewriting constraints and unifying variables
Uniting pointer but not location equivalent variables
Finding indirect cycles
Solving graph

Points-to sets

ANYTHING = { ANYTHING }
ESCAPED = { NULL ESCAPED NONLOCAL HEAP(22) SS.0+64 SS.64+64 SS.128+64 SS.192+64 }
NONLOCAL = { ESCAPED NONLOCAL }
STOREDANYTHING = { }
INTEGER = { ANYTHING }
v = { NONLOCAL }
S.0+64 = { NONLOCAL } same as v
S.64+64 = { NULL HEAP(22) }
S.128+64 = { NULL HEAP(22) }
S.192+64 = { NULL HEAP(22) }
_ZSt17__throw_bad_allocv = { }
_Znwm = { }
HEAP(22) = { NULL ESCAPED NONLOCAL }
SS.0+64 = { ESCAPED NONLOCAL }
SS.64+64 = { NULL ESCAPED NONLOCAL } same as _8
SS.128+64 = { NULL ESCAPED NONLOCAL }
SS.192+64 = { NULL ESCAPED NONLOCAL }
D.112584 = { SS.64+64 }
D.112585 = { NULL HEAP(22) } same as S.128+64
D.112586 = { NULL HEAP(22) } same as S.64+64
__first = { NULL HEAP(22) } same as S.64+64
__last = { NULL HEAP(22) } same as S.128+64
__result = { SS.64+64 } same as D.112584
D.112708 = { NULL ESCAPED NONLOCAL } same as _60
_ZNSt6vectorItSaItEE17_M_realloc_insertIJRKtEEEvN9__gnu_cxx17__normal_iteratorIPtS1_EEDpOT_ = { }
D.112695 = { SS.64+64 } same as D.112584
D.112583 = { SS.64+64 } same as D.112584
_ZdlPv = { }
_23 = { ESCAPED NONLOCAL }
_24 = { ESCAPED NONLOCAL }
_25 = { ESCAPED NONLOCAL }
_26 = { ESCAPED NONLOCAL }
_27 = { ESCAPED NONLOCAL } same as _26
_44 = { ESCAPED NONLOCAL } same as _26
_45 = { HEAP(22) }
iftmp.0_46 = { NULL HEAP(22) } same as S.64+64
_36 = { ESCAPED NONLOCAL } same as _26
_37 = { NULL HEAP(22) }
__first_39 = { NULL HEAP(22) } same as S.128+64
__first_41 = { NULL HEAP(22) }
__niter_38 = { ESCAPED NONLOCAL } same as _26
__niter_40 = { ESCAPED NONLOCAL } same as _26
derefaddrtmp(30) = { NULL }
_28 = { NULL HEAP(22) } same as S.128+64
_29 = { NULL HEAP(22) } same as S.64+64
__value_31 = { NULL NONLOCAL }
__value_33 = { NULL NONLOCAL } same as __value_31
__first$_M_current_30 = { NULL HEAP(22) }
_34 = { NULL HEAP(22) }
_32 = { NULL NONLOCAL } same as __value_31
_17 = { NONLOCAL } same as v
_19 = { NULL HEAP(22) } same as S.128+64
_20 = { NULL HEAP(22) } same as S.64+64
__first$_M_current_47 = { NULL HEAP(22) } same as S.64+64
__first$_M_current_49 = { NULL HEAP(22) }
_59 = { NULL HEAP(22) }
_48 = { NULL HEAP(22) } same as S.128+64
_50 = { NULL ESCAPED NONLOCAL }
_52 = { ESCAPED NONLOCAL } same as SS.0+64
_53 = { NULL ESCAPED NONLOCAL } same as _50
_54 = { ESCAPED NONLOCAL }
_55 = { NULL ESCAPED NONLOCAL }
_56 = { ESCAPED NONLOCAL }
_57 = { ESCAPED NONLOCAL }
_58 = { SS.64+64 } same as D.112584
_60 = { NULL ESCAPED NONLOCAL }
_61 = { NULL ESCAPED NONLOCAL }
_62 = { NULL ESCAPED NONLOCAL } same as _50
_63 = { NULL ESCAPED NONLOCAL }
_8 = { NULL ESCAPED NONLOCAL }
_21 = { NULL ESCAPED NONLOCAL } same as _8
_7 = { NULL HEAP(22) } same as S.64+64
_9 = { NULL HEAP(22) } same as S.64+64


Alias information for void foo(const SOA::Container<std::vector, s_decayvertex>&)

Aliased symbols

SS, UID D.104295, struct SelectionView, is addressable

Call clobber information

ESCAPED, points-to non-local, points-to NULL, points-to vars: { D.104295 D.112709 } (escaped)

Flow-insensitive points-to information

v_2(D), points-to non-local, points-to NULL, points-to vars: { }
_7, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_8, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_9, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_17, points-to non-local, points-to NULL, points-to vars: { }
_19, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_20, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_21, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_23, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_24, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_28, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_29, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
__first$_M_current_30, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_34, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_37, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
__first_39, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
__first_41, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_45, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
iftmp.0_46, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
__first$_M_current_47, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_48, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
__first$_M_current_49, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_52, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_54, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_56, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_58, points-to NULL, points-to vars: { D.104295 } (escaped)
_59, points-to NULL, points-to vars: { D.112709 } (escaped, escaped heap)
_60, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_61, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }
_63, points-to non-local, points-to escaped, points-to NULL, points-to vars: { }

foo (const struct Container & v)
{
  struct __normal_iterator D.112708;
  const short unsigned int * __first$_M_current;
  struct back_insert_iterator D.112695;
  struct __normal_iterator __first;
  struct __normal_iterator __last;
  struct back_insert_iterator __result;
  short unsigned int * D.112657;
  long unsigned int __niter;
  short unsigned int * __first;
  int __value;
  short unsigned int * __first$_M_current;
  struct __normal_iterator D.112586;
  struct __normal_iterator D.112585;
  struct back_insert_iterator D.112584;
  struct back_insert_iterator D.112583;
  struct SelectionView SS;
  struct SelectionView S;
  short unsigned int * _7;
  short unsigned int * _8;
  short unsigned int * _9;
  const struct container_t & _17;
  short unsigned int * _19;
  short unsigned int * _20;
  short unsigned int * _21;
  struct vertex_t * _23;
  struct vertex_t * _24;
  long int _25;
  long int _26;
  long unsigned int _27;
  short unsigned int * _28;
  short unsigned int * _29;
  short unsigned int _32;
  short unsigned int * _34;
  long unsigned int _36;
  short unsigned int * _37;
  long unsigned int _44;
  short unsigned int * _45;
  short unsigned int * iftmp.0_46;
  const short unsigned int * _48;
  short unsigned int _50;
  const struct container_t & _52;
  long unsigned int _53;
  struct vertex_t * _54;
  long unsigned int _55;
  struct value_type & _56;
  float _57;
  struct vector * _58;
  const short unsigned int * _59;
  short unsigned int * _60;
  short unsigned int * _61;
  short unsigned int _62;
  short unsigned int * _63;

  <bb 2> [local count: 1073741826]:
  # DEBUG BEGIN_STMT
  # DEBUG this => &S
  # DEBUG container => v_2(D)
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&S] ={v} {CLOBBER};
  S.m_container = v_2(D);
  # DEBUG this => &D.112610
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => &D.112610
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#92 => &MEM[(const struct container_t *)v_2(D)].D.104277.D.104204.D.103696
  # DEBUG this => D#92
  # DEBUG INLINE_ENTRY size
  # DEBUG D#12 => &D#92->m_storage
  # DEBUG __t => D#12
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#5 => &MEM[(const struct tuple *)D#12].D.94746
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#5
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#4 => &D#5->D.93464
  # DEBUG __b => D#4
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#13 => &MEM[(const struct _Head_base &)D#92]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  _23 = MEM[(struct vertex_t * *)v_2(D) + 8B];
  # DEBUG D#11 => D#13
  _24 = MEM[(struct vertex_t * *)v_2(D) + 16B];
  # DEBUG D#11 => D#13
  # DEBUG INLINE_ENTRY size
  # DEBUG this => D#11
  # DEBUG this => D#11
  _25 = _24 - _23;
  _26 = _25 /[ex] 4;
  _27 = (long unsigned int) _26;
  # DEBUG this => NULL
  # DEBUG this => &S.m_indices
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#140 => D#139
  # DEBUG __a => D#140
  # DEBUG D#91 => &MEM[(struct vector *)&S + 8B].D.90158
  # DEBUG this => D#91
  # DEBUG __n => _27
  # DEBUG __a => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#82 => &D#91->_M_impl
  # DEBUG this => D#82
  # DEBUG __a => NULL
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&S + 8] ={v} {CLOBBER};
  # DEBUG this => D#82
  # DEBUG __a => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#82
  # DEBUG D.112624 => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG D.112624 => NULL
  # DEBUG this => NULL
  # DEBUG __a => NULL
  MEM[(struct _Vector_impl *)&S + 8B]._M_start = 0B;
  MEM[(struct _Vector_impl *)&S + 8B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&S + 8B]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG __a => NULL
  # DEBUG this => D#91
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY _M_create_storage
  # DEBUG D#80 => D#91
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY _M_allocate
  # DEBUG this => D#80
  # DEBUG D#79 => D#80
  if (_27 != 0)
    goto <bb 3>; [71.00%]
  else
    goto <bb 6>; [29.00%]

  <bb 3> [local count: 762356702]:
  # DEBUG D#78 => &D#79->_M_impl
  # DEBUG D#77 => D#78
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY allocate
  # DEBUG __a => D#77
  # DEBUG D#76 => D#77
  # DEBUG D#74 => D#76
  # DEBUG D#75 => 0B
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY allocate
  # DEBUG this => D#74
  # DEBUG D.112655 => D#75
  # DEBUG D#73 => D#74
  # DEBUG D#72 => D#73
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#72
  if (_25 < 0)
    goto <bb 4>; [0.04%]
  else
    goto <bb 5>; [99.96%]

  <bb 4> [local count: 304941]:
  std::__throw_bad_alloc ();

  <bb 5> [local count: 762051753]:
  _44 = _27 * 2;
  _45 = operator new (_44);
  # DEBUG __n => NULL
  # DEBUG __n => NULL

  <bb 6> [local count: 1073436885]:
  # iftmp.0_46 = PHI <0B(2), _45(5)>
  # DEBUG __n => NULL
  MEM[(struct _Vector_base *)&S + 8B]._M_impl._M_start = iftmp.0_46;
  MEM[(struct _Vector_base *)&S + 8B]._M_impl._M_finish = iftmp.0_46;
  _36 = _27 * 2;
  _37 = iftmp.0_46 + _36;
  MEM[(struct _Vector_base *)&S + 8B]._M_impl._M_end_of_storage = _37;
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG __a => NULL
  # DEBUG D#90 => &S.m_indices
  # DEBUG D#90 => &S.m_indices
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY _M_default_initialize
  # DEBUG D#89 => D#90
  # DEBUG this => D#89
  # DEBUG this => D#90
  # DEBUG D#87 => &D#89->D.90158
  # DEBUG this => D#87
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#88 => &MEM[(struct _Vector_base *)D#89]._M_impl
  # DEBUG this => NULL
  # DEBUG D#86 => D#88
  # DEBUG __first => iftmp.0_46
  # DEBUG __n => _27
  # DEBUG INLINE_ENTRY __uninitialized_default_n_a

  <bb 7> [local count: 9758517119]:
  # __first_39 = PHI <iftmp.0_46(6), __first_41(8)>
  # __niter_38 = PHI <_27(6), __niter_40(8)>
  # DEBUG __niter => __niter_38
  # DEBUG __first => __first_39
  if (__niter_38 == 0)
    goto <bb 9>; [11.00%]
  else
    goto <bb 8>; [89.00%]

  <bb 8> [local count: 8685080224]:
  *__first_39 = 0;
  __niter_40 = __niter_38 + 18446744073709551615;
  # DEBUG __niter => __niter_40
  __first_41 = __first_39 + 2;
  # DEBUG __first => __first_41
  goto <bb 7>; [100.00%]

  <bb 9> [local count: 1073436885]:
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __tmp => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG __first => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  MEM[(short unsigned int * *)&S + 16B] = __first_39;
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG this => NULL
  # DEBUG __n => NULL
  # DEBUG __first => NULL
  # DEBUG __niter => NULL
  # DEBUG __a => NULL
  # DEBUG this => &D.112610
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => &D.112610
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D#93 => &S.m_indices
  # DEBUG this => D#93
  # DEBUG INLINE_ENTRY end
  # DEBUG D#14 => &MEM[(struct vector *)D#93].D.90158._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#14
  # DEBUG INLINE_ENTRY __ct 
  _28 = MEM[(short unsigned int * const &)&S + 16];
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG D#94 => &S.m_indices
  # DEBUG this => D#94
  # DEBUG INLINE_ENTRY begin
  # DEBUG D#15 => &MEM[(struct vector *)D#94].D.90158._M_impl._M_start
  # DEBUG this => NULL
  # DEBUG __i => D#15
  # DEBUG INLINE_ENTRY __ct 
  _29 = MEM[(short unsigned int * const &)&S + 8];
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG this => NULL
  # DEBUG __first => _29
  # DEBUG __last => _28
  # DEBUG __value => 0
  # DEBUG INLINE_ENTRY iota
  # DEBUG __first$_M_current => _29

  <bb 10> [local count: 9758517083]:
  # __value_31 = PHI <0(9), __value_33(11)>
  # __first$_M_current_30 = PHI <_29(9), _34(11)>
  # DEBUG __first$_M_current => __first$_M_current_30
  # DEBUG __value => __value_31
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_28 != __first$_M_current_30)
    goto <bb 11>; [89.00%]
  else
    goto <bb 12>; [11.00%]

  <bb 11> [local count: 8685080197]:
  _32 = (short unsigned int) __value_31;
  # DEBUG D#16 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#16
  *__first$_M_current_30 = _32;
  __value_33 = __value_31 + 1;
  # DEBUG __value => __value_33
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _34 = __first$_M_current_30 + 2;
  # DEBUG __first$_M_current => _34
  goto <bb 10>; [100.00%]

  <bb 12> [local count: 1073436876]:
  # DEBUG __value => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG D#95 => {CLOBBER}
  # DEBUG __first => D#95
  # DEBUG D#96 => {CLOBBER}
  # DEBUG __last => D#96
  # DEBUG this => NULL
  # DEBUG container => NULL
  # DEBUG __first$_M_current => NULL
  # DEBUG __value => NULL
  # DEBUG BEGIN_STMT
  # DEBUG D#134 => &D.104305
  # DEBUG this => &SS
  # DEBUG old_selection => &S
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG predicate_i => D#134
  # DEBUG D#133 => D#134
  MEM[(struct  &)&SS] ={v} {CLOBBER};
  _17 = S.m_container;
  SS.m_container = _17;
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#32 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#32
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#31 => &D#32->_M_impl
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  MEM[(struct  &)&SS + 8] ={v} {CLOBBER};
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#31
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct _Vector_impl *)&SS + 8B]._M_start = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_finish = 0B;
  MEM[(struct _Vector_impl *)&SS + 8B]._M_end_of_storage = 0B;
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG D.112352 => D#133
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY back_inserter
  # DEBUG this => NULL
  # DEBUG __x => &SS.m_indices
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG __r => &SS.m_indices
  # DEBUG INLINE_ENTRY __addressof
  # DEBUG __r => NULL
  # DEBUG this => NULL
  # DEBUG __x => NULL
  MEM[(struct back_insert_iterator *)&D.112584] = &SS.m_indices;
  # DEBUG __x => NULL
  # DEBUG D#131 => &S.m_indices
  _19 = MEM[(short unsigned int * *)&S + 16B];
  # DEBUG D#17 => D#131
  # DEBUG INLINE_ENTRY end
  # DEBUG this => D#17
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.112585] = _19;
  # DEBUG D#132 => &S.m_indices
  _20 = MEM[(short unsigned int * *)&S + 8B];
  # DEBUG D#18 => D#132
  # DEBUG INLINE_ENTRY begin
  # DEBUG this => D#18
  # DEBUG this => NULL
  # DEBUG __i => NULL
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.112586] = _20;
  # DEBUG D#130 => NULL
  __first = D.112586;
  __last = D.112585;
  __result = D.112584;
  # DEBUG INLINE_ENTRY copy_if
  __first$_M_current_47 = MEM[(struct __normal_iterator *)&__first];
  # DEBUG __first$_M_current => __first$_M_current_47

  <bb 13> [local count: 9758516964]:
  # __first$_M_current_49 = PHI <__first$_M_current_47(12), _59(18)>
  # DEBUG __first$_M_current => __first$_M_current_49
  # DEBUG __lhs => &__first
  # DEBUG __rhs => &__last
  # DEBUG INLINE_ENTRY operator!=
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__last
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _48 = MEM[(const short unsigned int * const &)&__last];
  # DEBUG __lhs => NULL
  # DEBUG __rhs => NULL
  if (_48 != __first$_M_current_49)
    goto <bb 14>; [89.00%]
  else
    goto <bb 19>; [11.00%]

  <bb 14> [local count: 8685080097]:
  # DEBUG D#19 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#19
  _50 = *__first$_M_current_49;
  # DEBUG this => NULL
  # DEBUG i => _50
  # DEBUG INLINE_ENTRY operator()
  # DEBUG D#61 => NULL
  _52 = SS.m_container;
  # DEBUG D#58 => &_52->D.104277.D.104204.D.103696
  _53 = (long unsigned int) _50;
  # DEBUG this => D#58
  # DEBUG idx => _53
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG D#129 => &MEM[(const struct _View *)_52].m_storage
  # DEBUG this => NULL
  # DEBUG D.112672 => D#129
  # DEBUG D.112671 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => D#10
  # DEBUG D.112675 => D#129
  # DEBUG D.112674 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#9 => &D#10->D.101954
  # DEBUG this => D#9
  # DEBUG D.112678 => D#129
  # DEBUG D.112677 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#8 => &D#9->D.101686
  # DEBUG this => D#8
  # DEBUG D.112681 => D#129
  # DEBUG D.112680 => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG D#7 => &D#8->D.101625
  # DEBUG this => D#7
  # DEBUG stor => D#129
  # DEBUG idx => _53
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG stor => NULL
  # DEBUG idx => NULL
  # DEBUG this => NULL
  # DEBUG D.112681 => NULL
  # DEBUG D.112680 => NULL
  # DEBUG this => NULL
  # DEBUG D.112678 => NULL
  # DEBUG D.112677 => NULL
  # DEBUG this => NULL
  # DEBUG D.112675 => NULL
  # DEBUG D.112674 => NULL
  # DEBUG this => NULL
  # DEBUG D.112672 => NULL
  # DEBUG D.112671 => NULL
  # DEBUG this => NULL
  # DEBUG idx => NULL
  # DEBUG D#57 => D#61
  # DEBUG decayvertexskin => D#129
  # DEBUG decayvertexskin$8 => _53
  # DEBUG INLINE_ENTRY operator()
  # DEBUG __closure => D#57
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY vertex
  # DEBUG this => &decayvertexskin
  # DEBUG INLINE_ENTRY _get
  # DEBUG D#56 => &MEM[(struct SkinBase *)&decayvertexskin].D.101954.D.101686
  # DEBUG this => D#56
  # DEBUG INLINE_ENTRY get
  # DEBUG D#53 => &D#56->D.101625
  # DEBUG this => D#53
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __t => D#129
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#3 => &MEM[(struct tuple *)D#129].D.94746
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => D#3
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#2 => &D#3->D.93464
  # DEBUG __b => D#2
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D#54 => &MEM[(struct _Head_base &)D#129]._M_head_impl
  # DEBUG __b => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG __t => NULL
  # DEBUG D#55 => &D#56->D.101625
  # DEBUG this => D#55
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  _54 = MEM[(struct vertex_t * *)_52 + 8B];
  # DEBUG D#6 => D#54
  # DEBUG __n => _53
  # DEBUG INLINE_ENTRY operator[]
  # DEBUG this => D#6
  _55 = _53 * 4;
  _56 = _54 + _55;
  # DEBUG __n => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  _57 = _56->k;
  # DEBUG D#59 => {CLOBBER}
  # DEBUG decayvertexskin => D#59
  # DEBUG D#60 => {CLOBBER}
  # DEBUG decayvertexskin$8 => D#60
  # DEBUG this => NULL
  # DEBUG i => NULL
  if (_57 > 3.0e+0)
    goto <bb 15>; [33.00%]
  else
    goto <bb 18>; [67.00%]

  <bb 15> [local count: 2866076432]:
  # DEBUG D#19 => &__first
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => D#19
  # DEBUG this => &__result
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG this => &__result
  # DEBUG __value => __first$_M_current_49
  # DEBUG INLINE_ENTRY operator=
  _58 = __result.container;
  # DEBUG this => _58
  # DEBUG __x => __first$_M_current_49
  # DEBUG INLINE_ENTRY push_back
  _60 = _58->D.90158._M_impl._M_finish;
  _61 = _58->D.90158._M_impl._M_end_of_storage;
  if (_60 != _61)
    goto <bb 16>; [82.57%]
  else
    goto <bb 17>; [17.43%]

  <bb 16> [local count: 2366519310]:
  # DEBUG D#128 => &_58->D.90158._M_impl
  # DEBUG D#67 => D#128
  _62 = *__first$_M_current_49;
  # DEBUG D#68 => __first$_M_current_49
  # DEBUG __p => _60
  # DEBUG INLINE_ENTRY construct
  # DEBUG __a => D#67
  # DEBUG D#66 => D#68
  # DEBUG __args#0 => D#66
  # DEBUG D#65 => D#67
  # DEBUG __t => D#66
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#63 => D#65
  # DEBUG D#64 => D#66
  # DEBUG __p => _60
  # DEBUG INLINE_ENTRY construct
  # DEBUG this => D#63
  # DEBUG D#62 => D#64
  # DEBUG __args#0 => D#62
  # DEBUG __t => D#62
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __t => NULL
  # DEBUG D#1 => 2
  # DEBUG __p => _60
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111346 => D#1
  # DEBUG BEGIN_STMT
  # DEBUG __p => NULL
  *_60 = _62;
  # DEBUG __p => NULL
  # DEBUG __p => NULL
  _63 = _60 + 2;
  _58->D.90158._M_impl._M_finish = _63;
  goto <bb 18>; [100.00%]

  <bb 17> [local count: 499557122]:
  # DEBUG this => _58
  # DEBUG INLINE_ENTRY end
  # DEBUG D#14 => &_58->D.90158._M_impl._M_finish
  # DEBUG this => NULL
  # DEBUG __i => D#14
  # DEBUG INLINE_ENTRY __ct 
  # DEBUG this => NULL
  # DEBUG __i => NULL
  MEM[(struct __normal_iterator *)&D.112708] = _60;
  # DEBUG this => NULL
  std::vector<short unsigned int, std::allocator<short unsigned int> >::_M_realloc_insert<const short unsigned int&> (_58, D.112708, __first$_M_current_49);

  <bb 18> [local count: 8685080097]:
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __value => NULL
  # DEBUG this => NULL
  # DEBUG this => &__first
  # DEBUG INLINE_ENTRY operator++
  _59 = __first$_M_current_49 + 2;
  # DEBUG __first$_M_current => _59
  goto <bb 13>; [100.00%]

  <bb 19> [local count: 1073436867]:
  D.112695 = __result;
  D.112583 = D.112695;
  # DEBUG __first$_M_current => NULL
  __first ={v} {CLOBBER};
  __last ={v} {CLOBBER};
  __result ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG old_selection => NULL
  # DEBUG this => &SS
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &SS.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  _8 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _8
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112437 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _8
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _8
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_8 != 0B)
    goto <bb 23>; [53.47%]
  else
    goto <bb 24>; [46.53%]

  <bb 20> [count: 0]:
<L4>:
  # DEBUG INLINE_ENTRY NULL
  # DEBUG this => NULL
  # DEBUG __value => NULL
  # DEBUG this => NULL
  # DEBUG this => &SS.m_indices
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)&SS + 8B]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_finish
  _21 = MEM[(struct vector *)&SS + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _21
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112552 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)&SS + 8B].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _21
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _21
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_21 != 0B)
    goto <bb 21>; [0.00%]
  else
    goto <bb 22>; [0.00%]

  <bb 21> [count: 0]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _21
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _21
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112562 => D#34
  operator delete (_21);
  # DEBUG __p => NULL

  <bb 22> [count: 0]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&SS + 8] ={v} {CLOBBER};
  # DEBUG this => NULL
  resx 11

  <bb 23> [local count: 573966693]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _8
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _8
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112447 => D#34
  operator delete (_8);
  # DEBUG __p => NULL

  <bb 24> [local count: 1073436867]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  MEM[(struct  &)&SS] ={v} {CLOBBER};
  # DEBUG this => NULL
  # DEBUG this => &S
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  _7 = MEM[(struct vector *)&S + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _7
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112417 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _7
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _7
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_7 != 0B)
    goto <bb 25>; [53.47%]
  else
    goto <bb 26>; [46.53%]

  <bb 25> [local count: 573966693]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _7
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _7
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112427 => D#34
  operator delete (_7);
  # DEBUG __p => NULL

  <bb 26> [local count: 1073436867]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  S ={v} {CLOBBER};
  SS ={v} {CLOBBER};
  return;

  <bb 27> [count: 0]:
<L2>:
  # DEBUG this => &S
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#52 => &S.m_indices
  # DEBUG this => D#52
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#48 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#48
  # DEBUG INLINE_ENTRY _M_get_Tp_allocator
  # DEBUG D#51 => &MEM[(struct _Vector_base *)D#52]._M_impl
  # DEBUG this => NULL
  # DEBUG D#50 => MEM[(struct vector *)D#52].D.90158._M_impl._M_finish
  _9 = MEM[(struct vector *)&S + 8B].D.90158._M_impl._M_start;
  # DEBUG D#28 => _9
  # DEBUG D#29 => D#50
  # DEBUG D#30 => D#51
  # DEBUG INLINE_ENTRY _Destroy
  # DEBUG __first => D#28
  # DEBUG __last => D#29
  # DEBUG D.112457 => D#30
  # DEBUG D#27 => D#29
  # DEBUG D#26 => D#28
  # DEBUG D#24 => D#26
  # DEBUG D#25 => D#27
  # DEBUG INLINE_ENTRY NULL
  # DEBUG __first => D#24
  # DEBUG __last => D#25
  # DEBUG D#23 => D#25
  # DEBUG D#22 => D#24
  # DEBUG D#20 => D#22
  # DEBUG D#21 => D#23
  # DEBUG INLINE_ENTRY NULL
  # DEBUG D.111115 => D#20
  # DEBUG D.111114 => D#21
  # DEBUG D#49 => &MEM[(struct vector *)D#52].D.90158
  # DEBUG this => D#49
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG D#47 => D#49->_M_impl._M_end_of_storage
  # DEBUG D#46 => D#47 - _9
  # DEBUG D#45 => D#46 /[ex] 2
  # DEBUG D#42 => D#49
  # DEBUG D#43 => (long unsigned int) D#45
  # DEBUG __p => _9
  # DEBUG INLINE_ENTRY _M_deallocate
  # DEBUG this => D#42
  # DEBUG __n => D#43
  # DEBUG D#41 => D#43
  # DEBUG D#40 => D#42
  if (_9 != 0B)
    goto <bb 28>; [0.00%]
  else
    goto <bb 29>; [0.00%]

  <bb 28> [count: 0]:
  # DEBUG D#39 => &D#40->_M_impl
  # DEBUG D#37 => D#39
  # DEBUG D#38 => D#41
  # DEBUG __p => _9
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG __a => D#37
  # DEBUG __n => D#38
  # DEBUG D#36 => D#38
  # DEBUG D#35 => D#37
  # DEBUG D#33 => D#35
  # DEBUG D#34 => D#36
  # DEBUG __p => _9
  # DEBUG INLINE_ENTRY deallocate
  # DEBUG this => D#33
  # DEBUG D.112467 => D#34
  operator delete (_9);
  # DEBUG __p => NULL

  <bb 29> [count: 0]:
  # DEBUG __p => NULL
  # DEBUG D#44 => &D#49->_M_impl
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => D#44
  # DEBUG INLINE_ENTRY __dt 
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  # DEBUG this => NULL
  resx 2

}


